Article 8676 of comp.lang.scheme:
Xref: glinda.oz.cs.cmu.edu comp.lang.scheme:8676
Path: honeydew.srv.cs.cmu.edu!rochester!udel!MathWorks.Com!europa.eng.gtefsd.com
!uhog.mit.edu!bloom-beacon.mit.edu!ai-lab!life!jaffer
From: jaffer@ai.mit.edu (Aubrey Jaffer)
Newsgroups: comp.lang.scheme
Subject: Re: slib2a1 Scheme Library released
Date: 29 Apr 94 15:46:36
Organization: MIT Artificial Intelligence Laboratory
Lines: 23
Message-ID: <JAFFER.94Apr29154636@fruity-pebbles.ai.mit.edu>
References: <JAFFER.94Apr27120925@camelot.ai.mit.edu>
NNTP-Posting-Host: fruity-pebbles.ai.mit.edu
In-reply-to: jaffer@zurich.ai.mit.edu's message of 27 Apr 94 12:09:25

shriram@cs.rice.edu (Shriram Krishnamurthi) points out a problem with
chez.init.  Here is the patch:

diff -c chez.init~ chez.init
*** chez.init~  Sun Apr 10 19:06:52 1994
--- chez.init   Fri Apr 29 15:12:07 1994
***************
*** 206,212 ****
  ;;; Define SLIB:EXIT to be the implementation procedure to exit or
  ;;; return if exitting not supported.
  (define slib:chez:quit
!   (let (arg (call-with-current-continuation (lambda (x) x)))
      (cond ((procedure? arg) arg)
          (arg (exit))
          (else (exit 1)))))
--- 206,212 ----
  ;;; Define SLIB:EXIT to be the implementation procedure to exit or
  ;;; return if exitting not supported.
  (define slib:chez:quit
!   (let ((arg (call-with-current-continuation (lambda (x) x))))
      (cond ((procedure? arg) arg)
          (arg (exit))
          (else (exit 1)))))


