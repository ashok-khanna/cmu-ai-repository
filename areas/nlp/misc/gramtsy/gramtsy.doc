
	GRAMTSY, GRAMmatical Transformational SYstem

	Peter-Arno Coppen


	What is GRAMTSY?
	----------------

	GRAMTSY is an interpreter for transformational grammars that
	work on labeled bracketings. GRAMTSY accepts grammars in a
	more or less linguistically familiar notation, and applies
	them in a straightforward way.


	For whom is GRAMTSY useful?
	---------------------------

	GRAMTSY is designed by a linguist, to be used by linguists.
	Linguists should be able to translate their transformational
	frameworks into a GRAMTSY formalism. GRAMSTY may then be used
	to examine the implications of intricate networks of transfor-
	mational rules or grammars. For example, GB linguists can
	formulate principles like case filter, theta criterium and
	projection principle to examine how they work together to
	allow only grammatical sentences.


	Who is licensed to use GRAMTSY?
	-------------------------------

	In principle, anyone may use the GRAMTSY programs without
	limitations. The few restrictions I want to make are not
	intended to decrease the number of possible users:

	(1)	GRAMTSY may be distributed freely, but only as a
		whole. More specifically, this file should be
		distributed with every copy of GRAMTSY, unaltered.

	(2)	GRAMTSY may not be distributed commercially. That
		is to say, you are allowed to incorporate GRAMTSY
		into commercial products, but this should not af-
		fect the price.

	(3)	If you use GRAMTSY in scientific research and write
		an article about the grammar you have written, you
		should refer to one of the publications about GRAMTSY
		by the author. Mail me.


	How should GRAMTSY be prepared for use?
	---------------------------------------

	Included in this package are all executable modules needed
	to run the GRAMTSY system (PREPROC.EXE, GRAMTSY4.EXE, GRAMTSYL.EXE
        and GRAMTSY4.ERF). If you don't have a SNOBOL or SPITBOL compiler
	at hand, these are the only four files you need to run the
	entire system. Read the manual for detailed instructions.
	The manual is provided as a LaTeX source file. You can read this
	as it is, or let LaTeX format it. There are several public
	domain versions of LaTeX available.

	Furthermore, all source files are included, to enable SNOBOL
	users to benefit from more powerful implementations of the
	SNOBOL or SPITBOL programming language (such as the SPITBOL
	implementation for 386 computers by Catspaw Inc). If you do
	have a SNOBOL or SPITBOL compiler at your disposal, you can
	generate your own specific GRAMTSY system.

	Source files for different implementations of SNOBOL are
	combined in files with extension SPM. As of this writing,
	the SPM-files include source files for the following com-
	pilers:

		(1)	Macro Spitbol, by Robert B.K. Dewar
			for all MSDOS machines
		(2)	SNOBOL4+, by Mark B. Emmer (Catspaw)
			for all MSDOS machines
		(3)	SPITBOL370, by Robert B.K. Dewar (DISC)
			for VM/CMS machines
		(4)	SPIT386, by Robert B.K. Dewar and Mark
			B. Emmer (Catspaw), for 386 machines
		(5)	VAX SPITBOL, from DISC, for Unix machines

	The executable modules that are included in this package
	are generated with the Macro Spitbol compiler. If you
        have this compiler, you probably don't need to generate
	your own version of GRAMTSY (unless the long expected new
	version of the compiler has become available). Because of
	the limited memory space of the Macro Spitbol implementation,
	several versions of GRAMTSY have been made possible (in par-
	ticular, lexicon access can be left out).

	To generate your own version of GRAMTSY, you should follow
	this procedure:

	(1)	If you have the Macro Spitbol compiler, or the
		SNOBOL4+ compiler, select the following files
		on a floppy disk or in a subdirectory:

		-   PREPROC.SPM
		-   GRAMTSY4.SPM
		-   GENSPM.SPT (if you have the Macro Spitbol compiler)
		-   GENSPM.SNO (if you have the SNOBOL4+ compiler)

	(2)	Make sure your compiler can be reached.

	(3)	Generate your version of the preprocessor by means of
		one of the following commands:

                SNOBOL4 GENSPM ;PREPROC.SNO 'SNO'

		or

                SPITBOL GENSPM ;PREPROC.SPT 'PCX'

	(3)	Generate your version of GRAMTSY by means of one of
		the following commands:

                SNOBOL4 GENSPM ;GRAMTSY4.SNO 'SNO'

		or

                SPITBOL GENSPM ;GRAMTSY4.SPT 'PCX'

		or

                SPITBOL GENSPM ;GRAMTSY4.SPT 'PC' ANY('XL')

	If you have got another SNOBOL or SPITBOL compiler, you have to
	adapt the GENSPM.SNO or GENSPM.SPT files, and possibly both
	SPM-files. There are three sections of the programs in which
	changes are likely to be necessary:

		(1) the IO-section
		(2) the parameter handling (&PARM or HOST(1))
		(3) Special keywords (&CASE, &STLIMIT, etc)


	Which changes are allowed in the GRAMTSY sources?
	-------------------------------------------------

	In principle anyone is allowed to make any changes he or she
	likes. However, if the PREPROC.SPM or GRAMTSY4.SPM is changed
	this should be made clear by adding a statement:

                TERMINAL = "Changed by <enter your name here>"

	This statement should be executed in every GRAMTSY or PREPROC
	run, along with the identification message at the beginning
	of the Main program.

	If you want to make changes to one of the programs other than
	the changes mentioned in the last paragraph, you should take
	the following into consideration:

	-	Both PREPROC.SPM and GRAMTSY4.SPM are the result of
		5 years programming. It may be that there are bugs
		left in the programs, but most major decisions have
		been carefully tested.	As a result, some parts of
		the programs seem to contradict principles of
		efficient SNOBOL4 programming. For example, you may
		notice that the GRAMTSY4.SPM contains quite a few
		inline patterns. This may seem less efficient, but
		in the Macro Spitbol implementation the major problem
		is not speed, but memory. And a defined pattern takes
		more space (extra variable) than an inline pattern.
                What's more, real SPITBOL implementations precompile
		inline patterns as much as possible, so there is
		almost no speed penalty for a memory gain.

	-	Contrary to most SNOBOL4 programs (which are often
                "quick and dirty") I like to think of PREPROC.SPM
		and GRAMTSY4.SPM (especially the latter) as pretty
		carefully coded. You will notice that the GRAMSTY4.SPM
		is highly structured and documented: functions are
		thematically ordered, and every function is documented
		in the same way. Moreover, all variables are coded in
		a special way:

		(a)	Local variables and Arguments all end in an
			underscore.
		(b)	System patterns start with SysP.
		(c)	Other system variables (with very few exceptions)
			start with Sys.

		As far as I can see, variables that are global are
		always *meant* to be global. Do not change this!

	Should you want to make changes anyway, I would appreciate if
	you write me about them. If your changes make sense, I will
        add them to the "official" version.



	What is the latest version of GRAMTSY?
	--------------------------------------

	As of this writing, version 4.10 is the current version. If
	you want me to keep you informed about the latest versions
	(which are in principle free of charge), send $25 (or the
	equivalent in other currencies) to:

		Peter-Arno Coppen
		Van Beethovenstraat 87
		NL-6521 EM Nijmegen
		The Netherlands

	You will be officially registered as a GRAMTSY user and
	receive all update notices. Furthermore, the first three
	new releases will be sent to you.

	For questions, or help with GRAMTSY grammars, I can be
	reached via e-mail, address:

		U250005@HNYKUN11.BITNET

	If you mail me via e-mail, and I can send you GRAMTSY
        via e-mail, don't send the $25.

