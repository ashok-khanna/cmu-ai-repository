This file lists some of the systems *NOT* included in this directory,
for various reasons (e.g., the package being commercial).  The entries
in this list are based on Nici Schraudolph's survey.

----------------------------------------------------------------
Splicer:
-------

Splicer is a genetic algorithm tool that can be used to solve search and
optimization problems, created by the Software Technology Branch (STB) of
the Information Systems Directorate at NASA/Johnson Space Center with
support from the MITRE Corporation.  Splicer was written in C on an Apple
Macintosh, then ported to Unix workstations running X11; it has a modular
architecture with well-defined interfaces between a GA kernel, represen-
tation libraries, fitness modules, and user interface libraries.

The representation libraries contain functions for defining, creating,
and decoding genetic strings, as well as multiple crossover and mutation
operators.  Libraries supporting binary strings and permutations are
provided, others can be created by the user.

Fitness modules are typically written by the user, although some sample
applications are provided.  The modules may contain a fitness function,
initial values for various control parameters, and a function which
graphically displays the best solutions.

Splicer provides event-driven graphic user interface libraries for the
Macintosh and the X11 window system (using the HP widget set); a menu-
driven ASCII interface is also available though not fully supported.
The extensive documentation includes a reference manual and a user's
manual; an architecture manual and the advanced programmer's manual
are currently being written.

An electronic bulletin board (300/1200/2400 baud, 8N1) with information
regarding Splicer can be reached at (713) 280-3896 or (713) 280-3892.
Splicer is available free to NASA and its contractors for use on government
projects by calling the STB Help Desk weekdays 9am-4pm CST at (713) 280-2233.
Government contractors should have their contract monitor call the STB Help
Desk; others may purchase Splicer for $221 (incl. documentation) from:

    COSMIC                    Phone: (706) 542-3265
    382 E. Broad St.
    Athens, GA 30602
    U.S.A.

     Splicer     Steve Bayer <bayer@galileo.jsc.nasa.gov>

----------------------------------------------------------------
WOLF:
----

This is a simulator for the G/SPLINES (genetic spline models) algorithm
which builds spline-based functional models of experimental data, using
crossover and mutation to evolve a population towards a better fit.  It
is derived from Friedman's MARS models. The original work was presented
at ICGA-4, and further results including additional basis function types
such as B-splines have been presented at the NIPS-91 meeting.

Available at no cost via anonymous FTP by contacting the author; runs
on SUN (and possibly any SYSV) UNIX box.  Macintosh version available
on floppy disk for a $20 fee.  Both versions can be redistributed for
noncommercial use.  Simulator includes executable and C source code;
a technical report (RIACS tech report 91.10) is also available.

    David Rogers (drogers@riacs.edu)
    MS Ellis, NASA Ames Research Center
    Moffett Field, CA 94035

----------------------------------------------------------------
ESCaPaDE:
--------

ESCaPaDE is a sophisticated software environment to run experiments
with Evolutionary Algorithms, such as e.g. an Evolution Strategy.
Future versions of the software will provide a well-defined interface
to any kind of Evolutionary Algorithm, for instance Genetic Algorithms.
The main support for experimental work is provided by two internal
tables:
    (1) a table of objective functions and
    (2) a table of so-called data monitors,

which allow easy implementation of functions for monitoring all types
of information inside the Evolutionary Algorithm under experiment.

ESCaPaDE 1.2 comes with the KORR implementation of the Evolution
Strategy by H.-P. Schwefel which offers simple and correlated mutations.
KORR is provided as a FORTRAN 77 subroutine, and its cross-compiled
C version is used internally by ESCaPaDE.

ESCaPaDE 1.2 will be available by e-mail request in order to track the
spread of the software as this is its first public release.  An extended
version of the package was used for several investigations so far and
has proven to be very reliable.  The software and its documentation is
fully copyrighted although it may be freely used for scientific work;
it requires 5-6 MB of disk space.

In order to obtain ESCaPaDE via mail request, please send a message to

   Frank Hoffmeister <iwan@ls11.informatik.uni-dortmund.de>

The SUBJECT line should contain the request 'help' or 'get ESCaPaDE'.
(If the subject line does not match a predefined set of mail requests
the mail handler will NOT recognize your request!)

	  Frank Hoffmeister
	  Systems Analysis Research Group, LSXI
	  Department of Computer Science
	  University of Dortmund
	  D-44221 Dortmund, Germany

	  Net: <hoffmeister@ls11.informatik.uni-dortmund.de>
	  Fax: +49 231 755-2450

----------------------------------------------------------------

OOGA, GENESIS:
-------------

OOGA (Object-Oriented GA) is a genetic algorithm designed for industrial use.
It includes examples accompanying the tutorial in the companion "Handbook
of Genetic Algorithms".  OOGA is designed such that each of the techniques
employed by a GA is an object that may be modified, displayed or replaced in
object-oriented fashion.  OOGA is especially well-suited for individuals
wishing to modify the basic GA techniques or tailor them to new domains.

The buyer of OOGA also receives GENESIS, a generational GA system written
by John Grefenstette.  As the first widely available GA program GENESIS has
been very influential in stimulating the use of GAs, and several other GA
packages are based on it.  This release sports an improved user interface.
OOGA and GENESIS are available together on 3.5'' or 5.25'' disk for $60
($52.50 inside North America) by order from:

    T.S.P.
    P.O. Box 991
    Melrose, MA 02176

----------------------------------------------------------------
EnGENEer
--------

Logica Cambridge Ltd. developed EnGENEer as an in-house Genetic Algorithm
environment to assist the development of GA applications on a wide range
of domains. The software was written in C and runs under Unix as part of a
consultancy and systems package. It supports both interactive (X-Windows)
and batch (command-line) modes of operation.

EnGENEer provides a number of flexible mechanisms which allow the
developer to rapidly bring the power of GAs to bear on new problem
domains.  Starting with the  Genetic Description Language, the developer
can describe, at high level, the structure of the ``genetic material''
used. The language supports discrete genes with user defined cardinality
and includes features such as multiple chromosomes models, multiple
species models and non-evolvable parsing symbols which can be used for
decoding complex genetic material.

The user also has available a descriptive high level language, the
Evolutionary Model Language. It allows the description of the GA type used
in terms of configurable options including:  population size, population
structure  and source, selection method, crossover and mutation type and
probability, inversion, dispersal method, and number of offspring per
generation.

Both the Genetic Description Language and the Evolutionary Model Language
are fully supported within the interactive interface (including on-line
help system) and can be defined either "on the fly" or loaded from audit
files which are automatically created during a GA run.

Monitoring of GA progress is provided via both graphical tools and
automatic storage of results (at user defined intervals). This allows the
user to restart EnGENEer from any point in a run, by loading both the
population at that time and the evolutionary model that was being used.

Connecting EnGENEer to different problem domains is achieved by specifying
the name of the program used to evaluate the problem specific fitness
function and constructing a simple parsing routine to interpret the
genetic material.  A library of standard interpretation routines are also
provided for commonly used representation schemes such as gray-coding,
permutations, etc.  The fitness evaluation can then be run as either a
slave process to the GA or via a standard handshaking routines. Better
still, it can be run on either the machine hosting the EnGENEer or on any
sequential or parallel hardware capable of connecting to a Unix machine.

For more information, contact:

    George Robbins
    Systems Intelligence Division
    Logica Cambridge Ltd.
    Betjeman House
    104 Hills Road
    Cambridge CB2 1LQ
    U.K. 

    Tel:   +44 71 6379111
    Fax:   +44 223 322315
----------------------------------------------------------------
PeGAsuS:
     PeGAsuS  is a Programming ENVIRONMENT for Parallel GENETIC ALGORITHMs
     developed  at  the  German  National  Research  Center  for  Computer
     Science.   Written in ANSI-C, it runs on MIMD parallel machines, such
     as transputers, and  distributed  systems.

     The User Interface  allows the user to  define  application  specific
     functions   that   are   not   provided   by   the system library.  A
     script language is used to specify the experiment.  The user  can use
     it  to define the application dependent data structures, attaches the
     GENETIC OPERATORs  to   them    and    specifies    the  input/output
     interface.

     A  "frame"  function  controls  the  execution a base function.  They
     prepare the data  representing  the genetic  material, and apply  the
     GENETIC  OPERATORs to it, according to the script specification.  The
     Library  contains  genetic  operators,   a   collection   of  FITNESS
     functions,  and input/output and control procedures.  It provides the
     user with  a  number  of validated modules. Currently, PeGAsuS can be
     compiled  with  the  GNU C, RS/6000 C, ACE-C, and Alliant's FX/2800 C
     compilers.  It runs on SUNs and RS/6000 workstations, as well  as  on
     the Alliant FX/28.

     For more information contact:

	  Dirk Schlierkamp-Voosen
	  Research Group for Adative Systems
	  German National Research Center for
	  Computer Science
	  53731 Sankt Augustin, Germany

	  Net: <dirk.schlierkamp-voosen@gmd.de>
	  Tel: +49 2241 14 2466
----------------------------------------------------------------
