From smagt@fwi.uva.nl Wed Mar  2 18:10:05 EST 1994
Article: 20806 of comp.ai
Xref: glinda.oz.cs.cmu.edu comp.robotics:9372 comp.ai.neural-nets:14943 comp.ai:20806 comp.ai.genetic:2367
Path: honeydew.srv.cs.cmu.edu!nntp.club.cc.cmu.edu!news.mic.ucla.edu!library.ucla.edu!agate!howland.reston.ans.net!EU.net!sun4nl!fwi.uva.nl!not-for-mail
From: smagt@fwi.uva.nl (Patrick van der Smagt)
Newsgroups: comp.robotics,comp.ai.neural-nets,comp.ai,comp.ai.genetic
Subject: Simderella 2.0 is available!
Date: 24 Feb 1994 08:32:52 +0100
Organization: FWI, University of Amsterdam
Lines: 86
Distribution: world
Message-ID: <2khl74$egf@zijde.fwi.uva.nl>
NNTP-Posting-Host: zijde.fwi.uva.nl


*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                       SIMDERELLA   2.0                      *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

Version 2.0 of simderella is here.  Major adaptations:
	- now features Imakefiles;
	- compiles & runs on Solaris and DEC Alpha;
	- some C bugs squashed;
	- bemmel can grab robot with mouse;
	- major improvements to documentation (i.e., an introductory
	  article describing the package).
	- includes a stand-alone version of bemmel for drawing
	  geometrical objects, with viewoint rotation.  Figures
	  can be dumped to xfig for later inclusion in your papers.


Simderella is a robot simulator consisting of three programs:

	connel: your controller
	simmel: the simulator
	bemmel: the X-windows oriented graphics front-end

Simmel is the part which actually simulates the robot.  It
performs a few matrix multiplications, based on the Denavit
Hartenberg method, calculates velocities with the Newton-Euler
scheme, and communicates with the other two programs.

Bemmel only displays the robot.  It is a fast general-purpose
display method which places separate objects in space depending
on the homogeneous matrices it receives from simmel.

Connel is the controller, which must be designed by the user.  In
the distributed version, connel is a simple inverse kinematics
routine.  No neural networks are included.

The three programs communicate via Unix sockets.  This means that
	1. you need sockets
	2. all the programs can run on different machines

Since data communication is high-level (all data is encoded
before transmission), cross architecture portability is high.
In fact, connel can simultaneously control a real robot 
_and_ the simulated one.

Simderella likes to sleep; that is, when nothing happens, no
processor time will be used.

The software is available via anonymous ftp from
galba.mbfys.kun.nl (ip 131.174.82.73), directory 
pub/neuro-software/pd.


Extract the simulator from the tar file by typing
at the Unix command line
	Unix> gunzip -c simderella.2.0.tar.gz | tar xf -
or use your favourite extracting commands.
In the simderella/ directory, type
	 Unix> xmkmf
         Unix> make Makefiles
	 Unix> make depend
	 Unix> make
The sub-directories are recursively visited and executables
are compiled and linked. 

Supported architectures:
	Sun (SunOS and Solaris)
	SGI
	DEC Alpha
	HP700
	386 et al (running Linux)


If you're impatient, execute the thing as follows:
	cd bemmel; Zoscar & cd ..
	cd simmel; source env; simmel1 ns & cd ..
	cd connel; connel s
all on one machine.  Then type commands like
	fix-target 50 50 50
	inverse 50 50 50
or move the mouse pointer in the bemmel window and press an `l' or
`r' or `u' or `d' or ....

Many thanks to Conor Doherty.

						Patrick


