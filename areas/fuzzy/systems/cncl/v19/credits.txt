                                                         -*- Indented-Text -*-
This is CNCL $Revision: 0.17 $.


  |_|_|_  |_|_    |_    |_|_|_  |_		     C O M M U N I C A T I O N
|_        |_  |_  |_  |_        |_		               N E T W O R K S
|_        |_  |_  |_  |_        |_		                     C L A S S
  |_|_|_  |_    |_|_    |_|_|_  |_|_|_|_	                 L I B R A R Y


This version of CNCL is based on the work of the following people:

mj		Martin Junius <mj@dfv.rwth-aachen.de>
cle		Claudia Lechner <cle@dfv.rwth-aachen.de>
steppler	Martin Steppler <steppler@POOL.informatik.rwth-aachen.de>
turm		Michael Bueter <turm@dfv.rwth-aachen.de>
grunwald	Dirk Grunwald <grunwald@cs.uiuc.edu>
stefanb		Stefan Becker <stefanb@dfv.rwth-aachen.de>
sa		Shahin Arefzadeh
olly		Wolfgang Olzem <olly@dfv.rwth-aachen.de>
jung		Christian Jung
fuss		Oliver Fusss <fuss@dfv.rwth-aachen.de>
ri		Manfred Richter <ri@dfv.rwth-aachen.de>
mz		Stephan Mehrholz <mz@dfv.rwth-aachen.de>
wesc		Christoph Westermann <wesc@dfv.rwth-aachen.de>
gp		Guenter Pusch <gp@dfv.rwth-aachen.de>



Basic classes:

	* CNCL, CNObject, CNClass, CNParam
	  Design and implementation: mj


Array classes:

	* CNArray, CNArray<type>, template, CNCLgenarray
	  Design and implementation: cle, some changes and
	  improvements by mj


Container classes:

	* Double linked list: CNDLList, CNDLObject, CNDLIterator
	  Design and implementation: mj

	* Queues: CNQueue, CNQueueFIFO
	  Design and implementation: mj

	* Keys, hash tables, object management: CNKey, CNKeyInt,
	  CNKeyString, HashTable, HashStatic, HashDynamic
	  Design and implementation: steppler


Event driven simulation:

	* CNEvent, CNEventList, CNEventScheduler, CNEventHandler,
	  CNSimTime
	  Design and implementation: mj


ezd (DEC's ezd graphics server) interface:

	* EZD, EZDWindow, EZDDrawing, EZDObject, EZDQueue, EZDServer,
	  EZDText, EZDPushButton, EZDTimer
	  Design and implementation: mj, some changes by turm, mz


Fuzzy logic classes:

	* CNFSet, CNFSetLR, CNFSetTrapez, CNFSetTriangle, CNFSetArray,
	  CNFSetArray, CNFVar, CNFClause, CNFRule, CNFRuleBase
	  Design and implementation: mj

	  The design is to some extend based on the C++ classes
	  described in the book:

	  @book{MMSW1993,
	     AUTHOR = {Mayer, A. and Mechler, B. and Schlindwein, A. and 
	               Walke, R.},
	     TITLE  = {Fuzzy Logic, Einf\"uhrung und Leitfaden zur praktischen
                       Anwendung mit Fuzzy-Shell in C{\tt++}},
             YEAR      = {1993},
             PUBLISHER = {Addison-Wesley},
             ADDRESS   = {Bonn, Paris, Reading, Massachusetts}
	  }


Miscellaneous classes:

	* CNString
	  Design heavily based on NIHCL String class (see below).
	  Implementation: turm

	* CNCoord, CNICoord, CNNamed
	  Design and implementation: mj


Random number classes:

	The design of this part is derived from the the GNU libg++
	(see below), the actual implementation is a derived version of
	a 1.xx release of libg++, author: grunwald
	More base generators and distribution were take from the SIC
	simulation library.

	* Generators:
	  CNRNG, CNACG, CNLCG, CNMLCG
	  Design: grunwald, implementation: stefanb, mj, sa
	  CNFileG
	  Design and implementation: stefanb, mj, sa
	  CNFiboG
	  Design and implementation: olly, mj, sa
	  CNTausG
	  Design: SIC (see below), implementation: stefanb, mj, sa

	* Distributions:
	  CNRndInt, CNRandom, CNBinomial, CNDiscUniform, CNErlang,
	  CNGeometric, CNHyperGeom, CNLogNormal, CNNegExp, CNNormal,
	  CNPoisson, CNUniform, CNWeibull
	  Design: grunwald, implementation: stefanb, mj, sa
	  CNDeterm
	  Design and implementation: mj
	  CNHyperExp, CNTab, CNDiracTab, CNInterTab,
	  CNMDeterm, CNRandomMix
	  Design: SIC, implementation: stefanb, mj, sa
	  CNRayleigh, CNRice
	  Design: jung, implementation: jung, mj, sa
	  CNSSMP2
	  Design and implementation: wesc

Statistics:

	The classes for statistical evaluation are based on the
	simulation library SIC, except the LRE classes, which were
	developed independently by ri.

	* CNStatistics, CNMoments, CNBatches
	  Design: SIC, implementation: SIC, olly, fuss
	
	* CNLRE, CNLREF, CNLREG
	  Design: ri, implementation: ri, olly, fuss


Templates:

	Class templates and CNCLgenclass script
	Design and implementation: mj


UNIX:

	* CNPipe, CNSelect
	  Design and implementation: mj

------------------------------------------------------------------------------

References:

	libg++

	  GNU C++ library, placed under the GLPL. Current version is
	  2.4, CNCL random classes are based on version 1.xx with some
	  bug fixes.


	NIHCL

	  National Institute of Health Class Library.


	SIC

	  Simulation In C++. Simulation library designed at
	  Communication Network, Aachen U of Technology.
