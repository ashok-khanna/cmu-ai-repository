;;; Sun Nov 18 13:44:57 1990 by Mark Kantrowitz <mkant@GLINDA.OZ.CS.CMU.EDU>
;;; frame-systems.text

;;; ****************************************************************
;;; Frame Systems **************************************************
;;; ****************************************************************
;;; This file lists a variety of well-known frame knowledge representation
;;; languages and systems.

;;; ********************************
;;; Publicly Available Frame Systems 
;;; ********************************

-------------------------------------------------------------------------
Name:		FrameWork
Description:	Your basic frame system, with lots of bells and whistles.
		Generic demons. Listener. Frame object database maintenance.
Availability:	anonymous ftp from a.gp.cs.cmu.edu in /usr/mkant/Public/
Fee:		None.
Licensing:	See file COPYING. May be freely redistributed, but
		not sold.
Documentation:	In source file.
Runs in:	Any Common Lisp.
Contact:	Mark Kantrowitz, School of Computer Science,
		Carnegie Mellon University, Pittsburgh, PA 15213
		mkant+@cs.cmu.edu
-------------------------------------------------------------------------
Name:		THEO
Description:	Frame-based representation, with Lisp and Prolog
		inference methods, and several user-invokable learning
		methods 
Availability:	For nonprofit research, with no right to redistribute
Fee:		None.	
Licensing: 	Potential users must complete a licensing agreement
		form before the code is distributed.
Runs in:	Common Lisp (tested in Lucid and Allegro)
           	Graphical Interface available under X-windows.
References: 
	"Theo: A Framework for Self-Improving Systems", Tom M. Mitchell, John
	Allen, Prasad Chalasani, John Cheng, Oren Etzioni, Marc N. Ringuette,
	Jeffrey C.  Schlimmer, in "Architectures for Intelligence", K. Vanlehn
	(ed.), Erlbaum, 1990, Hillsdale NJ.
Contact:	Professor Tom Mitchell, School of Computer Science
		Carnegie Mellon University, Pittsburgh, PA 15213
		Tom.Mitchell@cs.cmu.edu
-------------------------------------------------------------------------
Name:		FRAMEKIT
Description:	A Frame-Based Knowledge Representation System
	        Common Lisp source code and 34pp User's Guide
Functionality: 	Frames, Slots, Facets, Views, Fillers; Demons; 
               	Breadth-First, Depth-First and Exhaustive
               	Inheritance; User-Defined Inheritance; Default
               	Values; Restrictions; Abstract Data-Typing (to
               	permit any low-level storage scheme); Save
               	Utility; and more
Availability: 	For non-profit research only, unlimited on-site use, with no
              	right to re-distribute for profit or otherwise
Fee: 		None, if distributed for non-profit research
		(commercial use of FrameKit must be negotiated under
		separate terms) 
Licensing: 	Potential users must complete a licensing agreement
		form before the code is distributed
Support: 	Strictly unofficial, although we do try to fix bugs that are
	        reported to us; licensed users have access to major revisions 
	        of the system
Version:	3.0 
Runs In:	Common Lisp
Format: 	5.5" DOS format floppy or 3.5" Mac disk free of charge; other
        	formats can be arranged at nominal cost
References: 
  Nyberg, E. (1988). "The FrameKit User's Guide: Version 2.0",
  Technical Memo, Center for Machine Translation, Carnegie Mellon 
  University, CMU-CMT-88-MEMO.

  FrameKit has been used in several applications within CMU and elsewhere.
  Contact Eric Nyberg (address below) if you're interested in additional
  references.

Contact:	Eric Nyberg, Center for Machine Translation
		Carnegie Mellon University, Pittsburgh, PA 15213
		ehn+@cs.cmu.edu
-------------------------------------------------------------------------
Name:		KR
Features:	Nested schemas, a simple constraint systems,
		multiple inheritance, fairly efficient slot access.
Contact:	Brad.Myers@cs.cmu.edu
-------------------------------------------------------------------------
Name:		PARMENIDES (Frulekit)
Features:	Integrated rule system, cached values, efficient
		frame creation and slot access.
Availability: 	For nonprofit research, with no right to redistribute
Fee: 		None unless if it is to be used for commercial purposes
Licensing: 	Potential users must complete a licensing agreement
		form before the code is distributed
Runs in:	Common Lisp
Contact:	Peter Shell, School of Computer Science
		Carnegie Mellon University, Pittsburgh, PA  15213
		pshell@cs.cmu.edu 
-------------------------------------------------------------------------
Name:		FROBS
Description:	Object-oriented Frame Language
Availability:  	Publicly available
		cs.utah.edu:/pub
Fee: 		None
Licensing: 	None, but may not be used for commercial applications.
Runs In:	Common Lisp
Documentation:	Online documentation for Lucid CommonLisp in the
		file lorraine.loria.fr:/doc/frobs-doc.l.Z written
		by Norbert Glasser
References:
	Muehle, E., Kessler, R., Krohnfeldt, J., "Efficient Structures for
	Knowledge-based Applications", University of Utah TR-87-03, Presented
	at 1987 Rocky Mountain Conference on Artificial Intelligence.

	Muehle, E., "FROBS User Guide", University of Utah PASS Project 
	OpNote 87-05.

	Krohnfeldt, J., Steury, C., "Frolic: Logic Programming with Frobs",
	University of Utah PASS Project OpNote 86-08.
Contact:	Robert Kessler, Computer Science Department
		University of Utah
		kessler@cs.utah.edu
-------------------------------------------------------------------------
Name:		PFC
Description:	Simple frame system for educational use.
References:
   Finin, Tim, ``Understanding Frame Languages'', AI Expert, November, 1986.
   Finin, Tim, ``Implementing PFL'', AI Expert, December, 1986.
Available:	by anonymous FTP from linc.cis.upenn.edu
Contact:	Tim Finin
-------------------------------------------------------------------------
Name:		Beef
Features:	Compact, portable. Object-oriented programming.
		Frames slots and values. Daemons.
		User defined relations enable (dynamic) inheritance
		to be customized on a slot-to-slot basis. Parallel and
		nested versions of the frame universe can be
		maintained using a context mechanism called "worlds".
Runs In:	Common Lisp (tested in MACL, KCL, Symbolics CL, 
		Sun Common Lisp and Franz Allegro Common Lisp)		
Available:	by anonymous FTP
Contact:	Ora Lassila, Laboratory of Information Processing Science
		Helsinki University of Technology, Otakaari 1
		02150 ESPOO, FINLAND
		ora@hutcs.hut.fi
-------------------------------------------------------------------------
Name: 		OPS
Description:	Interpreter for Ops5, a programming language for
		production systems. 
Author:		Charles L. Forgy.  Ported to Common lisp by George
		Wood and Jim Kowalski. CMU Common Lisp mods by Dario
		Guise, Skef Wholey, and Dan Kuokka. 
Copyright Status:	Public domain.
Documentation:	The OPS5 User's Manual, July 1981, by Forgy, CMU CSD.
Maintainer:	CMU Common Lisp Group. slisp-group@b.gp.cs.cmu.edu
-------------------------------------------------------------------------
Name:		YAK
Description:	Hybrid knowledge-representation system of the KL-ONE
	        family. TBox with sound, complete and tractable
		algorithms; procedural attachment; object oriented
	 	ABox; contexts; viewpoints and belief representation;
		reasoning about sets  and time; compositional query
		language with typed variables. YAK is the main KR
		module of a large NL architecture (AlFresco).
Licensing: 	Free licence for both academic and not academic sites.
Runs in:	Common Lisp. An optional graphical interface is available
		for Xerox Medley Common Lisp -- featuring display and
		browsing capabilities, Macintosh Common Lisp, KCL,
		Allegro and Lucid CL under Xwindows -- featuring display only.
Contact: 	Enrico Franconi <franconi@irst.it>
		IRST, Istituto per la Ricerca Scientifica e Tecnologica
		I-38050 Povo TN, ITALY.
		Phone:  +39 (461) 814-433  -  Fax:  810-851
-------------------------------------------------------------------------

;;; ********************************
;;; Other Frame Systems ************
;;; ********************************

KRL	Bobrow, D.G., and Winograd, T., 1977, An overview of KRL,
	a Knowledge Representation Language, Cognitive Science 1(1):3-46
	... 1979, KRL: Another Perspective, Cognitive Science 3(1):29-42.

FRL	Roberts, R.B., and Goldstein, Ira P., June 1977, The FRL Manual,
	MIT AI Lab Tech Report #409.
        ... The FRL Primer, July 1977, MIT AI Lab Tech Report #408.

RLL	Greiner, R., and Lenat, D.B., 1980, A Representation Language
	Language. In Proceedings of AAAI-80. pp 165-169, Stanford CA.

KL-ONE	Brachman, R.J., 1979, On the epistemological status of 
	semantic networks, in Associative Networks, N.V. Findler (ed.),
	Academic Press, New York. Also BBN TR 3807 April 1978.
	... and J. Schmolze, 1985. An overview of the KL-One Knowledge
	Representation System, Cognitive Science 9(2).

KRYPTON	Brachman, R.J., Gilbert, V.P., and Levesque, H.J., 1985,
	An essential hybrid reasoning system: Knowledge and symbol
	level accounts of KRYPTON. In Proceedings IJCAI-85.
	Brachman, R.J., R.E. Fikes and H.J. Levesque, October 1983
	"KRYPTON: A Functional Approach to Knowledge Representation",
	IEEE Computer 16(10):67-73 October 1983.

NIKL	Kaczmarek, T., Bates, R., Robbins, G., 1986, Recent
	Developments in NIKL. In Proceedings, AAAI-86. 978-985, 
	Philadelphia PA August 1986.

CYCL	Lenat, D.B., and Guba, R.V., 1990, Building Large
	Knowledge-Based Systems, Addison-Wesley.

Conceptual Graphs
	Sowa, J.F., 1984, Conceptual Structures, Addison-Wesley,
	Reading, MA.

;;; ********************************
;;; Miscellaneous Frame References *
;;; ********************************

Bobrow, D.G. and M. Stefik, "The LOOPS Manual," Xerox PARC, 1983.

Bobrow, D. G., Kahn, K., Kiczales, G., Masinter, L., Stefik, M. J., and 
Zdybel, F., "CommonLoops: Merging Lisp and Object-Oriented Prograamming," ACM 
OOPSLA Conference, pp. 17-29, 1986.

Bobrow, Daniel G., RM Kaplan, M Kay, DA Norman, H Thompson, and T
Winograd (1977), "GUS, A Frame-driven Dialog System", Artificial
Intelligence, 8(2):155-173, April 1977.

Bobrow, Daniel G., "The Common LISP Object System: An Example of Integrating 
Programming Paradigms," in Exploring Artificial Intelligence, Howard Shrobe and
the American Association for Artificial Intelligence, eds., Morgan Kaufmann, 
San Mateo, California, 1988.

Brachman R.J. "What IS-A Is and Isn't: An Analysis of Taxonomic	Links
in Semantic Nets" IEEE Computer, October 1983, vol 16, No. 10, pp66-73

Brachman R.J. "I Lied About the Trees", or Defaults and Definitions in
Knowledge Representations. The AI Magazine, Fall 1985, pp80-85. 

Charniak, Eugene, 1978 "On the Use of Framed Knowledge in Language
Comprehension", Artificial Intelligence 11(3):225-266, December 1978.

Enrico Franconi.  The YAK (Yet Another Krapfen) manual.  IRST - Manual 9003-01,
Trento, Italy (1990).  Also  as Progetto Finalizzato  CNR 'Sist.  Informatici e
Calcolo Parallelo' report 7/30 (1990)

Enrico Franconi.  Extending  Hybridity  within the YAK Knowledge Representation
System.  In Proceedings of the 2nd  International Workshop on  Terminological
Logics, Schloss Dagstuhl, Germany.  IBM/IWBS Report 184, Stuttgart (1991)

Enrico   Franconi.     A short   presentation  of    YAK,  a   Hybrid Knowledge
Representation System.   In   Proceedings  of the   Terminological  Logic Users
Workshop,  Berlin. KIT-Report 95, Department  of   Computer Science, TU Berlin,
Germany (1991)

Roldano Cattoni   and  Enrico  Franconi.  Walking    through the Semantics   of
Frame-Based Description Languages: a case study.   In Z.W.  Ras, M.  Zemankova,
M.L.   Emrich (eds.),  Methodologies for Intelligent  Systems, 5, North-Holland
(1990)

Enrico Franconi, Bernardo  Magnini and Oliviero Stock.  Prototypes  in a Hybrid
Language with Primitive Descriptions. Computer & Mathematics with Applications,
special issue: Semantic Networks in Artificial Intelligence, Volume 23 (part a)
Number 6-9, Pages 543-556, Pergamon Press (1992)

Minsky, Marvin, "A Framework for Representing Knowledge", The
Psychology of Human Vision, Winston P.H.(ed) McGraw Hill, 1975. pp211-277.

Russinoff, David M., "Proteus: A Frame-Based Nonmonotonic Inference System,"
in Object-Oriented Concepts, Databases, and Applications, W. Kim and
F. Lochovsky, eds., Addison-Wesley, 1989. (MCC)

Stefik, Mark and Daniel G. Bobrow, "Object-Oriented Programming: Themes and 
Variations," AI Magazine, Winter 1985.


