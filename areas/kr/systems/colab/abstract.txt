
COLAB: SOFTWARE FOR KNOWLEGE REPRESENTATION AND COMPILATION AVAILABLE
=====================================================================

COLAB is a hybrid knowledge representation system emphasizing the
horizontal and vertical compilation of knowledge bases. It has been
designed as a COmpilation LABoratory aiming at a synergetic
collaboration of different knowledge representation and reasoning
formalisms.  It is comprised of subsystems dealing with different
kinds of knowledge and that can also be used as stand-alone systems.
The COLAB representation architecture splits into two main parts, an
affirmative part, sometimes also called `assertional', and a taxonomic
part.

The affirmative part provides efficient reasoning with different kinds
of relational or functional knowledge using tailored inference
engines.  For affirmative knowledge represented as constraint nets
COLAB supplies constraint propagation techniques (CONTAX). Relational
knowledge in the form of Horn rules is processed by forward (FORWARD)
and backward (RELFUN) chaining.  The backward component is also suited
for expressing (non-deterministic) functional dependencies.  Taxonomic
knowledge is represented by intensional concept definitions which are
automatically arranged in a subsumption hierarchy (TAXON).  Dynamic
cooperation of the subsystems is organized through access primitives
providing an interface to the respective reasoning services.

The COLAB software, developed at DFKI and the University of
Kaiserslautern, is now available for experimental use.  On the basis of
COMMON LISP, users can employ either (parts of) individual systems,
tight bilateral integrations, or the entire COLAB system.

Below follows a description of the four subsystems and a list of
selected references. Please direct requests to the address of the
principle system developer of the subsystem coming closest
to your interests; requests for the entire system should be directed
to Harold Boley.  When ordering papers/documentation do not forget to
send us your snail address.




		SOME INFORMATION ON THE RELFUN SYSTEM
                =====================================


RELFUN is a logic-programming language with call-by-value (eager), non-
deterministic, non-ground functions, and higher-order operations [Boley92b].

SHORT DESCRIPTION OF THE SYSTEM:
Operational (interpreter in pure LISP), procedural (SLV-resolution),
fixpoint, and model-theoretic semantics [Boley92c].  Interpreter for
full RELFUN; WAM emulator for fixed-arity subset.  Layered compiler
system, from source-to-source transformers to declarative classifier,
to WAM-code generator [Boley90a].  Translator to relational subset of
RELFUN, henceforth to PROLOG.  Accepting freely interchangeable
LISP-style and PROLOG-style syntaxes.  Tracer for valued conjunctions;
interface to LISP; on-line help.  Prelude with useful
relations/functions; library of declarative hypergraph operations
[Boley92a]; components for mechanical-engineering system using
declarative geometry [BoleyHanschke+91b]. Tight
(WAM-level) coupling with FORWARD.

AVAILABLE ON:
All computers and operating systems supporting COMMON LISP (actually,
only a subset of CL is needed).  Present version developed on SUN
workstations with AKCL and Lucid CL; also runs on Allegro CL and
Symbolics CL.

DISTRIBUTION:
RELFUN is currently distributed freely for research purposes, preferably
using email for the sources and airmail for the papers and documentation
(the language can be explored just with the interpreter, totaling to
140 kilobytes, and some test examples).

ADDRESS:
Dr. Harold Boley
DFKI
Postfach 2080
67608 Kaiserslautern
Germany
Phone: +49-631-205-3459
Fax:   +49-631-205-3210
Email: boley@informatik.uni-kl.de



		SOME INFORMATION ON THE TAXON SYSTEM
		====================================


TAXON is a terminological knowledge representation system extended by
concrete domains [BaaderHanschke91b,Hanschke92b].

SHORT DESCRIPTION OF THE SYSTEM:

Comprises a T-box and an A-box formalism for representing
terminological and assertional knowledge.  The T-box provides
expressive concept forming operators, in particular for specifying
role/attribute interaction. The TAXON A-box can instantiate concepts,
roles, etc. All reasoning services (e.g., classification, realization)
are implemented by terminating, sound and complete algorithms. A
concrete domain of rational numbers with comparison operators is
tightly coupled with the abstract terminological formalism.  Can
compute the domain hierarchy for CONTAX.

AVAILABLE ON:
All computers and operating systems supporting COMMON LISP.
Present version developed on SUN workstations with AKCL and Lucid CL;
also runs on Symbolics CL.

DISTRIBUTION:
The prototypic TAXON system is distributed free of charge for
research purposes. 

ADDRESS:
Philipp Hanschke
DFKI
Postfach 2080
67608 Kaiserslautern
Germany
Phone: +49-631-205-3460
Fax:   +49-631-205-3210
Email: hanschke@dfki.uni-kl.de



		SOME INFORMATION ON THE CONTAX SYSTEM
                =====================================


CONTAX is a constraint system for weighted constraints over hierarchically 
structured finite domains.

SHORT DESCRIPTION OF THE SYSTEM:
The CONTAX system supports primitive (extensional), compound (conjunctive), 
disjunctive and predicative constraints. Constraint instances are connected 
by variables that range over specific domains which can be plain or hierar-
chically structured. Hierarchical domains can be defined in CONTAX itself 
or by using the classifier of TAXON. Intervals regarded as subdomains of 
integers are also supported. All constraints are given a weight (from a 
discrete set ranging from 'hard' to 'soft') that is used by CONTAX for 
relaxation of overspecified problems.
Besides being integrated in COLAB, there also exists a stand-alone version 
of CONTAX with a programmer interface to LISP [MeyerSteinle92] that enables 
any LISP-based application to use CONTAX as its own constraint-reasoning 
formalism. The CONTAX system has already been used to formalize the tool 
selection problem in a CIM application [Meyer92a,Meyer92b].

AVAILABLE ON:
CONTAX is completely implemented in Common Lisp and CLOS. The development 
version is running on Symbolics Lisp machines. A UNIX-based version in 
LUCID Common Lisp is available too.

DISTRIBUTION:
The CONTAX prototype is distributed free of charge for research purposes. 

ADDRESS:
Manfred Meyer
DFKI
Postfach 2080
67608 Kaiserslautern
Germany
Phone: +49-631-205-3468
Fax:   +49-631-205-3210
Email: meyer@dfki.uni-kl.de




		SOME INFORMATION ON THE FORWARD COMPONENT
                =========================================

FORWARD is a logic programming language with bottom-up and top-down
evaluation of Horn clauses [HarmHinkelmann+92].

SHORT DESCRIPTION OF THE SYSTEM: 
User-specifiable division of Horn clauses for bottom-up, top-down and
bidirectional reasoning.  Semi-naive bottom-up evaluation with
top-down provable premises.  Generalized Magic-Set transformation for
goal-directed bottom-up reasoning, supporting conjunctive queries and
considering top-down premises. An interpreter version is available,
there is also an abstract machine, which will be available in the near
future.  
Simulation of forward chaining in a backward chaining system by rule
transformation. Compilation into a WAM with special forward code area
and additional so-called retain stack for derived facts.  Upside-down
meta-interpreter in RELFUN for forward chaining, partial evaluation of
the meta-interpreter.
Tight coulping with the RELFUN system on interpreter-level and
WAM-level. A tight integration of the semi-naive strategy with the
TAXON system is currently under development.

AVAILABLE ON:
The system is completely implemented in Common Lisp. The development
version is running on SUN Workstation with AKCL, in LUCID Common Lisp,
and on Symbolics Lisp machines.

DISTRIBUTION:
The FORWARD prototype is distributed free of charge for research purposes. 

ADDRESS:
Knut Hinkelmann
DFKI
Postfach 2080
67608 Kaiserslautern
Germany
Phone: +49-631-205-3467
Fax:   +49-631-205-3210
Email: hinkelma@dfki.uni-kl.de



Selected Publications of Knowledge-Compilation Group of ARC-TEC
---------------------------------------------------------------

@inproceedings{BaaderHanschke91b,
   author = {F. Baader and P. Hanschke},
   booktitle = {Proceedings of the 12th International Joint Conference
                on Artificial Intelligence},
   title = {A Scheme for Integrating Concrete Domains into Concept Languages},
   year = {1991}
}

@inproceedings{BaaderHanschke92,
   author = {Franz Baader and Philipp Hanschke},
   booktitle = {GWAI92},
   title = {Extensions of Concept Languages for a Mechanical
            Engineering Application},
   year = {1992}
}

@misc{BoleyHanschke+91b,
   author = {H. Boley and P. Hanschke and K. Hinkelmann and M. Meyer},
   howpublished = {Presented at 3rd International Workshop on Data,
                   Expert Knowledge and Decisions:  Using Knowledge to
                   Transform Data into Information for Decision Support,
                   Reisensburg, Germany},
   institution = {DFKI GmbH},
   month = {September},
   title = {{COLAB: A Hybrid Knowledge Compilation Laboratory}},
   year = {1991}
}

@techreport{Boley90a,
   title = {{A Relational/Functional Language and Its Compilation
             into the WAM}},
   author = {Harold Boley},
   institution = {Universit{\"a}t Kaiserslautern, Fachbereich Informatik},
   year = {1990},
   type = {SEKI Report},
   number = {SR-90-05},
   month = {April}}

@techreport{Boley90c,
   title = {{Declarative Operations on Nets}},
   author = {Harold Boley},
   institution = {DFKI GmbH},
   year = {1990},
   type = {Research Report},
   number = {RR-90-12},
   month = {October},
   address = {Postfach 20 80, D-6750 Kaiserslautern}
}

@incollection{Boley92a,
   author = {Harold Boley},
   booktitle = {Semantic Networks in Artificial Intelligence},
   editor = {Fritz Lehmann},
   number = {6--9},
   pages = {601--637},
   publisher = {Special Issue of Computers \& Mathematics with Applications,
                Pergamon Press},
   title = {Declarative Operations on Nets},
   volume = {23},
   year = {1992}
}

@inproceedings{Boley92c,
   author = {Harold Boley},
   title = {A Direct Semantic Characterization of {RELFUN}},
   booktitle = {Preprints of the Proceedings of the 3rd International
                Workshop on Extensions of Logic Programming},
   year = {1992},
   publisher = {Facolt\`a di Ingegneria, Universit\`a di Bologna, Italy},
   editor = {Evelina Lamma and Paola Mello}
}

@inproceedings{Boley92b,
   author = {Harold Boley},
   booktitle = {Workshop on Extensions of Logic Programming, ELP '91,
                Stockholm 1991},
   publisher = {Springer},
   series = {LNAI},
   title = {Extended Logic-plus-Functional Programming},
   year = {1992},
   editors = {Eriksson, Lars-Henrik and  Halln{\"a}s, Lars and 
             Schroeder-Heister, Peter}
}

@inproceedings{HanschkeHinkelmann92,
   author = {Philipp Hanschke and Knut Hinkelmann},
   booktitle = {GWAI-92},
   publisher = {Springer-Verlag},
   month = apr,
   title = {Combining Terminological and Rule-based Reasoning for
            Abstraction Processes},
   year = {1992},
   note = {Forthcoming}
}

@inproceedings{HanschkeMeyer92,
   author = {Philipp Hanschke and Manfred Meyer},
   booktitle = {Workshop on Logical Approaches to Machine Learning, 
                ECAI 92, Vienna},
   editor = {Celine Rouveirol},
   month = {August},
   title = {An Alternative to $\Theta$-Subsumption Based on 
            Terminological Reasoning},
   year = {1992}
}

@inproceedings{Hanschke92b,
   author = {Philipp Hanschke},
   booktitle = {Third International Conference on Principles of
                Knowledge Representation and Reasoning (KR '92)},
   title = {Specifying Role Interaction in Concept Languages},
   month = {October},
   year = {1992}
}

@inproceedings{Hanschke92,
   author = {Philipp Hanschke},
   booktitle = {Workshop on Extensions to Logic Programming, Stockholm 1991},
   publisher = {Springer},
   series = {LNAI},
   title = {Terminological Reasoning and Partial Inductive Definitions},
   year = {1992},
   editors = "Eriksson, Lars-Henrik and  Halln{\"a}s, Lars and
 Schroeder-Heister, Peter"
}

@techreport{HarmHinkelmann+92,
   author = {Martin Harm and Knut Hinkelmann and Thomas Labisch},
   institution = {DFKI GmbH},
   number = {Document D-92-27},
   title = {Integrating Bottom-up and Top-down Reasoning in COLAB},
   year = {1992}
}

@inproceedings{HeinMeyer91a,
   author = {H.-G. Hein and M. Meyer},
   booktitle = {Logic Programming: Proceedings of the $1^{st}$ and
                $2^{nd}$ Russian Conferences},
   editor = {A. Voronkov},
   publisher = {Springer-Verlag, Berlin, Heidelberg},
   series = {Lecture Notes in Artificial Intelligence (LNAI)},
   volume = {592},
   title = {{A WAM Compilation Scheme}},
   pages = {201-214},
   year = {1992}
}

@techreport{Hinkelmann91a,
	title = {{Bidirectional Reasoning of Horn Clause Programs:
                  Transformation and Compilation}},
	author = {Knut Hinkelmann},
	institution = {DFKI GmbH},
	year = {1991},
	type = {DFKI Technical Memo},
	number = {TM-91-02},
	month = {January}
}

@inproceedings{Hinkelmann92b,
   author = {Knut Hinkelmann},
   booktitle = {Proceedings German Workshop on Artificial Intelligence,
                GWAI-92},
   publisher = {Springer-Verlag},
   month = {September},
   title = {Forward Logic Evaluation: Compiling a Partially Evaluated
 Meta-interpreter into the WAM},
   year = {1992},
   note = {Forthcoming}
}

@inproceedings{Meyer92b,
   author = {Manfred Meyer},
   title = {{Using Hierarchical Constraint Satisfaction for 
             Lathe-Tool Selection in a CIM Environment}},
   booktitle = {Fifth International Symposium on Artificial 
                Intelligence (ISAI), Cancun, Mexico},
   month = {December},
   year = {1992}
}

@inproceedings{Meyer92c,
   author = {Manfred Meyer},
   title = {{Hierarchical Constraint Satisfaction and its
             Application in Computer-Aided Production Planning}},
   booktitle = {Expert Systems 92, Cambridge, U.K.},
   month = {December},
   year = {1992}
}

@inproceedings{MeyerHein+91a,
   author = {M. Meyer and H.-G. Hein and J. M\"{u}ller},
   booktitle = {Logic Programming: Proceedings of the $1^{st}$ and 
                $2^{nd}$ Russian Conferences},
   editor = {A. Voronkov},
   publisher = {Springer-Verlag, Berlin, Heidelberg},
   series = {Lecture Notes in Artificial Intelligence (LNAI)},
   volume = {592},
   title = {{FIDO: Finite Domain Consistency Techniques in Logic Programming}},
   pages = {294-301},
   year = {1992}
}


