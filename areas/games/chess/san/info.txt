Filename: SAN.tar.Z

Version of Program: 1993.04.12

Version of Coherent Ported for: 4.0 (needs ANSI C compiler)

Type of Program: Chess programming source toolkit

File Size (SAN.tar.Z): 153749

Date Uploaded: 1993.04.12

One Line Description:

A comprehensive set of C sources and text documents for chess programmers.

Mailing Address / Full Name of person uploaded:

sje@xylos.ma30.bull.com / Steven J. Edwards

Mailing Address / Full Name of person ported:

sje@xylos.ma30.bull.com / Steven J. Edwards

Mailing Address / Full Name of author:

sje@xylos.ma30.bull.com / Steven J. Edwards (with help from many)

1/2 Page Description of Program:

The SAN (Standard Algebraic Notation) Kit is a freeware toolkit for
chess software development.  It includes about eleven thousand lines
of ANSI C source along with numerous helpful documents.  The package
is currently used by a number of researchers throughout the world who
are working on various chess applications.  Example applications
include chessplaying programs, chess opening book repository software,
chess game database software, and automated distributed computer chess
competition.  The SAN Kit was first released to readers of the
rec.games.chess newsgroup back in late 1992 and continues to be
revised and expanded.

This package will be of interest to most chessplayers and to just
about everyone interested in computer chess.  It will be most useful
for those proficient with ANSI C programming.  It may also be
instructive to those looking for examples of medium length application
development with Coherent, particularly for those interested with
portable programming techniques as the C source runs unmodified on two
different Coherent 4.0 machines, on two different Macintoshes, on
various Unix and MS-DOS configurations, and on certain ANSI C niche
machines (e.g., Commodore Amiga).  A programming style guide is
included for those wishing to make public their own contributions.

The package is strongly recommended for those who've wanted to write
their own chessplaying program but were deterred by the onerous grunt
work involved.  The SAN Kit has all the routines necessary for
constructing such a program, and a few simple sample move selector
modules are included.

The Makefile may need a slight change or two with a couple of macro
definitions depending on which compiler is being used.  The brute
force approach also works:

gcc -s -o san -pedantic -Wall -O *.c -L /lib/ndp -L /usr/lib/ndp

Users are morally obligated to consider reporting their results to the
rec.games.chess newsgroup for those items that may help other
experimenters

