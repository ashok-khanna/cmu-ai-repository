%!PS-Adobe-2.0
%%Creator: dvipsk 5.512a Copyright 1986, 1993 Radical Eye Software
%%Title: p.dvi
%%Pages: 25
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips p.dvi
%DVIPSSource:  TeX output 1994.02.21:1559
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N /X{S N}
B /TR{translate}N /isls false N /vsize 11 72 mul N /@rigin{isls{[0 -1 1 0 0 0]
concat}if 72 Resolution div 72 VResolution div neg scale isls{Resolution hsize
-72 div mul 0 TR}if Resolution VResolution vsize -72 div 1 add mul TR matrix
currentmatrix dup dup 4 get round 4 exch put dup dup 5 get round 5 exch put
setmatrix}N /@landscape{/isls true N}B /@manualfeed{statusdict /manualfeed
true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N
/IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin /FontType 3 N /FontMatrix
fntrx N /FontBBox FBB N string /base X array /BitMaps X /BuildChar{
CharBuilder}N /Encoding IE N end dup{/foo setfont}2 array copy cvx N load 0 nn
put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0
0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data
dup length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128
ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127
sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp 0 N
/cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2 index get
S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff ch-height
sub ch-xoff ch-width add ch-yoff setcachedevice ch-width ch-height true[1 0 0
-1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}imagemask restore}B /D{/cc X dup
type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1
ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}
B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage userdict
/eop-hook known{eop-hook}if}N /@start{userdict /start-hook known{start-hook}
if pop /VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255
{IE S 1 string dup 0 3 index put cvn put}for 65781.76 div /vsize X 65781.76
div /hsize X}N /p{show}N /RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N
/ruley 0 N /v{/ruley X /rulex X V}B /V{}B /RV statusdict begin /product where{
pop product dup length 7 ge{0 7 getinterval dup(Display)eq exch 0 4
getinterval(NeXT)eq or}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{
gsave transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N
/tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{
p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save
N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen false N
/rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B /@scaleunit 100 N
/@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit div /vsc X}B /@hsize{/hs
X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{/CLIP 2 N}B /@hoffset{/ho X}B
/@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X /rwiSeen true N}B /@rhi
{10 div /rhi X /rhiSeen true N}B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B
/@ury{/ury X}B /magscale true def end /@MacSetUp{userdict /md known{userdict
/md get type /dicttype eq{userdict begin md length 10 add md maxlength ge{/md
md dup length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{
}N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath clippath
mark{transform{itransform moveto}}{transform{itransform lineto}}{6 -2 roll
transform 6 -2 roll transform 6 -2 roll transform{itransform 6 2 roll
itransform 6 2 roll itransform 6 2 roll curveto}}{{closepath}}pathforall
newpath counttomark array astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2
F/|______Courier fnt invertflag{PaintBlack}if}N /txpose{pxs pys scale ppr
aload pop por{noflips{pop S neg S TR pop 1 -1 scale}if xflip yflip and{pop S
neg S TR 180 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0
get neg sub neg TR}if xflip yflip not and{pop S neg S TR pop 180 rotate ppr 3
get ppr 1 get neg sub neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get
neg TR}if}{noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop
pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get
neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr 0
get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3
1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp{pop pop
showpage pm restore}N end}if}if}N /normalscale{Resolution 72 div VResolution
72 div neg scale magscale{DVImag dup scale}if 0 setgray}N /psfts{S 65781.76
div N}N /startTexFig{/psf$SavedState save N userdict maxlength dict begin
/magscale false def normalscale currentpoint TR /psf$ury psfts /psf$urx psfts
/psf$lly psfts /psf$llx psfts /psf$y psfts /psf$x psfts currentpoint /psf$cy X
/psf$cx X /psf$sx psf$x psf$urx psf$llx sub div N /psf$sy psf$y psf$ury
psf$lly sub div N psf$sx psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy
psf$sy div psf$ury sub TR /showpage{}N /erasepage{}N /copypage{}N /p 3 def
@MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath
clip newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial{CLIP
1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath
clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx sub div rhiSeen{
rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly
sub div dup scale llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly
moveto urx lly lineto urx ury lineto llx ury lineto closepath clip}if
/showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{count ocount
sub{pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B /li{lineto}B /rl{
rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1 setlinecap
newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY moveto}N
/ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (p.dvi) @start
/Fa 1 115 df<73C09C209860980018003000300030003000600060000B0B7E8A0E>114
D E /Fb 12 119 df<60F0F070101020204040040A7D830A>59 D<07FE00E000E000E000E001C0
01C001C001C0038003800380038007000700070007000E000E000E000E001C00FFC00F177E960F
>73 D<07FFF00000E01C0000E0060000E0070000E0070001C0070001C0070001C0070001C00E00
03801C000380700003FF80000380E000070070000700380007003800070038000E0070000E0070
000E0070800E0070801C003100FF801E0019177F961B>82 D<07C01C20301060106020FFC0C000
C000C000C000C010402060C01F000C0E7E8D10>101 D<1F0006000600060006000C000C000C00
0C0018F01B181C08180838183018301830306030603160616062C022C03C10177E9614>104
D<0300038003000000000000000000000000001C002400460046008C000C001800180018003100
3100320032001C0009177F960C>I<00180038001000000000000000000000000001C002200430
0430086000600060006000C000C000C000C001800180018001806300E300C60078000D1D80960E
>I<383C1E0044C6630047028100460301008E0703000C0603000C0603000C060600180C060018
0C0620180C0C20180C0C4030180440301807801B0E7F8D1F>109 D<38F04518463846308C000C
000C000C001800180018001800300030000D0E7F8D10>114 D<030003000600060006000600FF
C00C000C000C001800180018001800300030803080310031001E000A147F930D>116
D<1C0200260600460600460600860C000C0C000C0C000C0C001818001818801818801838800C59
00078E00110E7F8D14>I<1C04260E4606460686040C040C040C0418081808181018100C600780
0F0E7F8D11>I E /Fc 13 90 df<0006000C001800300070006000C001C0018003800300070006
000E000C001C001C0018003800380038003000700070007000700070007000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E0007000700070007000700070
00300038003800380018001C001C000C000E000600070003000380018001C000C0006000700030
0018000C00060F4A788119>16 D<C0006000300018001C000C000600070003000380018001C000
C000E000600070007000300038003800380018001C001C001C001C001C001C000E000E000E000E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E001C001C001C001C001C00
1C0018003800380038003000700070006000E000C001C0018003800300070006000C001C001800
30006000C0000F4A7F8119>I<FFF0FFF0FFF0E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000FFF0FFF0FFF00C7C758118>34
D<FFF0FFF0FFF00070007000700070007000700070007000700070007000700070007000700070
007000700070007000700070007000700070007000700070007000700070007000700070007000
700070007000700070007000700070007000700070007000700070007000700070007000700070
007000700070007000700070007000700070007000700070007000700070007000700070007000
700070007000700070007000700070007000700070007000700070007000700070007000700070
007000700070007000700070007000700070007000700070007000700070007000700070007000
700070007000700070FFF0FFF0FFF00C7C808118>I<FFFCFFFCFFFCE000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E0000E4A73801C>50 D<FFFCFFFCFFFC001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C0E4A80801C>I<E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000FFFCFFFCFFFC0E4A73811C>I<001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001CFFFCFFFCFFFC0E4A80811C>I<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0E0E0E0E0031B73801C>I<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0031B75801C>I<FFFFFFFFE0FFFFFFFFF07000001FF078000001F03C000000781C00000018
0E0000000C0F000000040700000004038000000203C000000001E000000000E000000000700000
0000780000000038000000001C000000001E000000000F00000000070000000003800000000380
0000000300000000070000000006000000000C0000000018000000003800000000300000000060
00000000C000000001C00000000180000002030000000406000000040E0000000C0C0000001818
0000007830000001F07000001FF07FFFFFFFF0FFFFFFFFE0272A7E7F2C>80
D<FFFFFFFFFFFFC0FFFFFFFFFFFFE07F00000001FFE07F000000001FE03F8000000003F01FC000
000000F00FC000000000380FE0000000001807F0000000000C03F8000000000403F80000000004
01FC000000000200FE0000000000007F0000000000007F0000000000003F8000000000001FC000
000000000FC000000000000FE0000000000007F0000000000003F8000000000003F80000000000
01FC000000000000FE0000000000007E0000000000007F0000000000003F8000000000001FC000
000000001FC000000000000FC00000000000078000000000000380000000000007000000000000
0E0000000000001C000000000000380000000000007000000000000070000000000000E0000000
000001C0000000000003800000000000070000000000000E0000000000000E0000000000001C00
00000002003800000000040070000000000400E0000000000C01E0000000001801C00000000038
038000000000F8070000000001F00E000000000FF01C00000001FFF03FFFFFFFFFFFE03FFFFFFF
FFFFE07FFFFFFFFFFFE0FFFFFFFFFFFFC0373A7E7F3C>88 D<FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF0FF800001FF003F800001FC001F800001F8001F800001F8001F800001F8001F800001F
8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F8
00001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F
8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F8
00001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F
8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F8
00001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F
8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8003FC00003FC00FFF
0000FFF0FFFFF00FFFFFFFFFF00FFFFFFFFFF00FFFFF303A7E7F35>I E
/Fd 11 107 df<FFFFFFC0FFFFFFC01A027C8B23>0 D<400004C0000C6000183000301800600C
00C006018003030001860000CC0000780000300000300000780000CC000186000303000601800C
00C0180060300030600018C0000C40000416187A9623>2 D<000000C0000003C000000F000000
3C000000F0000003C00000070000001C00000078000001E00000078000001E00000078000000E0
000000780000001E0000000780000001E0000000780000001C0000000700000003C0000000F000
00003C0000000F00000003C0000000C00000000000000000000000000000000000000000000000
00000000007FFFFF80FFFFFFC01A247C9C23>20 D<C0000000F00000003C0000000F00000003C0
000000F0000000380000000E0000000780000001E0000000780000001E0000000780000001C000
00078000001E00000078000001E00000078000000E00000038000000F0000003C000000F000000
3C00000070000000C0000000000000000000000000000000000000000000000000000000000000
007FFFFF80FFFFFFC01A247C9C23>I<000000C00C000003C03C000007007000001C01C0000078
07800000E00E000003803800000F00F000003C03C000007007000001C01C000007807800000E00
E000003803800000F00F000000F00F00000038038000000E00E00000078078000001C01C000000
70070000003C03C000000F00F00000038038000000E00E00000078078000001C01C00000070070
000003C03C000000C00C261E7D992D>28 D<000000040000000002000000000200000000010000
0000008000000000400000000020FFFFFFFFFCFFFFFFFFFC000000002000000000400000000080
000000010000000002000000000200000000040026107D922D>33 D<003FF800FFF803C0000700
000C0000180000300000300000600000600000C00000C00000C00000FFFFF8FFFFF8C00000C000
00C000006000006000003000003000001800000C000007000003C00000FFF8003FF8151C7C981E
>50 D<400002C00006C00006C00006C00006C00006C00006C00006C00006C00006C00006C00006
C00006C00006C00006C00006C00006C00006C00006C00006C0000660000C60000C3000181C0070
0F01E003FF8000FE00171C7D9A1E>91 D<000F0038006000E001C001C001C001C001C001C001C0
01C001C001C001C001C001C001C001C0038007001E00F8001E000700038001C001C001C001C001
C001C001C001C001C001C001C001C001C001C001C000E000600038000F102D7DA117>102
D<F8001E000700038001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C0
00E000600038000F0038006000E001C001C001C001C001C001C001C001C001C001C001C001C001
C001C001C0038007001E00F800102D7DA117>I<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0022D7BA10D>106
D E /Fe 39 123 df<07000001C00000E00000E00000F000007000007000007800003800003800
003C00001C00001C00001E00000E00000E00000F00000700000F0000378000638000C38001C3C0
0381C00701C00E01E01C00E03800E07000F0F00070E00070C0003815207D9F1B>21
D<70F8F8F87005057C840D>58 D<70F8FCFC74040404080810102040060E7C840D>I<00000200
0000060000000E0000000E0000001E0000001F0000002F0000002F0000004F0000008F0000008F
0000010F0000010F0000020F0000040F0000040F0000080F800008078000100780002007800020
0780007FFF800040078000800780018007800100078002000780020007C0040003C00C0003C01E
0007C0FF807FFC1E207E9F22>65 D<00FFFFE000000F007800000F001C00000F000E00000F0007
00001E000700001E000380001E000380001E000380003C000380003C000380003C000380003C00
0380007800078000780007800078000780007800078000F0000F0000F0000F0000F0000E0000F0
001E0001E0001C0001E0003C0001E000380001E000700003C000E00003C001C00003C003800003
C007000007803C0000FFFFF00000211F7E9E26>68 D<00007E0100038183000E00460038002E00
70001E00E0000E01C0000C0380000C0700000C0F00000C1E0000081E0000083C0000003C000000
78000000780000007800000078000000F0000000F0007FFCF00001E0F00001E0F00003C0700003
C0700003C0700003C038000780380007801C000F800C000B80060033000380C100007F00002021
7E9F24>71 D<00FFFC000F80000F00000F00000F00001E00001E00001E00001E00003C00003C00
003C00003C0000780000780000780000780000F00000F00000F00000F00001E00001E00001E000
01E00003C00003C00003C00003C00007C000FFFC00161F7F9E14>73 D<00FFF80FF8000F8003E0
000F000380000F000200000F000400001E000800001E002000001E004000001E008000003C0100
00003C040000003C080000003C180000007838000000787C000000793C0000007A3C000000F41E
000000F81E000000F01E000000F00F000001E00F000001E00F000001E007800001E007800003C0
07800003C003C00003C003C00003C003C00007C003E000FFFC3FFC00251F7E9E27>75
D<00FFFC00000F8000000F0000000F0000000F0000001E0000001E0000001E0000001E0000003C
0000003C0000003C0000003C00000078000000780000007800000078000000F0000000F0000000
F0000000F0004001E0008001E0008001E0018001E0010003C0030003C0030003C0060003C00E00
07803C00FFFFFC001A1F7E9E1F>I<00FF803FF0000F800780000F800200000BC00200000BC002
000013C004000011E004000011E004000011E004000020F008000020F008000020F80800002078
0800004078100000403C100000403C100000403C100000801E200000801E200000801E20000080
0F200001000F400001000F4000010007C000010007C00002000780000200038000020003800006
000380000F00010000FFE0010000241F7E9E25>78 D<0001FC0000070700001C01C0003000E000
E0006001C000700380007007800038070000380E0000381E0000381C0000383C0000383C000038
78000078780000787800007878000078F00000F0F00000F0F00000E0F00001E0F00001C0F00003
C0700003807000070078000F0038001E0038003C001C0070000E00E0000783800001FC00001D21
7E9F23>I<00FFFF80000F01E0000F0070000F0038000F003C001E003C001E003C001E003C001E
003C003C0078003C0078003C00F0003C01E00078038000780F00007FF80000781C0000F00E0000
F00F0000F0070000F0078001E00F0001E00F0001E00F0001E00F0003C01E0003C01E0203C01E02
03C01E0407C00E04FFFC0718000003E01F207E9E23>82 D<0007E0800018118000300B00006007
0000C0070001C0030001800200038002000380020003800200038000000380000003C0000003F8
000003FF800001FFC00000FFE000003FF0000003F0000000F00000007000000070000000700020
00700020007000200060006000E0006000C0006001C00070018000E8030000C60E000081F80000
19217D9F1C>I<00F1800389C00707800E03801C03803C0380380700780700780700780700F00E
00F00E00F00E00F00E10F01C20F01C20703C20705C40308C400F078014147E9318>97
D<07803F8007000700070007000E000E000E000E001C001C001CF01D0C3A0E3C0E380F380F700F
700F700F700FE01EE01EE01EE01CE03CE038607060E031C01F0010207E9F14>I<007C01C20701
0E0F1E0F1C0E3C04780078007800F000F000F000F000F00070017002300418380FC010147E9314
>I<0000780003F80000700000700000700000700000E00000E00000E00000E00001C00001C000
F1C00389C00707800E03801C03803C0380380700780700780700780700F00E00F00E00F00E00F0
0E10F01C20F01C20703C20705C40308C400F078015207E9F18>I<007C01C207010E011C013C01
3802780C7BF07C00F000F000F000F0007000700170023004183807C010147E9315>I<00007C00
00CE00019E00039E00030C000700000700000700000700000E00000E00000E0000FFF0000E0000
0E00001C00001C00001C00001C00001C0000380000380000380000380000380000700000700000
700000700000700000E00000E00000E00000E00000C00001C000318000798000F300006200003C
000017297E9F16>I<001E3000713800E0F001C0700380700780700700E00F00E00F00E00F00E0
1E01C01E01C01E01C01E01C01E03801E03800E07800E0B8006170001E700000700000700000E00
000E00300E00781C00F038006070003FC000151D809316>I<01E0000FE00001C00001C00001C0
0001C000038000038000038000038000070000070000071F000761800E80C00F00C00E00E00E00
E01C01C01C01C01C01C01C01C0380380380380380380380704700708700E08700E10700610E006
206003C016207E9F1A>I<00E001E001E000C000000000000000000000000000000E0013002380
4380438043808700070007000E000E001C001C001C20384038403840388019000E000B1F7E9E10
>I<0000C00001E00001E00001C0000000000000000000000000000000000000000000001E0000
6300004380008380010380010380020700000700000700000700000E00000E00000E00000E0000
1C00001C00001C00001C0000380000380000380000380000700000700030700078E000F1C00063
80003E00001328819E13>I<01E0000FE00001C00001C00001C00001C000038000038000038000
0380000700000700000701E00706100E08700E10F00E20F00E40601C80001D00001E00001FC000
387000383800383800381C20703840703840703840701880E01880600F0014207E9F18>I<03C0
1FC0038003800380038007000700070007000E000E000E000E001C001C001C001C003800380038
0038007000700070007100E200E200E200E200640038000A207E9F0E>I<1E07C07C0023186186
0023A032030043C034030043803803804380380380870070070007007007000700700700070070
07000E00E00E000E00E00E000E00E00E000E00E01C101C01C01C201C01C038201C01C038401C01
C0184038038018801801800F0024147E9328>I<1E07802318C023A06043C07043807043807087
00E00700E00700E00700E00E01C00E01C00E01C00E03821C03841C07041C07081C030838031018
01E017147E931B>I<007C0001C3000301800E01C01E01C01C01E03C01E07801E07801E07801E0
F003C0F003C0F003C0F00780F00700700F00700E0030180018700007C00013147E9316>I<03C1
E004621804741C08781C08701E08701E10E01E00E01E00E01E00E01E01C03C01C03C01C03C01C0
380380780380700380E003C1C0072380071E000700000700000E00000E00000E00000E00001C00
001C0000FFC000171D819317>I<00F0400388C00705800E03801C03803C038038070078070078
0700780700F00E00F00E00F00E00F00E00F01C00F01C00703C00705C0030B8000F380000380000
380000700000700000700000700000E00000E0000FFE00121D7E9314>I<1E1E0023210023C380
43C7804387804383008700000700000700000700000E00000E00000E00000E00001C00001C0000
1C00001C000038000018000011147E9315>I<007C018203010603060706060E00078007F803FC
01FE001F00077007F006F006E004400820301FC010147E9315>I<00C000E001C001C001C001C0
03800380FFF8038007000700070007000E000E000E000E001C001C001C001C1038203820382038
4018800F000D1C7F9B10>I<0F00601180702180E021C0E041C0E04380E08381C00701C00701C0
0701C00E03800E03800E03800E03840E07080C07080C07080E0F1006131003E1E016147E931A>
I<0F01801183C02183E021C1E041C0E04380608380400700400700400700400E00800E00800E00
800E01000E01000C02000E04000E040006180001E00013147E9316>I<0F006060118070F02180
E0F821C0E07841C0E0384380E0188381C0100701C0100701C0100701C0100E0380200E0380200E
0380200E0380400E0380400E0380800E078080060781000709860001F078001D147E9321>I<03
C1C00C62201034701038F02038F020386040700000700000700000700000E00000E00000E00000
E02061C040F1C040F1C080E2C080446300383C0014147E931A>I<0F00601180702180E021C0E0
41C0E04380E08381C00701C00701C00701C00E03800E03800E03800E03800E07000C07000C0700
0E0F00061E0003EE00000E00000E00001C0078180078380070700060600021C0001F0000141D7E
9316>I<01E02003F04007F8C00C1F8008010000020000040000080000100000600000C0000100
000200000400800801001003003F060061FC0040F80080700013147E9315>I
E /Ff 27 122 df<007000F001E003C007800F001E001C00380038007000700070007000E000E0
00E000E000E000E000E000E0007000700070007000380038001C001E000F00078003C001F000F0
00700C24799F18>40 D<6000F00078003C001E000F000780038001C001C000E000E000E000E000
70007000700070007000700070007000E000E000E000E001C001C0038007800F001E003C007800
F00060000C247C9F18>I<1C3E7E7F3F1F070E1E7CF860080C788518>44
D<7FFF00FFFF80FFFF807FFF0011047D8F18>I<01800380038007800F803F80FF80FB80438003
800380038003800380038003800380038003800380038003800380038003807FFCFFFE7FFC0F1C
7B9B18>49 D<00F8E003FEE007FFE00F07E01E03E03C01E03800E07000E07000E0700000E00000
E00000E00000E00000E00000E00000E00000E000007000007000E07000E03800E03C00E01E01C0
0F07C007FF8003FE0000F800131C7E9B18>67 D<7FF800FFFE007FFF001C0F801C03801C03C01C
01C01C01C01C01C01C03C01C03801C0F801FFF001FFE001FFE001C0F001C07001C03801C03801C
03801C03801C03801C039C1C039C1C039C7F01F8FF81F87F00F0161C7F9B18>82
D<03F3801FFF803FFF807C0F80700780E00380E00380E00380E000007000007800003F00001FF0
0007FE0000FF00000F800003C00001C00000E00000E06000E0E000E0E001E0F001C0F80780FFFF
80FFFE00E7F800131C7E9B18>I<7FFFF8FFFFF8FFFFF8E07038E07038E07038E0703800700000
700000700000700000700000700000700000700000700000700000700000700000700000700000
700000700000700000700007FF0007FF0007FF00151C7F9B18>I<1FE0003FF8007FFC00781E00
300E0000070000070000FF0007FF001FFF007F0700780700E00700E00700E00700F00F00781F00
3FFFF01FFBF007E1F014147D9318>97 D<7E0000FE00007E00000E00000E00000E00000E00000E
00000E3E000EFF800FFFC00FC1E00F80E00F00700E00700E00380E00380E00380E00380E00380E
00380F00700F00700F80E00FC1E00FFFC00EFF80063E00151C809B18>I<01FE0007FF001FFF80
3E0780380300700000700000E00000E00000E00000E00000E00000E000007000007001C03801C0
3E03C01FFF8007FF0001FC0012147D9318>I<001F80003F80001F800003800003800003800003
8000038003E3800FFB801FFF803C1F80380F80700780700380E00380E00380E00380E00380E003
80E00380700780700780380F803C1F801FFFF00FFBF803E3F0151C7E9B18>I<01F00007FC001F
FE003E0F00380780700380700380E001C0E001C0FFFFC0FFFFC0FFFFC0E000007000007001C038
01C03E03C01FFF8007FF0001FC0012147D9318>I<001F80007FC000FFE000E1E001C0C001C000
01C00001C0007FFFC0FFFFC0FFFFC001C00001C00001C00001C00001C00001C00001C00001C000
01C00001C00001C00001C00001C00001C0007FFF007FFF007FFF00131C7F9B18>I<01E1F007FF
F80FFFF81E1E301C0E003807003807003807003807003807001C0E001E1E001FFC001FF80039E0
003800001C00001FFE001FFFC03FFFE07801F0700070E00038E00038E00038E000387800F07E03
F01FFFC00FFF8001FC00151F7F9318>I<7E0000FE00007E00000E00000E00000E00000E00000E
00000E3E000EFF800FFFC00FC1C00F80E00F00E00E00E00E00E00E00E00E00E00E00E00E00E00E
00E00E00E00E00E00E00E00E00E07FC3FCFFE7FE7FC3FC171C809B18>I<03800007C00007C000
07C0000380000000000000000000000000007FC000FFC0007FC00001C00001C00001C00001C000
01C00001C00001C00001C00001C00001C00001C00001C00001C00001C000FFFF00FFFF80FFFF00
111D7C9C18>I<7FE000FFE0007FE00000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
0000E0007FFFC0FFFFE07FFFC0131C7E9B18>108 D<7E3E00FEFF807FFFC00FC1C00F80E00F00
E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E07FC3FCFFE7
FE7FC3FC1714809318>110 D<01F0000FFE001FFF003E0F803803807001C07001C0E000E0E000
E0E000E0E000E0E000E0F001E07001C07803C03C07803E0F801FFF000FFE0001F00013147E9318
>I<7E3E00FEFF807FFFC00FC1E00F80E00F00700E00700E00380E00380E00380E00380E00380E
00380F00700F00700F80E00FC1E00FFFC00EFF800E3E000E00000E00000E00000E00000E00000E
00000E00007FC000FFE0007FC000151E809318>I<7F87E0FF9FF07FBFF803F87803F03003E000
03C00003C0000380000380000380000380000380000380000380000380000380007FFE00FFFF00
7FFE0015147F9318>114 D<07F7003FFF007FFF00780F00E00700E00700E007007C00007FE000
1FFC0003FE00001F00600780E00380E00380F00380F80F00FFFF00FFFC00E7F00011147D9318>
I<0180000380000380000380000380007FFFC0FFFFC0FFFFC00380000380000380000380000380
000380000380000380000380000380400380E00380E00380E001C1C001FFC000FF80003E001319
7F9818>I<7E07E0FE0FE07E07E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E
00E00E00E00E00E00E00E00E01E00F03E007FFFC03FFFE01FCFC1714809318>I<7F8FF0FF8FF8
7F8FF00E01C00E03800E0380070380070700070700038700038600038E0001CE0001CE0000CC00
00CC0000DC0000780000780000780000700000700000700000F00000E00079E0007BC0007F8000
3F00001E0000151E7F9318>121 D E /Fg 59 123 df<00003FE00000E0100001803800038078
0003007800070030000700000007000000070000000E0000000E0000000E000000FFFFE0000E00
E0001C01C0001C01C0001C01C0001C01C0001C0380003803800038038000380380003807000038
0700007007000070071000700E2000700E2000700E2000E00E2000E0064000E0038000E0000000
C0000001C0000001C000003180000079800000F3000000620000003C0000001D29829F1A>12
D<000100020004000800100020006000C0018001800300070006000E000C001C00180038003800
30007000700060006000E000E000C000C000C000C000C000C000C000C000C000C000C000C000C0
004000600060002000100010000800102E79A113>40 D<00100000080000040000060000020000
030000030000030000010000018000018000018000018000018000018000018000038000038000
0380000300000300000300000700000700000600000600000E00000C00000C00001C0000180000
380000300000700000600000E00000C0000180000100000300000600000C000018000030000060
0000800000112E80A113>I<1C3C3C3C3C040408081020204080060E7D840E>44
D<7FF0FFE07FE00C037D8A10>I<70F8F8F0E005057B840E>I<000F800030E000E07001C0700380
300380380700380F00780F00780E00781E00781E00703C00F03C00F03C00F03C00F07801E07801
E07801E07801C07003C0F003C0F00380F00780F00700700700700E00701C003038001870000FC0
00151F7C9D17>48 D<000200020006000E003C00DC031C001C0038003800380038007000700070
007000E000E000E000E001C001C001C001C003800380038003800780FFF80F1E7B9D17>I<001F
000061800080E00100E00200700220700420700410700820F00820F00820F00840E00881E00703
C0000380000700000C000018000060000080000300000400000800401000401000802001807E03
0047FF0041FE0080FC00807800141F7C9D17>I<001F800060E000807001003002003804203804
20380410380420700460700380600000E00001C000030000FE00001C0000060000070000078000
0780000780300780780780780780F00F00800F00401E00401C0040380020E0001F8000151F7C9D
17>I<00C06000FFC001FF8001FE00010000010000020000020000020000020000040000047800
058C000606000C0700080700000780000780000780000780000F00700F00F00F00F00E00E01E00
801C0080380080300040600061C0001F0000131F7B9D17>53 D<001F000061800080C001006003
00600600600600600600600E00C00F00800F818007C30007E40003F80001F80003FC00047E0018
3F00300F00200700600700C00300C00300C00300800600800600C00C00C008004030003060001F
8000131F7B9D17>56 D<001F0000718000C0C00180C00380E00700E00F00E00F01E01E01E01E01
E01E01E01E01C01C03C01C03C01C03C01C07C01C0F800C0F8006378003C700000F00000E00000E
00001C00601C00F03800F07000E0600080C0004380003E0000131F7B9D17>I<070F1F1F0E0000
000000000000000070F8F8F0E008147B930E>I<00000200000006000000060000000E0000001E
0000001E0000003F0000002F0000004F0000004F0000008F0000010F0000010F0000020F000002
0F0000040F00000C0F0000080F0000100F0000100F0000200F80003FFF800040078000C0078000
80078001000780010007800200078002000780060007801E000F80FF807FF81D207E9F22>65
D<0000FE0200078186001C004C0038003C0060003C00C0001C01C0001803800018070000180F00
00181E0000101E0000103C0000003C00000078000000780000007800000078000000F0000000F0
000000F0000000F0000000F0000080700000807000008070000100380001003800020018000400
0C001800060020000381C00000FE00001F217A9F21>67 D<01FFFF80001E00E0001E0070001E00
38001E001C003C001C003C000E003C000E003C000E0078000E0078000E0078000E0078000E00F0
001E00F0001E00F0001E00F0001E01E0003C01E0003C01E0003C01E0007803C0007003C0007003
C000E003C001C0078001C00780038007800E0007801C000F007000FFFFC0001F1F7D9E22>I<01
FFFFFE001E001C001E000C001E0004001E0004003C0004003C0004003C0004003C000400780808
00780800007808000078180000F0300000FFF00000F0300000F0300001E0200001E0200001E020
0001E0001003C0002003C0002003C0004003C00040078000800780018007800100078007000F00
1F00FFFFFE001F1F7D9E1F>I<01FFFFFC001E0038001E0018001E0008001E0008003C0008003C
0008003C0008003C00080078001000780800007808000078080000F0100000F0300000FFF00000
F0300001E0200001E0200001E0200001E0200003C0000003C0000003C0000003C0000007800000
0780000007800000078000000F800000FFF800001E1F7D9E1E>I<0000FC040007030C001C0098
0030007800E0007801C000380380003003800030070000300E0000301E0000201E0000203C0000
003C00000078000000780000007800000078000000F0000000F000FFF0F0000780F0000780F000
0F0070000F0070000F0070000F0070001E0038001E0018003E001C002E000E00CC000383040000
FC00001E217A9F23>I<01FFF0001F00001E00001E00001E00003C00003C00003C00003C000078
0000780000780000780000F00000F00000F00000F00001E00001E00001E00001E00003C00003C0
0003C00003C0000780000780000780000780000F8000FFF800141F7D9E12>73
D<001FFF0000F80000F00000F00000F00001E00001E00001E00001E00003C00003C00003C00003
C0000780000780000780000780000F00000F00000F00000F00001E00001E00301E00781E00F83C
00F83C00F0780080700040E00021C0001F000018207D9E18>I<01FFF03FE0001F000F80001E00
0E00001E000800001E001000003C002000003C004000003C010000003C02000000780400000078
0800000078100000007830000000F0F0000000F1F8000000F278000000F478000001E83C000001
F03C000001E03C000001E01E000003C01E000003C01E000003C00F000003C00F000007800F0000
0780078000078007800007800780000F8007C000FFF03FF800231F7D9E23>I<01FFF800001F00
00001E0000001E0000001E0000003C0000003C0000003C0000003C000000780000007800000078
00000078000000F0000000F0000000F0000000F0000001E0000001E0000001E0000001E0008003
C0010003C0010003C0030003C00200078006000780060007800C0007801C000F007800FFFFF800
191F7D9E1D>I<01FE00007FC0001E0000FC00001E0000F8000017000178000017000178000027
0002F00000270004F00000270004F00000270008F00000470009E00000470011E00000470021E0
0000470021E00000870043C00000838043C00000838083C00000838083C0000103810780000103
820780000103820780000103840780000203840F00000203880F00000203900F00000203900F00
000401E01E00000401E01E00000401C01E00000C01801E00001C01803E0000FF8103FFC0002A1F
7D9E29>I<01FF007FE0001F000F00001F0004000017800400001780040000278008000023C008
000023C008000023C008000041E010000041E010000041F010000040F010000080F02000008078
20000080782000008078200001003C400001003C400001003C400001001E400002001E80000200
1E800002000F800002000F800004000F0000040007000004000700000C000700001C00020000FF
80020000231F7D9E22>I<01FFFF80001E00E0001E0070001E0038001E003C003C003C003C003C
003C003C003C003C0078007800780078007800F0007800E000F003C000F00F0000FFFC0000F000
0001E0000001E0000001E0000001E0000003C0000003C0000003C0000003C00000078000000780
000007800000078000000F800000FFF000001E1F7D9E1F>80 D<01FFFF00001E03C0001E00E000
1E0070001E0078003C0078003C0078003C0078003C0078007800F0007800F0007801E0007801C0
00F0070000F01E0000FFF00000F0380001E01C0001E01E0001E00E0001E00F0003C01E0003C01E
0003C01E0003C01E0007803C0007803C0807803C0807803C100F801C10FFF00C20000007C01D20
7D9E21>82 D<0007E040001C18C0003005800060038000C0038001C00180018001000380010003
800100038001000380000003C0000003C0000003F8000001FF800001FFE000007FF000001FF000
0001F8000000780000007800000038000000380020003800200038002000300060007000600060
006000E0007000C000E8038000C606000081F800001A217D9F1A>I<0FFFFFF01E0780E0180780
201007802020078020200F0020600F0020400F0020400F0020801E0040001E0000001E0000001E
0000003C0000003C0000003C0000003C00000078000000780000007800000078000000F0000000
F0000000F0000000F0000001E0000001E0000001E0000001E0000003E00000FFFF00001C1F789E
21>I<7FFC1FF807C003C00780010007800100078001000F0002000F0002000F0002000F000200
1E0004001E0004001E0004001E0004003C0008003C0008003C0008003C00080078001000780010
007800100078001000F0002000F0002000F0002000F0004000F000400070008000700100003002
0000380400000C18000007E000001D20779E22>I<FFF007FC0F8000E00F0000C00F0000800F00
01000F0001000F0002000F0004000F0004000F8008000780080007801000078020000780200007
8040000780400007808000078100000781000007C2000003C2000003C4000003C8000003C80000
03D0000003D0000003E0000003C0000003C000000380000001800000010000001E20779E22>I<
FFF1FFC0FF801F003E001C001F003C0018000F003C0010000F003C0010000F003C0020000F003C
0020000F003E0040000F003E00C0000F005E0080000F005E0100000F009E0100000F009E020000
0F011E0200000F021E0400000F021E0400000F041E0800000F041E0800000F081E1000000F081E
2000000F101E2000000F101E4000000F201E4000000F601E8000000FC01E80000007801F000000
07801F00000007001E00000007001E00000006000C000000060008000000040008000000292077
9E2D>I<00F1800389C00707800E03801C03803C0380380700780700780700780700F00E00F00E
00F00E00F00E20F01C40F01C40703C40705C40308C800F070013147C9317>97
D<07803F8007000700070007000E000E000E000E001C001C001CF01D0C3A0E3C0E380F380F700F
700F700F700FE01EE01EE01EE01CE03CE038607060E031C01F0010207B9F15>I<007E0001C100
0300800E07801E07801C07003C0200780000780000780000F00000F00000F00000F00000F00000
70010070020030040018380007C00011147C9315>I<0000780003F80000700000700000700000
700000E00000E00000E00000E00001C00001C000F1C00389C00707800E03801C03803C03803807
00780700780700780700F00E00F00E00F00E00F00E20F01C40F01C40703C40705C40308C800F07
0015207C9F17>I<007C01C207010E011C013C013802780C7BF07C00F000F000F000F000700070
0170023804183807C010147C9315>I<00007800019C00033C00033C000718000700000700000E
00000E00000E00000E00000E0001FFE0001C00001C00001C00001C000038000038000038000038
0000380000700000700000700000700000700000700000E00000E00000E00000E00000C00001C0
0001C0000180003180007B0000F300006600003C00001629829F0E>I<003C6000E27001C1E003
80E00700E00F00E00E01C01E01C01E01C01E01C03C03803C03803C03803C03803C07003C07001C
0F001C17000C2E0003CE00000E00000E00001C00001C00301C00783800F0700060E0003F800014
1D7E9315>I<01E0000FE00001C00001C00001C00001C000038000038000038000038000070000
070000071E000763000E81800F01C00E01C00E01C01C03801C03801C03801C0380380700380700
380700380E10700E20700C20701C20700C40E00CC060070014207D9F17>I<00C001E001E001C0
00000000000000000000000000000E003300230043804300470087000E000E000E001C001C001C
003840388030807080310033001C000B1F7C9E0E>I<0001800003C00003C00003800000000000
00000000000000000000000000000000003C00004600008700008700010700010700020E00000E
00000E00000E00001C00001C00001C00001C000038000038000038000038000070000070000070
0000700000E00000E00030E00079C000F180006300003C00001228829E0E>I<01E0000FE00001
C00001C00001C00001C0000380000380000380000380000700000700000703C00704200E08E00E
11E00E21E00E40C01C80001D00001E00001FC00038E00038700038700038384070708070708070
7080703100E03100601E0013207D9F15>I<03C01FC0038003800380038007000700070007000E
000E000E000E001C001C001C001C0038003800380038007000700070007100E200E200E200E200
640038000A207C9F0C>I<1C0F80F0002630C318004740640C004780680E004700700E00470070
0E008E00E01C000E00E01C000E00E01C000E00E01C001C01C038001C01C038001C01C038001C01
C0708038038071003803806100380380E10038038062007007006600300300380021147C9325>
I<1C0F802630C04740604780604700704700708E00E00E00E00E00E00E00E01C01C01C01C01C01
C01C03843803883803083807083803107003303001C016147C931A>I<007C0001C3000301800E
01C01E01C01C01E03C01E07801E07801E07801E0F003C0F003C0F003C0F00780F00700700F0070
0E0030180018700007C00013147C9317>I<01C1E002621804741C04781C04701E04701E08E01E
00E01E00E01E00E01E01C03C01C03C01C03C01C0380380780380700380E003C1C0072380071E00
0700000700000E00000E00000E00000E00001C00001C0000FFC000171D809317>I<00F0400388
C00705800E03801C03803C0380380700780700780700780700F00E00F00E00F00E00F00E00F01C
00F01C00703C00705C0030B8000F380000380000380000700000700000700000700000E00000E0
000FFE00121D7C9315>I<1C1E002661004783804787804707804703008E00000E00000E00000E
00001C00001C00001C00001C000038000038000038000038000070000030000011147C9313>I<
00FC030206010C030C070C060C000F800FF007F803FC003E000E700EF00CF00CE008401020601F
8010147D9313>I<018001C0038003800380038007000700FFF007000E000E000E000E001C001C
001C001C003800380038003820704070407080708031001E000C1C7C9B0F>I<0E00C03300E023
01C04381C04301C04701C08703800E03800E03800E03801C07001C07001C07001C07101C0E2018
0E20180E201C1E200C264007C38014147C9318>I<0E03803307802307C04383C04301C04700C0
8700800E00800E00800E00801C01001C01001C01001C02001C02001C04001C04001C08000E3000
03C00012147C9315>I<0E00C1C03300E3C02301C3E04381C1E04301C0E04701C060870380400E
0380400E0380400E0380401C0700801C0700801C0700801C0701001C0701001C0602001C0F0200
0C0F04000E13080003E1F0001B147C931E>I<0383800CC4401068E01071E02071E02070C040E0
0000E00000E00000E00001C00001C00001C00001C040638080F38080F38100E5810084C6007878
0013147D9315>I<0E00C03300E02301C04381C04301C04701C08703800E03800E03800E03801C
07001C07001C07001C07001C0E00180E00180E001C1E000C3C0007DC00001C00001C00003800F0
3800F07000E06000C0C0004380003E0000131D7C9316>I<01C04003E08007F1800C1F00080200
0004000008000010000020000040000080000100000200000401000802001002003E0C0063FC00
41F80080E00012147D9313>I E /Fh 41 122 df<FFE0FFE00B027E8A11>45
D<70F8F8F87005057B840F>I<000080000180000300000300000300000600000600000600000C
00000C00000C0000180000180000180000300000300000300000600000600000600000C00000C0
000180000180000180000300000300000300000600000600000600000C00000C00000C00001800
00180000180000300000300000300000600000600000600000C00000C00000112D7CA119>I<01
8003801F80E3800380038003800380038003800380038003800380038003800380038003800380
0380038003800380038003800380038007C0FFFE0F1E7B9D19>49 D<03F0000C1E001007002007
804003C04003C0F003E0F801E0F801E0F801E02003E00003E00003C00007C0000780000F00000E
00001C0000380000700000C0000180000300000200200400200800201000403FFFC07FFFC0FFFF
C0131E7D9D19>I<03F8000C1E001007002007807807C07803C07803C03807C00007C000078000
0780000F00000E0000380003F000001E00000F000007800007C00003C00003E02003E0F803E0F8
03E0F803E0F003C04007C0400780300F000C1E0003F000131F7D9D19>I<000300000300000700
000F00000F00001700002700006700004700008700018700010700020700060700040700080700
100700300700200700400700C00700FFFFF8000700000700000700000700000700000700000F80
00FFF8151E7E9D19>I<4000007FFFE07FFFC07FFFC04000808001008002008002000004000008
0000080000100000300000200000600000600000E00000C00000C00001C00001C00001C00001C0
0003C00003C00003C00003C00003C00003C00003C000018000131F7C9D19>55
D<70F8F8F8700000000000000000000070F8F8F87005147B930F>58 D<00010000000380000003
8000000380000007C0000007C0000007C0000009E0000009E0000011F0000010F0000010F00000
207800002078000020780000403C0000403C0000C03E0000801E0000801E0001FFFF0001000F00
01000F000200078002000780060007C0040003C0040003C00C0001E00C0001E03E0003F0FF801F
FE1F207D9F25>65 D<000FE01000381C3000E0027003C00170078000F00F0000701E0000701E00
00303C0000303C0000107C00001078000010F8000000F8000000F8000000F8000000F8000000F8
000000F8000000F8000000F8000000780000007C0000103C0000103C0000101E0000201E000020
0F0000200780004003C0008000E0030000380C00000FF0001C217C9F24>67
D<FFFFF8000F801E0007800780078003C0078001E0078000F00780007007800078078000780780
003C0780003C0780003C0780003E0780003E0780003E0780003E0780003E0780003E0780003E07
80003E0780003C0780003C0780007C0780007807800078078000F0078001E0078003C007800780
0F801E00FFFFF8001F1F7D9E26>I<FFFFFFC00F8007C0078001C0078000C00780004007800060
078000200780002007800020078020200780200007802000078060000780E00007FFE0000780E0
000780600007802000078020000780200007800008078000080780000807800010078000100780
00100780003007800070078000E00F8003E0FFFFFFE01D1F7D9E22>I<FFFE00000FC000000780
000007800000078000000780000007800000078000000780000007800000078000000780000007
800000078000000780000007800000078000000780000007800000078000000780008007800080
078000800780008007800180078001000780030007800300078007000F801F00FFFFFF00191F7D
9E1F>76 D<FF800FFE07C001F007C000E005E0004004F0004004F0004004780040043C0040043C
0040041E0040040F0040040F0040040780400403C0400403C0400401E0400400F0400400F04004
00784004003C4004003C4004001E4004000F4004000F40040007C0040003C0040003C0040001C0
0E0000C01F0000C0FFE000401F1F7D9E25>78 D<FFFFF0000F803E0007800F0007800780078003
C0078003C0078003E0078003E0078003E0078003E0078003C0078003C00780078007800F000780
3E0007FFF000078000000780000007800000078000000780000007800000078000000780000007
800000078000000780000007800000078000000FC00000FFFC00001B1F7D9E22>80
D<FFFFC0000F80780007801E0007800F0007800F8007800780078007C0078007C0078007C00780
07C00780078007800F8007800F0007801E000780780007FFC0000780E000078030000780380007
801C0007801E0007801E0007801E0007801F0007801F0007801F0007801F0107801F8107800F81
0FC00782FFFC03C4000000F820207D9E24>82 D<03F0200C0C601803E03000E06000E0600060E0
0060E00020E00020E00020F00000F800007C00007F80003FFC001FFF0007FF8001FFC0000FE000
03E00001F00000F0000070800070800070800070800070C00060C000E0E000C0F80180C6030081
FC0014217C9F1C>I<001800001800001800003C00003C00004E00004E00004E00008700008700
0187800103800103800201C00201C003FFC00400E00400E00800700800701800703C0078FE01FF
18177F961C>97 D<FFFC001C07001C07801C03801C03C01C03C01C03C01C03C01C03801C07001F
FE001FFF001C03801C03C01C01E01C01E01C01E01C01E01C01E01C01C01C03C01C0780FFFE0013
177D961A>I<007E080381980700780C00381C0018380018780008700008F00000F00000F00000
F00000F00000F00000F000007000087800083800081C00100C0010070060038180007E0015177E
961B>I<FFFC001C07001C03801C01C01C00E01C00E01C00701C00701C00781C00781C00781C00
781C00781C00781C00781C00701C00701C00F01C00E01C01C01C03801C0700FFFC0015177D961C
>I<FFFF801C03801C01801C00801C00C01C00401C00401C10401C10001C10001C30001FF0001C
30001C10001C10201C10201C00201C00601C00401C00401C00C01C01C0FFFFC013177D9619>I<
FFFF001C07001C01001C01001C01801C00801C00801C20801C20001C20001C60001FE0001C6000
1C20001C20001C20001C00001C00001C00001C00001C00001C0000FFC00011177D9618>I<007E
080381980700780C00381C0018380018780008700008F00000F00000F00000F00000F00000F007
FFF000787000387800383800381C00380C00380700380380D8007F0818177E961D>I<FF9FF01C
03801C03801C03801C03801C03801C03801C03801C03801C03801C03801FFF801C03801C03801C
03801C03801C03801C03801C03801C03801C03801C0380FF9FF014177D961C>I<FF801C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF
8009177E960E>I<FF81FC1C00F01C00C01C00801C01001C02001C04001C08001C10001C30001C
78001C98001D1C001E0E001C07001C07001C03801C01C01C01C01C00E01C00F01C00F8FF81FE17
177D961D>107 D<FFC01C001C001C001C001C001C001C001C001C001C001C001C001C001C011C
011C011C011C031C021C061C0EFFFE10177D9617>I<FC001FC01C001E001C001E0016002E0016
002E0016002E0013004E0013004E0013004E0011808E0011808E0010C10E0010C10E0010C10E00
10620E0010620E0010620E0010340E0010340E0010340E0010180E0038180E00FE187FC01A177D
9622>I<FC07F01C01C01E008017008017008013808011808011C08010E08010E0801070801070
80103880101C80101C80100E80100E80100780100380100380100180380180FE008014177D961C
>I<00FE000383800E00E01C00703C007838003878003C70001CF0001EF0001EF0001EF0001EF0
001EF0001EF0001E70001C78003C3800383C00781C00700E00E003838000FE0017177E961D>I<
FFFC001C0E001C07801C03801C03C01C03C01C03C01C03C01C03801C07801C0E001FFC001C0000
1C00001C00001C00001C00001C00001C00001C00001C00001C0000FF800012177D9619>I<FFF0
001C1C001C0E001C07001C07801C07801C07801C07801C07001C0E001C1C001FF0001C18001C1C
001C0C001C0E001C0E001C0F001C0F001C0F041C0F841C0788FF81F016177D961B>114
D<0F84306C601C400CC004C004C004E00070007F003FE01FF801FC001C000E0006800680068006
C004E008D81087E00F177E9615>I<7FFFFC70381C403804403804C03806803802803802803802
003800003800003800003800003800003800003800003800003800003800003800003800003800
007C0007FFC017177F961B>I<FF87F01C01C01C00801C00801C00801C00801C00801C00801C00
801C00801C00801C00801C00801C00801C00801C00801C00801C00800C01000E01000602000384
0000F80014177D961C>I<FF803F3C001C1C00181E00180E00100E001007002007002007806003
804003804001C08001C08000E10000E10000E100007200007200003C00003C00003C0000180000
180018177F961C>I<FF07FC1FC03C01E007801C00E003001C00E002001C00F002000E00F00400
0E00F004000E013804000701380800070338080007821C180003821C100003861E100003C40E30
0001C40E200001C807200000E807400000E807400000F003C00000700380000070038000006001
8000002001000022177F9626>I<FF81FE1F00F00F00E00700C003808003C10001C20000E60000
F400007800003800001C00003E00004E0000C7000087800103800301C00200E00400F00C00703C
00F8FF01FF18177F961C>I<FF803F803E001C001E0018000E0010000700300007802000038040
0001C0400001E0800000F1800000710000007A0000003E0000001C0000001C0000001C0000001C
0000001C0000001C0000001C0000001C0000001C000000FF800019177F961C>I
E /Fi 4 107 df<FFFFF0FFFFF014027D881B>0 D<000FC000007FF80001F03E00038007000600
01800C0000C01800006030000030300000306000001860000018C000000CC000000CC000000CC0
00000CC000000CC000000CC000000C60000018600000183000003030000030180000600C0000C0
060001800380070001F03E00007FF800000FC0001E1D7E9623>13 D<01FF8007FF800E00001800
00300000600000600000600000C00000C00000FFFF80FFFF80C00000C000006000006000006000
003000001800000E000007FF8001FF8011167D9218>50 D<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C002217C980A>106 D E /Fj
82 124 df<001F83E000F06E3001C078780380F8780300F0300700700007007000070070000700
7000070070000700700007007000FFFFFF80070070000700700007007000070070000700700007
007000070070000700700007007000070070000700700007007000070070000700700007007000
0700700007007000070070007FE3FF001D20809F1B>11 D<003F0000E0C001C0C00381E00701E0
0701E0070000070000070000070000070000070000FFFFE00700E00700E00700E00700E00700E0
0700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E0
7FC3FE1720809F19>I<003FE000E0E001C1E00381E00700E00700E00700E00700E00700E00700
E00700E00700E0FFFFE00700E00700E00700E00700E00700E00700E00700E00700E00700E00700
E00700E00700E00700E00700E00700E00700E00700E00700E07FE7FE1720809F19>I<001F81F8
0000F04F040001C07C06000380F80F000300F00F000700F00F0007007000000700700000070070
0000070070000007007000000700700000FFFFFFFF000700700700070070070007007007000700
700700070070070007007007000700700700070070070007007007000700700700070070070007
007007000700700700070070070007007007000700700700070070070007007007007FE3FE3FF0
2420809F26>I<7038F87CFC7EFC7E743A0402040204020804080410081008201040200F0E7E9F
17>34 D<000300C0000300C0000300C0000300C000060180000601800006018000060180000601
80000C0300000C0300000C0300000C0300000C0300001806007FFFFFFCFFFFFFFE00300C000030
0C0000300C0000300C0000601800006018000060180000601800FFFFFFFE7FFFFFFC00C0300001
806000018060000180600001806000018060000300C0000300C0000300C0000300C0000300C000
0601800006018000060180001F297D9F26>I<0F0000301880003030600060703001C0602C06C0
6013F980E0100300E0100300E0100600E0100C00E0100C00E01018006010300060203000702060
003040C0001880C0000F018000000300E0000303100006060800060604000C0C0400180C040018
1C0200301C0200601C0200601C0200C01C0201801C0201801C0203000C0406000C04060006040C
00060818000310080000E01F257DA126>37 D<0078000000840000018400000302000007020000
070200000702000007020000070400000704000007080000070800000310000003A00FFC03C003
E0038001C001C0008001C0010003E0010004E0020008F00200187004003078080070380800701C
1000F01E1000F00E2000F0074000F003C0087003C0087801C010380670301C18386007E00F801E
227EA023>I<70F8FCFC74040404080810102040060E7C9F0D>I<0020004000800100020006000C
000C00180018003000300030007000600060006000E000E000E000E000E000E000E000E000E000
E000E000E0006000600060007000300030003000180018000C000C000600020001000080004000
200B2E7DA112>I<800040002000100008000C00060006000300030001800180018001C000C000
C000C000E000E000E000E000E000E000E000E000E000E000E000E000C000C000C001C001800180
018003000300060006000C00080010002000400080000B2E7DA112>I<00060000000600000006
000000060000000600000006000000060000000600000006000000060000000600000006000000
0600000006000000060000FFFFFFF0FFFFFFF00006000000060000000600000006000000060000
000600000006000000060000000600000006000000060000000600000006000000060000000600
001C207D9A23>43 D<70F8FCFC74040404080810102040060E7C840D>I<FFC0FFC00A027F8A0F>
I<70F8F8F87005057C840D>I<03F0000E1C001C0E001806003807007003807003807003807003
80F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003
C07003807003807003807807803807001806001C0E000E1C0003F000121F7E9D17>48
D<018003800F80F380038003800380038003800380038003800380038003800380038003800380
03800380038003800380038003800380038007C0FFFE0F1E7C9D17>I<03F0000C1C00100E0020
0700400780800780F007C0F803C0F803C0F803C02007C00007C0000780000780000F00000E0000
1C0000380000700000600000C0000180000300000600400C00401800401000803FFF807FFF80FF
FF80121E7E9D17>I<03F0000C1C00100E00200F00780F80780780780780380F80000F80000F00
000F00000E00001C0000380003F000003C00000E00000F000007800007800007C02007C0F807C0
F807C0F807C0F00780400780400F00200E001C3C0003F000121F7E9D17>I<000600000600000E
00000E00001E00002E00002E00004E00008E00008E00010E00020E00020E00040E00080E00080E
00100E00200E00200E00400E00C00E00FFFFF0000E00000E00000E00000E00000E00000E00000E
0000FFE0141E7F9D17>I<1803001FFE001FFC001FF8001FE00010000010000010000010000010
000010000011F000161C00180E001007001007800003800003800003C00003C00003C07003C0F0
03C0F003C0E00380400380400700200600100E000C380003E000121F7E9D17>I<007C00018200
0701000E03800C07801C0780380300380000780000700000700000F1F000F21C00F40600F80700
F80380F80380F003C0F003C0F003C0F003C0F003C07003C07003C0700380380380380700180700
0C0E00061C0001F000121F7E9D17>I<4000007FFFC07FFF807FFF804001008002008002008004
0000080000080000100000200000200000400000400000C00000C00001C0000180000380000380
00038000038000078000078000078000078000078000078000078000030000121F7D9D17>I<03
F0000C0C001006003003002001806001806001806001807001807803003E03003F06001FC8000F
F00003F80007FC000C7E00103F00300F806003804001C0C001C0C000C0C000C0C000C0C0008060
01802001001002000C0C0003F000121F7E9D17>I<03F0000E18001C0C00380600380700700700
700380F00380F00380F003C0F003C0F003C0F003C0F003C07007C07007C03807C0180BC00E13C0
03E3C0000380000380000380000700300700780600780E00700C002018001070000FC000121F7E
9D17>I<70F8F8F8700000000000000000000070F8F8F87005147C930D>I<70F8F8F87000000000
00000000000070F0F8F878080808101010202040051D7C930D>I<7FFFFFE0FFFFFFF000000000
00000000000000000000000000000000000000000000000000000000FFFFFFF07FFFFFE01C0C7D
9023>61 D<000100000003800000038000000380000007C0000007C0000007C0000009E0000009
E0000009E0000010F0000010F0000010F00000207800002078000020780000403C0000403C0000
403C0000801E0000801E0000FFFE0001000F0001000F0001000F00020007800200078002000780
040003C00E0003C01F0007E0FFC03FFE1F207F9F22>65 D<FFFFE0000F80380007801E0007801F
0007800F0007800F8007800F8007800F8007800F8007800F8007800F0007801F0007801E000780
3C0007FFF00007803C0007801E0007800F0007800F8007800780078007C0078007C0078007C007
8007C0078007C00780078007800F8007800F0007801F000F803C00FFFFF0001A1F7E9E20>I<00
0FC040007030C001C009C0038005C0070003C00E0001C01E0000C01C0000C03C0000C07C000040
7C00004078000040F8000000F8000000F8000000F8000000F8000000F8000000F8000000F80000
00F8000000780000007C0000407C0000403C0000401C0000401E0000800E000080070001000380
020001C0040000703800000FC0001A217D9F21>I<FFFFE0000F803C0007801E00078007000780
0380078003C0078001E0078001E0078001F0078000F0078000F0078000F8078000F8078000F807
8000F8078000F8078000F8078000F8078000F8078000F8078000F0078000F0078000F0078001E0
078001E0078003C0078003800780070007800E000F803C00FFFFE0001D1F7E9E23>I<FFFFFF00
0F800F000780030007800300078001000780018007800080078000800780008007808080078080
0007808000078080000781800007FF800007818000078080000780800007808000078080000780
00200780002007800020078000400780004007800040078000C0078000C0078001800F800F80FF
FFFF801B1F7E9E1F>I<FFFFFF000F800F00078003000780030007800100078001800780008007
8000800780008007800080078080000780800007808000078080000781800007FF800007818000
078080000780800007808000078080000780000007800000078000000780000007800000078000
0007800000078000000FC00000FFFE0000191F7E9E1E>I<000FE0200078186000E004E0038002
E0070001E00F0000E01E0000601E0000603C0000603C0000207C00002078000020F8000000F800
0000F8000000F8000000F8000000F8000000F8000000F8007FFCF80003E0780001E07C0001E03C
0001E03C0001E01E0001E01E0001E00F0001E0070001E0038002E000E0046000781820000FE000
1E217D9F24>I<FFF8FFF80F800F8007800F0007800F0007800F0007800F0007800F0007800F00
07800F0007800F0007800F0007800F0007800F0007800F0007FFFF0007800F0007800F0007800F
0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F000780
0F0007800F000F800F80FFF8FFF81D1F7E9E22>I<FFFC0FC00780078007800780078007800780
078007800780078007800780078007800780078007800780078007800780078007800780078007
800FC0FFFC0E1F7F9E10>I<0FFFC0007C00003C00003C00003C00003C00003C00003C00003C00
003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00
003C00203C00F83C00F83C00F83C00F0380040780040700030E0000F800012207E9E17>I<FFFC
0FFC0FC003E0078001800780010007800200078004000780080007801000078020000780400007
808000078100000783000007878000078F80000793C0000791E00007A1E00007C0F0000780F000
0780780007803C0007803C0007801E0007801E0007800F000780078007800780078007C00FC007
E0FFFC3FFC1E1F7E9E23>I<FFFE000FC000078000078000078000078000078000078000078000
078000078000078000078000078000078000078000078000078000078000078000078002078002
07800207800207800607800407800407800C07801C0F807CFFFFFC171F7E9E1C>I<FF80001FF8
0F80001F800780001F0005C0002F0005C0002F0005C0002F0004E0004F0004E0004F000470008F
000470008F000470008F000438010F000438010F000438010F00041C020F00041C020F00041C02
0F00040E040F00040E040F00040E040F000407080F000407080F000407080F000403900F000403
900F000401E00F000401E00F000401E00F000E00C00F001F00C01F80FFE0C1FFF8251F7E9E2A>
I<FF803FF807C007C007C0038005E0010005E0010004F001000478010004780100043C0100043C
0100041E0100040F0100040F010004078100040781000403C1000401E1000401E1000400F10004
00F1000400790004003D0004003D0004001F0004001F0004000F0004000700040007000E000300
1F000300FFE001001D1F7E9E22>I<001F800000F0F00001C0380007801E000F000F000E000700
1E0007803C0003C03C0003C07C0003E0780001E0780001E0F80001F0F80001F0F80001F0F80001
F0F80001F0F80001F0F80001F0F80001F0F80001F0780001E07C0003E07C0003E03C0003C03C00
03C01E0007800E0007000F000F0007801E0001C0380000F0F000001F80001C217D9F23>I<FFFF
E0000F80780007801C0007801E0007800F0007800F8007800F8007800F8007800F8007800F8007
800F8007800F0007801E0007801C000780780007FFE00007800000078000000780000007800000
0780000007800000078000000780000007800000078000000780000007800000078000000FC000
00FFFC0000191F7E9E1F>I<001F800000F0F00001C0380007801E000F000F000E0007001E0007
803C0003C03C0003C07C0003E07C0003E0780001E0F80001F0F80001F0F80001F0F80001F0F800
01F0F80001F0F80001F0F80001F0F80001F0780001E0780001E07C0003E03C0003C03C0F03C01E
1087800E2047000F204F0007A03E0001E0380000F0F010001FB010000030100000383000003870
00003FF000001FE000001FE000000FC0000007801C297D9F23>I<FFFF80000F80F00007807800
07803C0007801E0007801E0007801F0007801F0007801F0007801F0007801E0007801E0007803C
00078078000780F00007FF80000781C0000780E0000780F0000780700007807800078078000780
780007807C0007807C0007807C0007807C0407807E0407803E040FC01E08FFFC0F10000003E01E
207E9E21>I<07E0800C1980100780300380600180600180E00180E00080E00080E00080F00000
F000007800007F00003FF0001FFC000FFE0003FF00001F800007800003C00003C00001C08001C0
8001C08001C08001C0C00180C00380E00300F00600CE0C0081F80012217D9F19>I<7FFFFFE078
0F01E0600F0060400F0020400F0020C00F0030800F0010800F0010800F0010800F0010000F0000
000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F00
00000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000001F800007FF
FE001C1F7E9E21>I<FFFC3FF80FC007C007800380078001000780010007800100078001000780
010007800100078001000780010007800100078001000780010007800100078001000780010007
800100078001000780010007800100078001000780010007800100038002000380020001C00200
01C0040000E008000070180000382000000FC0001D207E9E22>I<FFF07FF81FF01F800FC007C0
0F00078003800F00078001000F0007C00100078007C00200078007C00200078007C0020003C009
E0040003C009E0040003C009E0040003E010F00C0001E010F0080001E010F0080001F020780800
00F02078100000F02078100000F0403C10000078403C20000078403C20000078C03E2000003C80
1E4000003C801E4000003C801E4000001F000F8000001F000F8000001F000F8000001E00078000
000E00070000000E00070000000C000300000004000200002C207F9E2F>87
D<FFF003FF1F8000F80F8000600780004007C0004003E0008001E0008001F0010000F0030000F8
0200007C0400003C0400003E0800001E0800001F1000000FB0000007A0000007C0000003C00000
03C0000003C0000003C0000003C0000003C0000003C0000003C0000003C0000003C0000003C000
0007C000007FFE00201F7F9E22>89 D<7FFFF87C00F87000F06001E04001E0C003C0C003C08007
80800F80800F00001E00001E00003C00003C0000780000F80000F00001E00001E00003C00403C0
040780040F80040F000C1E000C1E00083C00183C0018780038F801F8FFFFF8161F7D9E1C>I<FE
FEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0FEFE072D7CA10D>I<080410082010201040204020804080408040B85CFC7EFC7E7C3E38
1C0F0E7B9F17>I<FEFE0606060606060606060606060606060606060606060606060606060606
060606060606060606060606FEFE072D7FA10D>I<1FE000303000781800781C00300E00000E00
000E00000E0000FE00078E001E0E00380E00780E00F00E10F00E10F00E10F01E10781E10386720
0F83C014147E9317>97 D<0E0000FE00000E00000E00000E00000E00000E00000E00000E00000E
00000E00000E00000E3E000EC3800F01C00F00E00E00E00E00700E00700E00780E00780E00780E
00780E00780E00780E00700E00700E00E00F00E00D01C00CC300083E0015207F9F19>I<03F80E
0C1C1E381E380C70007000F000F000F000F000F000F00070007000380138011C020E0C03F01014
7E9314>I<000380003F8000038000038000038000038000038000038000038000038000038000
038003E380061B801C0780380380380380700380700380F00380F00380F00380F00380F00380F0
03807003807003803803803807801C07800E1B8003E3F815207E9F19>I<03F0000E1C001C0E00
380700380700700700700380F00380F00380FFFF80F00000F00000F00000700000700000380080
1800800C010007060001F80011147F9314>I<007C00C6018F038F070607000700070007000700
07000700FFF0070007000700070007000700070007000700070007000700070007000700070007
0007007FF01020809F0E>I<0000E003E3300E3C301C1C30380E00780F00780F00780F00780F00
780F00380E001C1C001E380033E0002000002000003000003000003FFE001FFF800FFFC03001E0
600070C00030C00030C00030C000306000603000C01C038003FC00141F7F9417>I<0E0000FE00
000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E3E000E43000E81
800F01C00F01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01
C00E01C00E01C00E01C0FFE7FC16207F9F19>I<1C001E003E001E001C00000000000000000000
0000000E007E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00
0E00FFC00A1F809E0C>I<00E001F001F001F000E0000000000000000000000000007007F000F0
007000700070007000700070007000700070007000700070007000700070007000700070007000
7000706070F060F0C061803F000C28829E0E>I<0E0000FE00000E00000E00000E00000E00000E
00000E00000E00000E00000E00000E00000E0FF00E03C00E03000E02000E04000E08000E10000E
30000E70000EF8000F38000E1C000E1E000E0E000E07000E07800E03800E03C00E03E0FFCFF815
207F9F18>I<0E00FE000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E00FFE00B20809F0C>I<0E
1F01F000FE618618000E81C81C000F00F00E000F00F00E000E00E00E000E00E00E000E00E00E00
0E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E
000E00E00E000E00E00E000E00E00E00FFE7FE7FE023147F9326>I<0E3E00FE43000E81800F01
C00F01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01
C00E01C00E01C0FFE7FC16147F9319>I<01F800070E001C03803801C03801C07000E07000E0F0
00F0F000F0F000F0F000F0F000F0F000F07000E07000E03801C03801C01C0380070E0001F80014
147F9317>I<0E3E00FEC3800F01C00F00E00E00E00E00F00E00700E00780E00780E00780E0078
0E00780E00780E00700E00F00E00E00F01E00F01C00EC3000E3E000E00000E00000E00000E0000
0E00000E00000E00000E0000FFE000151D7F9319>I<03E0800619801C05803C07803803807803
80700380F00380F00380F00380F00380F00380F003807003807803803803803807801C0B800E13
8003E380000380000380000380000380000380000380000380000380003FF8151D7E9318>I<0E
78FE8C0F1E0F1E0F0C0E000E000E000E000E000E000E000E000E000E000E000E000E000E00FFE0
0F147F9312>I<1F9030704030C010C010C010E00078007F803FE00FF00070803880188018C018
C018E030D0608F800D147E9312>I<020002000200060006000E000E003E00FFF80E000E000E00
0E000E000E000E000E000E000E000E000E080E080E080E080E080610031001E00D1C7F9B12>I<
0E01C0FE1FC00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0
0E01C00E01C00E01C00E03C00603C0030DC001F1FC16147F9319>I<FF83F81E01E01C00C00E00
800E00800E008007010007010003820003820003820001C40001C40001EC0000E80000E8000070
0000700000700000200015147F9318>I<FF9FE1FC3C0780701C0300601C0380200E0380400E03
80400E03C0400707C0800704C0800704E080038861000388710003C8730001D0320001D03A0000
F03C0000E01C0000E01C0000601800004008001E147F9321>I<7FC3FC0F01E00701C007018003
810001C20000E40000EC00007800003800003C00007C00004E000087000107000303800201C006
01E01E01E0FF07FE1714809318>I<FF83F81E01E01C00C00E00800E00800E0080070100070100
03820003820003820001C40001C40001EC0000E80000E800007000007000007000002000002000
004000004000004000F08000F08000F100006200003C0000151D7F9318>I<3FFF380E200E201C
40384078407000E001E001C00380078007010E011E011C0338027006700EFFFE10147F9314>I<
FFFFFC1601808C17>I E /Fk 43 122 df<007E0001C1800301800703C00E03C00E01800E0000
0E00000E00000E00000E0000FFFFC00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0
0E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C07F87F8151D809C17>12
D<60F0F8680808081010204080050C7C9C0C>39 D<60F0F0701010101020204080040C7C830C>
44 D<FFE0FFE00B0280890E>I<60F0F06004047C830C>I<03C00C301818300C300C700E600660
06E007E007E007E007E007E007E007E007E007E007E007E007E00760066006700E300C300C1818
0C3007E0101D7E9B15>48 D<030007003F00C70007000700070007000700070007000700070007
000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>I<07C018
30201C400C400EF00FF80FF807F8077007000F000E000E001C001C00380070006000C001800300
06010C01180110023FFE7FFEFFFE101C7E9B15>I<07E01830201C201C781E780E781E381E001C
001C00180030006007E00030001C001C000E000F000F700FF80FF80FF80FF00E401C201C183007
E0101D7E9B15>I<000C00000C00001C00003C00003C00005C0000DC00009C00011C00031C0002
1C00041C000C1C00081C00101C00301C00201C00401C00C01C00FFFFC0001C00001C00001C0000
1C00001C00001C00001C0001FFC0121C7F9B15>I<300C3FF83FF03FC020002000200020002000
200023E024302818301C200E000E000F000F000F600FF00FF00FF00F800E401E401C2038187007
C0101D7E9B15>I<00F0030C06040C0E181E301E300C700070006000E3E0E430E818F00CF00EE0
06E007E007E007E007E007600760077006300E300C18180C3003E0101D7E9B15>I<4000007FFF
807FFF007FFF0040020080040080040080080000100000100000200000600000400000C00000C0
0001C0000180000180000380000380000380000380000780000780000780000780000780000780
00030000111D7E9B15>I<03E00C301008200C20066006600660067006780C3E083FB01FE007F0
07F818FC307E601E600FC007C003C003C003C00360026004300C1C1007E0101D7E9B15>I<03C0
0C301818300C700C600EE006E006E007E007E007E007E0076007700F300F18170C2707C7000600
06000E300C780C78187010203030C00F80101D7E9B15>I<FFFFC00F00F00F00380F003C0F001C
0F001E0F001E0F001E0F001E0F001C0F003C0F00780F01F00FFFE00F00780F003C0F001E0F000E
0F000F0F000F0F000F0F000F0F000F0F001E0F001E0F003C0F0078FFFFE0181C7E9B1D>66
D<FFFFFC0F003C0F000C0F00040F00040F00060F00020F00020F02020F02000F02000F02000F06
000FFE000F06000F02000F02000F02000F02010F00010F00020F00020F00020F00060F00060F00
0C0F003CFFFFFC181C7E9B1C>69 D<FFF00F000F000F000F000F000F000F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00FFF00C1C7F9B0F>73
D<7FFFFFC0700F01C0600F00C0400F0040400F0040C00F0020800F0020800F0020800F0020000F
0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F000000
0F0000000F0000000F0000000F0000000F0000000F0000000F0000001F800003FFFC001B1C7F9B
1E>84 D<FFE0FFE0FF1F001F003C1E001E00180F001F00100F001F00100F001F001007801F0020
0780278020078027802003C027804003C043C04003C043C04003E043C04001E081E08001E081E0
8001E081E08000F100F10000F100F10000F100F100007900FA00007A007A00007A007A00003E00
7C00003C003C00003C003C00003C003C00001800180000180018000018001800281D7F9B2B>87
D<1FC000307000783800781C00301C00001C00001C0001FC000F1C00381C00701C00601C00E01C
40E01C40E01C40603C40304E801F870012127E9115>97 D<FC00001C00001C00001C00001C0000
1C00001C00001C00001C00001C00001C00001C7C001D86001E03001C01801C01C01C00C01C00E0
1C00E01C00E01C00E01C00E01C00E01C00C01C01C01C01801E030019060010F800131D7F9C17>
I<07E00C301878307870306000E000E000E000E000E000E00060007004300418080C3007C00E12
7E9112>I<003F0000070000070000070000070000070000070000070000070000070000070003
E7000C1700180F00300700700700600700E00700E00700E00700E00700E00700E0070060070070
0700300700180F000C370007C7E0131D7E9C17>I<03E00C301818300C700E6006E006FFFEE000
E000E000E00060007002300218040C1803E00F127F9112>I<00F8018C071E061E0E0C0E000E00
0E000E000E000E00FFE00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E
000E007FE00F1D809C0D>I<00038003C4C00C38C01C3880181800381C00381C00381C00381C00
1818001C38000C300013C0001000003000001800001FF8001FFF001FFF803003806001C0C000C0
C000C0C000C06001803003001C0E0007F800121C7F9215>I<FC00001C00001C00001C00001C00
001C00001C00001C00001C00001C00001C00001C7C001C87001D03001E03801C03801C03801C03
801C03801C03801C03801C03801C03801C03801C03801C03801C03801C0380FF9FF0141D7F9C17
>I<18003C003C0018000000000000000000000000000000FC001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C00FF80091D7F9C0C>I<FC00001C00001C00001C00
001C00001C00001C00001C00001C00001C00001C00001C3FC01C0F001C0C001C08001C10001C20
001C40001CE0001DE0001E70001C78001C38001C3C001C1C001C0E001C0F001C0F80FF9FE0131D
7F9C16>107 D<FC001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C00FF80091D7F9C0C>I<FC7E07E0001C
838838001D019018001E01E01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00
1C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C
00FF8FF8FF8021127F9124>I<FC7C001C87001D03001E03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C03801C03801C03801C0380FF9FF014127F9117>I<03F0000E
1C00180600300300700380600180E001C0E001C0E001C0E001C0E001C0E001C060018070038030
03001806000E1C0003F00012127F9115>I<FC7C001D86001E03001C01801C01C01C00C01C00E0
1C00E01C00E01C00E01C00E01C00E01C01C01C01C01C01801E03001D06001CF8001C00001C0000
1C00001C00001C00001C00001C0000FF8000131A7F9117>I<FCE01D301E781E781C301C001C00
1C001C001C001C001C001C001C001C001C001C00FFC00D127F9110>114
D<1F9030704030C010C010E010F8007F803FE00FF000F880388018C018C018E010D0608FC00D12
7F9110>I<04000400040004000C000C001C003C00FFE01C001C001C001C001C001C001C001C00
1C001C101C101C101C101C100C100E2003C00C1A7F9910>I<FC1F801C03801C03801C03801C03
801C03801C03801C03801C03801C03801C03801C03801C03801C03801C07800C07800E1B8003E3
F014127F9117>I<FF07E03C03801C01001C01000E02000E020007040007040007040003880003
880003D80001D00001D00000E00000E00000E00000400013127F9116>I<FF3FCFE03C0F03801C
0701801C0701001C0B01000E0B82000E0B82000E1182000711C4000711C4000720C40003A0E800
03A0E80003C0680001C0700001C0700001803000008020001B127F911E>I<7F8FF00F03800F03
0007020003840001C80001D80000F00000700000780000F800009C00010E00020E000607000403
801E07C0FF0FF81512809116>I<FF07E03C03801C01001C01000E02000E020007040007040007
040003880003880003D80001D00001D00000E00000E00000E000004000004000008000008000F0
8000F10000F300006600003C0000131A7F9116>I E /Fl 48 122 df<387CFEFEFE7C3807077C
8610>46 D<00180000780001F800FFF800FFF80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F8007FFFE07FFFE013207C9F1C>49
D<03FC000FFF003C1FC07007E07C07F0FE03F0FE03F8FE03F8FE01F87C01F83803F80003F80003
F00003F00007E00007C0000F80001F00003E0000380000700000E01801C0180380180700180E00
380FFFF01FFFF03FFFF07FFFF0FFFFF0FFFFF015207D9F1C>I<00FE0007FFC00F07E01E03F03F
03F03F81F83F81F83F81F81F03F81F03F00003F00003E00007C0001F8001FE0001FF000007C000
01F00001F80000FC0000FC3C00FE7E00FEFF00FEFF00FEFF00FEFF00FC7E01FC7801F81E07F00F
FFC001FE0017207E9F1C>I<0000E00001E00003E00003E00007E0000FE0001FE0001FE00037E0
0077E000E7E001C7E00187E00307E00707E00E07E00C07E01807E03807E07007E0E007E0FFFFFE
FFFFFE0007E00007E00007E00007E00007E00007E00007E000FFFE00FFFE17207E9F1C>I<1000
201E01E01FFFC01FFF801FFF001FFE001FF8001BC00018000018000018000018000019FC001FFF
001E0FC01807E01803E00003F00003F00003F80003F83803F87C03F8FE03F8FE03F8FC03F0FC03
F07007E03007C01C1F800FFF0003F80015207D9F1C>I<001F8000FFE003F07007C0F00F01F81F
01F83E01F83E01F87E00F07C00007C0000FC0800FC7FC0FCFFE0FD80F0FF00F8FE007CFE007CFC
007EFC007EFC007EFC007E7C007E7C007E7C007E3C007C3E007C1E00F80F00F00783E003FFC000
FF0017207E9F1C>I<6000007800007FFFFE7FFFFE7FFFFC7FFFF87FFFF87FFFF0E00060E000C0
C00180C00300C00300000600000C00001C0000180000380000780000780000F00000F00000F000
01F00001F00001F00003F00003F00003F00003F00003F00003F00003F00001E00017227DA11C>
I<00FE0003FFC00703E00E00F01C00F01C00783C00783E00783F00783F80783FE0F01FF9E01FFF
C00FFF8007FFC003FFE007FFF01E7FF83C1FFC7807FC7801FEF000FEF0003EF0001EF0001EF000
1CF8001C7800383C00381F01F00FFFC001FF0017207E9F1C>I<01FE0007FF800F83E01E01F03E
00F07C00F87C0078FC007CFC007CFC007CFC007EFC007EFC007EFC007E7C00FE7C00FE3E01FE1E
037E0FFE7E07FC7E00207E00007C00007C1E007C3F00F83F00F83F00F03F01E01E03C01C0F800F
FE0003F80017207E9F1C>I<000070000000007000000000F800000000F800000000F800000001
FC00000001FC00000003FE00000003FE00000003FE00000006FF000000067F0000000E7F800000
0C3F8000000C3F800000183FC00000181FC00000381FE00000300FE00000300FE00000600FF000
006007F00000E007F80000FFFFF80000FFFFF800018001FC00018001FC00038001FE00030000FE
00030000FE000600007F000600007F00FFE00FFFF8FFE00FFFF825227EA12A>65
D<FFFFFF8000FFFFFFE00007F001F80007F000FC0007F0007E0007F0007E0007F0007F0007F000
7F0007F0007F0007F0007F0007F0007F0007F0007E0007F000FE0007F000FC0007F003F80007FF
FFF00007FFFFF00007F001FC0007F0007E0007F0003F0007F0003F8007F0001F8007F0001FC007
F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0003F8007F0003F8007F0007F00
07F001FE00FFFFFFF800FFFFFFC00022227EA128>I<0003FE0080001FFF818000FF01E38001F8
003F8003E0001F8007C0000F800F800007801F800007803F000003803F000003807F000001807E
000001807E00000180FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE00000000FE000000007E000000007E000001807F000001803F000001803F000003801F800003
000F8000030007C000060003F0000C0001F800380000FF00F000001FFFC0000003FE000021227D
A128>I<FFFFFF8000FFFFFFF00007F003FC0007F0007E0007F0003F0007F0001F8007F0000FC0
07F00007E007F00007E007F00007F007F00003F007F00003F007F00003F007F00003F807F00003
F807F00003F807F00003F807F00003F807F00003F807F00003F807F00003F807F00003F807F000
03F007F00003F007F00003F007F00007E007F00007E007F0000FC007F0001F8007F0003F0007F0
007E0007F003FC00FFFFFFF000FFFFFF800025227EA12B>I<FFFFFFFCFFFFFFFC07F000FC07F0
003C07F0001C07F0000C07F0000E07F0000E07F0000607F0180607F0180607F0180607F0180007
F0380007F0780007FFF80007FFF80007F0780007F0380007F0180007F0180007F0180307F01803
07F0000307F0000607F0000607F0000607F0000E07F0000E07F0001E07F0003E07F001FCFFFFFF
FCFFFFFFFC20227EA125>I<0003FE0040001FFFC0C0007F00F1C001F8003FC003F0000FC007C0
0007C00FC00003C01F800003C03F000001C03F000001C07F000000C07E000000C07E000000C0FE
00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000FFFFC
7E000FFFFC7F00001FC07F00001FC03F00001FC03F00001FC01F80001FC00FC0001FC007E0001F
C003F0001FC001FC003FC0007F80E7C0001FFFC3C00003FF00C026227DA12C>71
D<FFFF83FFFEFFFF83FFFE07F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F000
1FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007FF
FFFFC007FFFFFFC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007
F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC0
07F0001FC0FFFF83FFFEFFFF83FFFE27227EA12C>I<FFFFE0FFFFE003F80003F80003F80003F8
0003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F8
0003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F8
00FFFFE0FFFFE013227FA115>I<FFFF803FFCFFFF803FFC07F000038007F000070007F0000E00
07F000180007F000300007F000E00007F001C00007F003800007F007000007F00E000007F01800
0007F038000007F0FC000007F1FE000007F3FE000007F77F000007FE7F800007F83F800007F01F
C00007F01FE00007F00FE00007F007F00007F007F80007F003F80007F001FC0007F001FE0007F0
00FF0007F0007F0007F0007F8007F0003FC0FFFF83FFFCFFFF83FFFC26227EA12C>75
D<FFFFE000FFFFE00007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007
F0000007F0000007F0001807F0001807F0001807F0001807F0003807F0003807F0007007F00070
07F000F007F001F007F007F0FFFFFFF0FFFFFFF01D227EA122>I<FFF000000FFFFFF800001FFF
07F800001FE006FC000037E006FC000037E006FC000037E0067E000067E0067E000067E0063F00
00C7E0063F0000C7E0061F800187E0061F800187E0060FC00307E0060FC00307E0060FC00307E0
0607E00607E00607E00607E00603F00C07E00603F00C07E00601F81807E00601F81807E00601F8
1807E00600FC3007E00600FC3007E006007E6007E006007E6007E006003FC007E006003FC007E0
06001F8007E006001F8007E006001F8007E006000F0007E0FFF00F00FFFFFFF00600FFFF30227E
A135>I<FFFFFF00FFFFFFE007F007F007F001FC07F000FC07F0007E07F0007E07F0007F07F000
7F07F0007F07F0007F07F0007F07F0007E07F0007E07F000FC07F001FC07F007F007FFFFE007FF
FF0007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007
F0000007F0000007F0000007F00000FFFF8000FFFF800020227EA126>80
D<FFFFFE0000FFFFFFC00007F007F00007F001F80007F000FC0007F0007E0007F0007F0007F000
7F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007E0007F000FC0007F001F80007F0
07F00007FFFFC00007FFFF800007F00FE00007F007F00007F003F80007F001FC0007F001FC0007
F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0607F000FE06
07F000FF0CFFFF803FF8FFFF800FF027227EA12A>82 D<01FC0407FF8C1F03FC3C007C7C003C78
001C78001CF8000CF8000CFC000CFC0000FF0000FFE0007FFF007FFFC03FFFF01FFFF80FFFFC03
FFFE003FFE0003FF00007F00003F00003FC0001FC0001FC0001FE0001EE0001EF0003CFC003CFF
00F8C7FFE080FF8018227DA11F>I<FFFF0FFFF01FFEFFFF0FFFF01FFE0FF000FF0000E007F000
7F0000C007F0007F0000C003F8007F80018003F8003F80018003FC003F80038001FC003FC00300
01FC003FC0030000FE007FE0060000FE006FE0060000FF006FE00600007F00C7F00C00007F00C7
F00C00007F80C7F81C00003F8183F81800003F8183F81800001FC383FC3000001FC301FC300000
1FE301FC3000000FE600FE6000000FE600FE6000000FF600FFE0000007FC007FC0000007FC007F
C0000003FC007F80000003F8003F80000003F8003F80000001F0001F00000001F0001F00000000
F0001E00000000E0000E00000000E0000E000037227FA13A>87 D<07FC001FFF803F07C03F03E0
3F01E03F01F01E01F00001F00001F0003FF003FDF01FC1F03F01F07E01F0FC01F0FC01F0FC01F0
FC01F07E02F07E0CF81FF87F07E03F18167E951B>97 D<FF000000FF0000001F0000001F000000
1F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0FE0
001F3FF8001FF07C001F801E001F001F001F000F801F000F801F000FC01F000FC01F000FC01F00
0FC01F000FC01F000FC01F000FC01F000FC01F000F801F001F801F801F001FC03E001EE07C001C
3FF800180FC0001A237EA21F>I<00FF8007FFE00F83F01F03F03E03F07E03F07C01E07C0000FC
0000FC0000FC0000FC0000FC0000FC00007C00007E00007E00003E00301F00600FC0E007FF8000
FE0014167E9519>I<0001FE000001FE0000003E0000003E0000003E0000003E0000003E000000
3E0000003E0000003E0000003E0000003E0000003E0001FC3E0007FFBE000F81FE001F007E003E
003E007E003E007C003E00FC003E00FC003E00FC003E00FC003E00FC003E00FC003E00FC003E00
FC003E007C003E007C003E003E007E001E00FE000F83BE0007FF3FC001FC3FC01A237EA21F>I<
00FE0007FF800F87C01E01E03E01F07C00F07C00F8FC00F8FC00F8FFFFF8FFFFF8FC0000FC0000
FC00007C00007C00007E00003E00181F00300FC07003FFC000FF0015167E951A>I<003F8000FF
C001E3E003C7E007C7E00F87E00F83C00F80000F80000F80000F80000F80000F8000FFFC00FFFC
000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80
000F80000F80000F80000F80000F80007FF8007FF80013237FA211>I<03FC1E0FFF7F1F0F8F3E
07CF3C03C07C03E07C03E07C03E07C03E07C03E03C03C03E07C01F0F801FFF0013FC0030000030
00003800003FFF801FFFF00FFFF81FFFFC3800FC70003EF0001EF0001EF0001EF0001E78003C7C
007C3F01F80FFFE001FF0018217E951C>I<FF000000FF0000001F0000001F0000001F0000001F
0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F07E0001F1FF800
1F307C001F403C001F803E001F803E001F003E001F003E001F003E001F003E001F003E001F003E
001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E00FFE1FFC0FFE1
FFC01A237EA21F>I<1C003E007F007F007F003E001C000000000000000000000000000000FF00
FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FF
E0FFE00B247EA310>I<FF000000FF0000001F0000001F0000001F0000001F0000001F0000001F
0000001F0000001F0000001F0000001F0000001F0000001F00FF801F00FF801F0038001F006000
1F01C0001F0380001F0700001F0E00001F1C00001F7E00001FFF00001FCF00001F0F80001F07C0
001F03E0001F01E0001F01F0001F00F8001F007C001F003C00FFE0FFC0FFE0FFC01A237EA21E>
107 D<FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE00B237EA210
>I<FF07F007F000FF1FFC1FFC001F303E303E001F403E403E001F801F801F001F801F801F001F
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F00FFE0FFE0FFE0FFE0FFE0FFE02B167E9530>I<FF07E000FF1FF8001F307C001F403C
001F803E001F803E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F00
3E001F003E001F003E001F003E001F003E001F003E001F003E00FFE1FFC0FFE1FFC01A167E951F
>I<00FE0007FFC00F83E01E00F03E00F87C007C7C007C7C007CFC007EFC007EFC007EFC007EFC
007EFC007EFC007E7C007C7C007C3E00F81F01F00F83E007FFC000FE0017167E951C>I<FF0FE0
00FF3FF8001FF07C001F803E001F001F001F001F801F001F801F000FC01F000FC01F000FC01F00
0FC01F000FC01F000FC01F000FC01F000FC01F001F801F001F801F803F001FC03E001FE0FC001F
3FF8001F0FC0001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F000000
FFE00000FFE000001A207E951F>I<FE1F00FE3FC01E67E01EC7E01E87E01E87E01F83C01F0000
1F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F0000FFF000
FFF00013167E9517>114 D<0FF3003FFF00781F00600700E00300E00300F00300FC00007FE000
7FF8003FFE000FFF0001FF00000F80C00780C00380E00380E00380F00700FC0E00EFFC00C7F000
11167E9516>I<0180000180000180000180000380000380000780000780000F80003F8000FFFF
00FFFF000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F81
800F81800F81800F81800F81800F830007C30003FE0000F80011207F9F16>I<FF01FE00FF01FE
001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F00
3E001F003E001F003E001F003E001F003E001F003E001F007E001F00FE000F81BE0007FF3FC001
FC3FC01A167E951F>I<FFE01FE0FFE01FE00F8006000F8006000FC00E0007C00C0007E01C0003
E0180003E0180001F0300001F0300000F8600000F86000007CC000007CC000007FC000003F8000
003F8000001F0000001F0000000E0000000E00001B167F951E>I<FFE7FF07F8FFE7FF07F81F00
7800C00F807801800F807C01800F807C018007C07E030007C0DE030007E0DE070003E0DF060003
E18F060001F18F0C0001F38F8C0001FB079C0000FB07D80000FE03D800007E03F000007E03F000
007C01F000003C01E000003800E000001800C00025167F9528>I<FFE07FC0FFE07FC00F801C00
07C0380003E0700003F0600001F8C00000F98000007F8000003F0000001F0000001F8000003FC0
000037C0000063E00000C1F00001C0F8000380FC0007007E000E003E00FF80FFE0FF80FFE01B16
7F951E>I<FFE01FE0FFE01FE00F8006000F8006000FC00E0007C00C0007E01C0003E0180003E0
180001F0300001F0300000F8600000F86000007CC000007CC000007FC000003F8000003F800000
1F0000001F0000000E0000000E0000000C0000000C00000018000078180000FC380000FC300000
FC60000069C000007F8000001F0000001B207F951E>I E /Fm 34 122 df<1838783808081010
20404080050C7D830D>44 D<003C0000C6000183000303000603000603800E03800C03801C0380
1C0300380700380700380700380700700E00700E00700E00700E00E01C00E01C00E01C00E03800
E03800E03000C06000E0600060C0007180001E0000111D7B9B15>48 D<00020006000C001C007C
039C0038003800380038007000700070007000E000E000E000E001C001C001C001C00380038003
8003800780FFF00F1C7C9B15>I<00C06000FFC001FF8001FE0001000001000002000002000002
0000020000047800058C00060600040600080600000700000700000600000E00000E00700E0070
0C00E01C0080180080380040300040600021C0001F0000131D7C9B15>53
D<000F0000308000C0800183800383800300000600000E00000C00001C00001CF0003B18003C0C
00380C00780C00700E00700E00700E00601C00E01C00E01C00E01C00E03800E03800E070006060
0060C0002180001E0000111D7B9B15>I<09C04017E0801FE0803C6100302700601A0040060040
0400800C0080080000180000100000300000600000600000600000C00000C00001C00001800003
80000380000300000700000700000700000E00000E00000C0000121D799B15>I<003C0000C600
0183000303000603000E03000C03801C03801C03001C0300380700380700380700380F00380E00
181E00181E000C6C00079C00001C00001800003800003000006000E0C000E0C000818000860000
7C0000111D7B9B15>57 D<0000180000001800000038000000380000007800000078000000B800
0001B800000138000002380000023C0000041C0000041C0000081C0000181C0000101C0000201C
0000201C00007FFC0000401C0000801C0001801C0001001C0002001C0002001C0004000E000C00
0E001C001E00FF00FFC01A1D7E9C1F>65 D<01FFFE00003C0780003803C0003801C0003801C000
3801C0007001C0007003C0007003C00070078000E0070000E00E0000E03C0000FFF80001C01C00
01C00E0001C00F0001C00F0003800F0003800F0003800F0003800F0007001E0007001C0007003C
00070078000E01E000FFFF80001A1C7D9B1D>I<0003F020001E0C60003002E000E003C001C001
C0038001C0070000C00E0000801E0000801C0000803C0000803C00000078000000780000007800
0000F0000000F0000000F0000000F0000000F0000400F0000400F0000400F00008007000080070
00100038002000180040000C0180000706000001F800001B1E7A9C1E>I<01FFFE00003C078000
3801C0003801C0003800E0003800E0007000F00070007000700070007000F000E000F000E000F0
00E000F000E000F001C001E001C001E001C001E001C001C0038003C00380038003800780038007
0007000E0007001C0007003800070070000E01C000FFFF00001C1C7D9B1F>I<01FFFFE0003C00
E0003800600038004000380040003800400070004000700040007020400070200000E0400000E0
400000E0C00000FFC00001C0800001C0800001C0800001C0800003810100038001000380020003
800200070004000700040007000C00070018000E007800FFFFF0001B1C7D9B1C>I<000F840030
4C00403C00801801001803001803001806001006001006000007000007000003E00003FC0001FF
00007F800007C00001C00001C00000C00000C02000C02000C0600180600180600300600200F004
00CC180083E000161E7D9C17>83 D<1FFFFFC01C0701C0300E00C0200E0080600E0080400E0080
401C0080801C0080801C0080001C00000038000000380000003800000038000000700000007000
00007000000070000000E0000000E0000000E0000000E0000001C0000001C0000001C0000001C0
000003C000007FFE00001A1C799B1E>I<7FF0FF800F001C000E0018000E0010000E0010000E00
10001C0020001C0020001C0020001C002000380040003800400038004000380040007000800070
0080007000800070008000E0010000E0010000E0010000E0020000E0020000E0040000E0040000
6008000030300000104000000F800000191D779B1F>I<01FF81FE001E00F0001C0060001E0080
000E0180000E0100000F02000007040000070800000790000003A0000003C0000001C0000001C0
000001E0000002E0000004E0000008F0000010700000207000006038000040380000803C000100
1C0002001C0006001E001E001E00FF80FFC01F1C7E9B1F>88 D<03CC063C0C3C181C3838303870
387038E070E070E070E070E0E2C0E2C0E261E462643C380F127B9115>97
D<01F007080C08181C3838300070007000E000E000E000E000E000E008E010602030C01F000E12
7B9113>99 D<01E007100C1018083810701070607F80E000E000E000E000E000E0086010602030
C01F000D127B9113>101 D<0003C0000670000C70001C60001C00001C00003800003800003800
00380000380003FF8000700000700000700000700000700000E00000E00000E00000E00000E000
01C00001C00001C00001C00001C000038000038000038000030000030000070000C60000E60000
CC00007800001425819C0D>I<00F3018F030F06070E0E0C0E1C0E1C0E381C381C381C381C3838
30383038187818F00F700070007000E000E0C0C0E1C0C3007E00101A7D9113>I<018003800100
00000000000000000000000000001C002600470047008E008E000E001C001C001C003800380071
0071007100720072003C00091C7C9B0D>105 D<1F800380038007000700070007000E000E000E
000E001C001C001C001C0038003800380038007000700070007000E400E400E400E40068003800
091D7C9C0B>108 D<3C1E0780266318C04683A0E04703C0E08E0380E08E0380E00E0380E00E03
80E01C0701C01C0701C01C0701C01C070380380E0388380E0388380E0708380E0710701C032030
0C01C01D127C9122>I<3C3C002646004687004707008E07008E07000E07000E07001C0E001C0E
001C0E001C1C00381C40381C40383840383880701900300E0012127C9117>I<01E007180C0C18
0C380C300E700E700EE01CE01CE01CE018E038E030E06060C031801E000F127B9115>I<078700
04D98008E0C008E0C011C0E011C0E001C0E001C0E00381C00381C00381C0038180070380070300
0707000706000E8C000E70000E00000E00001C00001C00001C00001C00003C0000FF8000131A7F
9115>I<3C3C26C2468747078E068E000E000E001C001C001C001C003800380038003800700030
0010127C9112>114 D<01F006080C080C1C18181C001F001FC00FF007F0007800386030E030C0
30806060C01F000E127D9111>I<00C001C001C001C00380038003800380FFE00700070007000E
000E000E000E001C001C001C001C00384038403840388019000E000B1A7D990E>I<1E03002707
00470700470700870E00870E000E0E000E0E001C1C001C1C001C1C001C1C003838803838801838
801839001C5900078E0011127C9116>I<1E06270E470E4706870287020E020E021C041C041C04
1C0818083808181018200C4007800F127C9113>I<070E0019910010E38020E38041C30041C000
01C00001C000038000038000038000038000070200670200E70400CB04008B080070F00011127D
9113>120 D<1E03270747074707870E870E0E0E0E0E1C1C1C1C1C1C1C1C38383838183818381C
7007F00070007000E0E0C0E1C0818047003C00101A7C9114>I E /Fn 24
122 df<0070000001880000030400000304000007040000070400000704000007040000070800
0007080000071000000720000003C00FF8038003C00380018003C0010003C0020005E0020008E0
040010F004003070080060381000E03C1000E01E2000E00E4000E0078008E00380087003C01030
04E0301C18706007E01F801D1F7D9D23>38 D<FFF0FFF00C027F8910>45
D<60F0F06004047B830D>I<001FC00000E0380001000400060003000800008010000040100F80
40203060204060101040C01E1041C00E1081800E0883800E0883800E0883800E0883800E088380
0E0881800E0841C00E0840C01E1040601E1020306620100F83C010000000080000000600000001
00007800E007E0001FFC001D1D7D9C23>64 D<000FE0200070186001C00460030003E0060001E0
0E0000E01C00006038000060380000207800002070000020F0000000F0000000F0000000F00000
00F0000000F0000000F0000000F0000000700000207800002038000020380000201C0000400E00
0040060000800300010001C0060000701800000FE0001B1E7D9C21>67 D<FFFFC0000F0078000F
001C000F0007000F0007800F0003800F0001C00F0001C00F0001E00F0000E00F0000F00F0000F0
0F0000F00F0000F00F0000F00F0000F00F0000F00F0000F00F0000E00F0000E00F0001E00F0001
C00F0003800F0003800F0007000F001E000F007800FFFFE0001C1C7D9B22>I<FFF0FFF00F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
0F000F000F000FFFFF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F00FFF0FFF01C1C7D9B22>72
D<03E0800C1980100580300380600180E00180E00080E00080E00080F00000F800007E00007FE0
003FFC001FFF0007FF80007F800007C00003E00001E00000E08000E08000E08000E0C000C0C000
C0E00180D00300CE060081F800131E7D9C19>83 D<00200000700000700000700000B80000B800
00B800011C00011C00011C00020E00020E0004070004070007FF000803800803800803801801C0
3803C0FE0FF815157F9419>97 D<FFFC001C07001C03801C03C01C03C01C03C01C03C01C03801C
07801FFF001FFF001C03801C03C01C01E01C01E01C01E01C01E01C01C01C03C01C0780FFFE0013
157F9418>I<00FC200782600E01E01C00E0380060780020700020F00020F00000F00000F00000
F00000F00000F000207000207800203800401C00400E008007830000FC0013157E9419>I<FFFC
001C07001C01C01C00E01C00E01C00701C00701C00781C00781C00781C00781C00781C00781C00
781C00701C00701C00E01C00E01C01C01C0700FFFC0015157F941A>I<FFFF801C03801C00801C
00801C00401C00401C10401C10001C10001C30001FF0001C30001C10001C10201C10201C00201C
00601C00401C00C01C01C0FFFFC013157F9417>I<FF8FF81C01C01C01C01C01C01C01C01C01C0
1C01C01C01C01C01C01C01C01FFFC01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C0
1C01C0FF8FF815157F9419>104 D<FF801C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C00FF8009157F940D>I<FF83F81C01E01C01801C01001C02
001C04001C08001C10001C30001C70001CB8001D1C001E1C001C0E001C07001C07801C03801C01
C01C01E01C01F0FF83FC16157F941A>107 D<FFC0001C00001C00001C00001C00001C00001C00
001C00001C00001C00001C00001C00001C00001C00801C00801C00801C01801C01001C03001C07
00FFFF0011157F9415>I<01F800070E000C03001C03803801C07801E07000E0F000F0F000F0F0
00F0F000F0F000F0F000F0F000F07000E07801E03801C01C03801E0780070E0001F80014157E94
1A>111 D<FFF8001C0E001C07801C03801C03C01C03C01C03C01C03801C07801C0E001FF8001C
1C001C0E001C07001C07001C07001C07801C07841C07C41C03CCFF80F816157F9419>114
D<1F1030F06030C030C010C010C000E0007E003FC01FE003F0007800380018801880188010C030
F0608FC00D157E9413>I<7FFFF060703040701040701080700880700880700800700000700000
700000700000700000700000700000700000700000700000700000700000700007FF0015157F94
19>I<FF83F81C00E01C00401C00401C00401C00401C00401C00401C00401C00401C00401C0040
1C00401C00401C00401C00400C00C00E008006010003860000FC0015157F9419>I<FF01F83C00
F01C00401C00401E00C00E00800E008007010007010007830003820003820001C40001C40001E4
0000E80000E80000700000700000700000200015157F9419>I<FF80FE1E00780E00200F004007
004003808003C18001C10000E20000E200007400007C0000380000380000380000380000380000
380000380000380001FF001715809419>121 D E /Fo 29 121 df<387CFEFEFE7C3807077C86
0F>46 D<00E00001E0000FE000FFE000F3E00003E00003E00003E00003E00003E00003E00003E0
0003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E0
0003E00003E000FFFF80FFFF80111D7C9C1A>49 D<07F0001FFE00383F007C1F80FE0FC0FE0FC0
FE0FE0FE07E07C07E03807E0000FE0000FC0000FC0001F80001F00003E0000780000F00000E000
01C0000380600700600E00601C00E01FFFC03FFFC07FFFC0FFFFC0FFFFC0131D7D9C1A>I<6000
007FFFF87FFFF87FFFF07FFFE07FFFC0E00180C00300C00300C00600000C000018000038000038
0000780000700000F00000F00001F00001F00001F00001F00003F00003F00003F00003F00003F0
0003F00001E00000C000151E7D9D1A>55 D<FFFFFE00FFFFFFC007C007E007C003F007C001F807
C001FC07C001FC07C001FC07C001FC07C001FC07C001F807C003F807C007F007C00FE007FFFF80
07FFFFC007C003F007C001F807C001FC07C000FC07C000FE07C000FE07C000FE07C000FE07C000
FE07C000FC07C001FC07C003F807C007F0FFFFFFE0FFFFFF001F1F7E9E25>66
D<0007FC02003FFF0E00FE03DE03F000FE07E0003E0FC0001E1F80001E3F00000E3F00000E7F00
00067E0000067E000006FE000000FE000000FE000000FE000000FE000000FE000000FE0000007E
0000007E0000067F0000063F0000063F00000C1F80000C0FC0001807E0003803F0007000FE01C0
003FFF800007FC001F1F7D9E26>I<FFFFFE0000FFFFFFC00007E007F00007E001F80007E000FC
0007E0007E0007E0003F0007E0003F0007E0001F8007E0001F8007E0001F8007E0001FC007E000
1FC007E0001FC007E0001FC007E0001FC007E0001FC007E0001FC007E0001FC007E0001FC007E0
001F8007E0001F8007E0001F8007E0003F0007E0003F0007E0007E0007E000FC0007E001F80007
E007F000FFFFFFC000FFFFFE0000221F7E9E28>I<FFFFFFE0FFFFFFE007E007E007E001E007E0
00E007E0006007E0007007E0003007E0003007E0603007E0603007E0600007E0E00007E1E00007
FFE00007FFE00007E1E00007E0E00007E0600007E0600C07E0600C07E0000C07E0001807E00018
07E0001807E0003807E0007807E000F807E003F0FFFFFFF0FFFFFFF01E1F7E9E22>I<FFFF0FFF
F0FFFF0FFFF007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E000
7E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007FFFFFE0007FFFFFE0007E0
007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007
E0007E0007E0007E0007E0007E0007E0007E0007E0007E00FFFF0FFFF0FFFF0FFFF0241F7E9E29
>72 D<03FFFC03FFFC000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0
000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0100FC07C0FC0FE0FC0
FE0FC0FE0F80FC1F80783F003FFE000FF000161F7F9E1B>74 D<FFFF8000FFFF800007E0000007
E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E00000
07E0000007E0000007E0000007E0000007E0000007E0000007E000C007E000C007E000C007E001
C007E001C007E001C007E0038007E0038007E00F8007E01F80FFFFFF80FFFFFF801A1F7E9E1F>
76 D<FFFFF80000FFFFFF000007E01FC00007E007E00007E003F00007E003F00007E003F80007
E003F80007E003F80007E003F80007E003F00007E003F00007E007E00007E01FC00007FFFF0000
07FFFC000007E03E000007E01F000007E00F800007E00F800007E00FC00007E00FC00007E00FC0
0007E00FE00007E00FE00007E00FE00007E00FE03007E007F03007E003F860FFFF01FFC0FFFF00
7F80241F7E9E27>82 D<07FC001FFF003F0F803F07C03F03E03F03E00C03E00003E0007FE007FB
E01F03E03C03E07C03E0F803E0F803E0F803E0FC05E07E0DE03FF8FE0FE07E17147F9319>97
D<01FE0007FF801F0FC03E0FC03E0FC07C0FC07C0300FC0000FC0000FC0000FC0000FC0000FC00
007C00007E00003E00603F00C01F81C007FF0001FC0013147E9317>99 D<0007F80007F80000F8
0000F80000F80000F80000F80000F80000F80000F80000F80000F801F8F80FFEF81F83F83E01F8
7E00F87C00F87C00F8FC00F8FC00F8FC00F8FC00F8FC00F8FC00F87C00F87C00F87E00F83E01F8
1F07F80FFEFF03F8FF18207E9F1D>I<01FE0007FF800F83C01E01E03E00F07C00F07C00F8FC00
F8FFFFF8FFFFF8FC0000FC0000FC00007C00007C00003E00181E00180F807007FFE000FF801514
7F9318>I<1C003E007F007F007F003E001C00000000000000000000000000FF00FF001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE00B217EA00E>
105 D<FF0000FF00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F0000
1F01FE1F01FE1F00F01F00C01F03801F07001F0C001F18001F7C001FFC001F9E001F0F001E0F80
1E07C01E03C01E01E01E01F01E00F8FFC3FFFFC3FF18207E9F1C>107 D<FF00FF001F001F001F
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F00FFE0FFE00B207E9F0E>I<FE0FE03F80FE1FF07FC01E70F9C3E01E
407D01F01E807E01F01F807E01F01F007C01F01F007C01F01F007C01F01F007C01F01F007C01F0
1F007C01F01F007C01F01F007C01F01F007C01F01F007C01F01F007C01F01F007C01F0FFE3FF8F
FEFFE3FF8FFE27147D932C>I<FE0FC0FE3FE01E61F01EC0F81E80F81F00F81F00F81F00F81F00
F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F8FFE3FFFFE3FF18147D931D
>I<01FF0007FFC01F83F03E00F83E00F87C007C7C007CFC007EFC007EFC007EFC007EFC007EFC
007E7C007C7C007C3E00F83E00F81F83F007FFC001FF0017147F931A>I<FF1FC0FF7FF01FE1F8
1F80FC1F007E1F007E1F003E1F003F1F003F1F003F1F003F1F003F1F003F1F003E1F007E1F007C
1F80FC1FC1F81F7FE01F1F801F00001F00001F00001F00001F00001F00001F0000FFE000FFE000
181D7E931D>I<FE3E00FE7F801ECFC01E8FC01E8FC01F8FC01F03001F00001F00001F00001F00
001F00001F00001F00001F00001F00001F00001F0000FFF000FFF00012147E9316>114
D<0FE63FFE701E600EE006E006F800FFC07FF83FFC1FFE03FE001FC007C007E007F006F81EFFFC
C7F010147E9315>I<01800180018003800380038007800F803F80FFFCFFFC0F800F800F800F80
0F800F800F800F800F800F800F860F860F860F860F8607CC03F801F00F1D7F9C14>I<FF07F8FF
07F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F
00F81F01F81F01F80F06F807FCFF03F8FF18147D931D>I<FFE7FE1FE0FFE7FE1FE01F00F00300
1F00F803000F80F806000F80F8060007C1BC0C0007C1BC0C0007C1BE0C0003E31E180003E31E18
0001F60F300001F60F300001F60FB00000FC07E00000FC07E000007803C000007803C000007803
C000003001800023147F9326>119 D<FFE1FF00FFE1FF000F80700007C0E00007E0C00003E180
0001F3800000FF0000007E0000003E0000003F0000007F8000006F800000C7C0000183E0000381
F0000701F8000E00FC00FF81FF80FF81FF8019147F931C>I E /Fp 28 122
df<FFFFFFF80000FFFFFFFF8000FFFFFFFFC00003F8001FF00003F8000FF80003F80007FC0003
F80003FC0003F80003FC0003F80003FE0003F80001FE0003F80001FE0003F80001FE0003F80003
FE0003F80003FC0003F80003FC0003F80007F80003F8000FF00003F8001FE00003F800FFC00003
FFFFFE000003FFFFFFE00003F80007F00003F80003FC0003F80001FE0003F80001FE0003F80000
FF0003F80000FF0003F80000FF8003F80000FF8003F80000FF8003F80000FF8003F80000FF8003
F80000FF8003F80000FF0003F80001FF0003F80003FE0003F80007FC0003F8001FF800FFFFFFFF
F000FFFFFFFFC000FFFFFFFE000029297DA831>66 D<FFFFFFF80000FFFFFFFF8000FFFFFFFFE0
0003FC001FF80003FC0007FC0003FC0001FE0003FC0000FF0003FC00007F8003FC00003FC003FC
00001FC003FC00001FE003FC00001FE003FC00000FF003FC00000FF003FC00000FF003FC00000F
F003FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC
00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF003FC00000FF003FC00000F
F003FC00001FE003FC00001FE003FC00001FC003FC00003FC003FC00007F8003FC00007F0003FC
0001FE0003FC0003FC0003FC001FF800FFFFFFFFE000FFFFFFFF8000FFFFFFFC00002D297DA835
>68 D<FFFFF001FFFCFFFFF001FFFCFFFFF001FFFC03FC00001E0003FC00003C0003FC00007800
03FC0000F00003FC0001E00003FC0003C00003FC0007000003FC001E000003FC003C000003FC00
78000003FC00F0000003FC01E0000003FC0380000003FC07C0000003FC1FC0000003FC3FE00000
03FC7FF0000003FCFFF8000003FDE7F8000003FF83FC000003FF01FE000003FE01FF000003FC00
FF000003FC007F800003FC003FC00003FC003FC00003FC001FE00003FC000FF00003FC000FF800
03FC0007F80003FC0003FC0003FC0001FE0003FC0001FF0003FC0000FF0003FC00007F80FFFFF0
0FFFFEFFFFF00FFFFEFFFFF00FFFFE2F297DA836>75 D<FFFFFC0000FFFFFC0000FFFFFC000003
FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC000000
03FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC0000
0003FC00000003FC00000003FC00000003FC00000003FC00000003FC0001C003FC0001C003FC00
01C003FC0001C003FC0003C003FC00038003FC00038003FC00078003FC00078003FC000F8003FC
000F8003FC001F8003FC007F8003FC01FF00FFFFFFFF00FFFFFFFF00FFFFFFFF0022297DA829>
I<FFFE0000001FFFC0FFFE0000001FFFC0FFFF0000003FFFC003FF0000003FF00003FF0000003F
F00003BF80000077F00003BF80000077F000039FC00000E7F000039FC00000E7F000038FE00001
C7F000038FE00001C7F0000387F0000387F0000387F0000387F0000387F0000387F0000383F800
0707F0000383F8000707F0000381FC000E07F0000381FC000E07F0000380FE001C07F0000380FE
001C07F0000380FF003807F00003807F003807F00003807F003807F00003803F807007F0000380
3F807007F00003801FC0E007F00003801FC0E007F00003800FE1C007F00003800FE1C007F00003
800FE1C007F000038007F38007F000038007F38007F000038003FF0007F000038003FF0007F000
038001FE0007F000038001FE0007F000038000FC0007F000038000FC0007F000FFFE00FC01FFFF
C0FFFE007801FFFFC0FFFE007801FFFFC03A297DA841>I<007F806003FFF0E007FFF9E00F807F
E01F001FE03E0007E07C0003E07C0001E0FC0001E0FC0001E0FC0000E0FE0000E0FE0000E0FF00
0000FFC000007FFE00007FFFE0003FFFFC001FFFFE000FFFFF8007FFFFC003FFFFE000FFFFE000
07FFF000007FF000000FF8000007F8000003F8600001F8E00001F8E00001F8E00001F8F00001F0
F00001F0F80003F0FC0003E0FF0007C0FFE01F80F3FFFF00E0FFFE00C01FF0001D297CA826>83
D<FFFFF001FFFCFFFFF001FFFCFFFFF001FFFC03FC0000070003FC0000070003FC0000070003FC
0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC000007
0003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC
0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC000007
0003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070001FC00000E0001FE
00000E0000FE00001C00007E00001C00007F00003800003FC000F000000FF007E0000007FFFFC0
000001FFFF000000001FF800002E297DA835>85 D<01FF800007FFF0000F81F8001FC07E001FC0
7E001FC03F000F803F8007003F8000003F8000003F8000003F80000FFF8000FFFF8007FC3F800F
E03F803F803F803F003F807F003F80FE003F80FE003F80FE003F80FE003F807E007F807F00DF80
3F839FFC0FFF0FFC01FC03FC1E1B7E9A21>97 D<FFE0000000FFE0000000FFE00000000FE00000
000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000
00000FE00000000FE00000000FE00000000FE1FE00000FE7FF80000FFE07E0000FF801F0000FF0
00F8000FE000FC000FE000FE000FE0007F000FE0007F000FE0007F000FE0007F800FE0007F800F
E0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F000FE0007F000FE0007F00
0FE000FE000FE000FC000FF001F8000FF803F0000F9E07E0000F07FF80000E01FC0000212A7EA9
26>I<001FF80000FFFE0003F01F0007E03F800FC03F801F803F803F801F007F800E007F000000
7F000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000007F0000007F0000
007F8000003F8001C01F8001C00FC0038007E0070003F01E0000FFFC00001FE0001A1B7E9A1F>
I<00003FF80000003FF80000003FF800000003F800000003F800000003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F800001F
E3F80000FFFBF80003F03FF80007E00FF8000FC007F8001F8003F8003F8003F8007F0003F8007F
0003F8007F0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800
FF0003F8007F0003F8007F0003F8007F0003F8003F8003F8001F8003F8000F8007F80007C00FF8
0003F03BFF8000FFF3FF80003FC3FF80212A7EA926>I<003FE00001FFF80003F07E0007C01F00
0F801F801F800F803F800FC07F000FC07F0007C07F0007E0FF0007E0FF0007E0FFFFFFE0FFFFFF
E0FF000000FF000000FF0000007F0000007F0000007F0000003F8000E01F8000E00FC001C007E0
038003F81F0000FFFE00001FF0001B1B7E9A20>I<00FF81F003FFE7F80FC1FE7C1F80FC7C1F00
7C383F007E107F007F007F007F007F007F007F007F007F007F007F007F003F007E001F007C001F
80FC000FC1F8001FFFE00018FF800038000000380000003C0000003E0000003FFFF8001FFFFF00
1FFFFF800FFFFFC007FFFFE01FFFFFF03E0007F07C0001F8F80000F8F80000F8F80000F8F80000
F87C0001F03C0001E01F0007C00FC01F8003FFFE00007FF0001E287E9A22>103
D<FFE0000000FFE0000000FFE00000000FE00000000FE00000000FE00000000FE00000000FE000
00000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0
7F00000FE1FFC0000FE787E0000FEE03F0000FF803F0000FF803F8000FF003F8000FF003F8000F
E003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800
0FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8
00FFFE3FFF80FFFE3FFF80FFFE3FFF80212A7DA926>I<07000F801FC03FE03FE03FE01FC00F80
07000000000000000000000000000000FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00FE00FE00F
E00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2B7DAA14>I<FF
E00000FFE00000FFE000000FE000000FE000000FE000000FE000000FE000000FE000000FE00000
0FE000000FE000000FE000000FE000000FE000000FE01FFC0FE01FFC0FE01FFC0FE007800FE00F
000FE01E000FE03C000FE078000FE0E0000FE3C0000FE7C0000FEFE0000FFFE0000FFFF0000FF3
F8000FE3F8000FC1FC000FC0FE000FC07F000FC07F000FC03F800FC01FC00FC00FC00FC00FE0FF
FC3FFEFFFC3FFEFFFC3FFE1F2A7EA924>107 D<FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00F
E00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2A7DA914>I<FFC07F800FF0
00FFC1FFE03FFC00FFC383F0707E000FC603F8C07F000FCC01F9803F000FD801FF003F800FF001
FE003F800FF001FE003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F80
0FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC
003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800F
E001FC003F80FFFE1FFFC3FFF8FFFE1FFFC3FFF8FFFE1FFFC3FFF8351B7D9A3A>I<FFC07F0000
FFC1FFC000FFC787E0000FCE03F0000FD803F0000FD803F8000FF003F8000FF003F8000FE003F8
000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800FFFE
3FFF80FFFE3FFF80FFFE3FFF80211B7D9A26>I<003FE00001FFFC0003F07E000FC01F801F800F
C03F800FE03F0007E07F0007F07F0007F07F0007F0FF0007F8FF0007F8FF0007F8FF0007F8FF00
07F8FF0007F8FF0007F8FF0007F87F0007F07F0007F03F800FE03F800FE01F800FC00FC01F8007
F07F0001FFFC00003FE0001D1B7E9A22>I<FFE1FE0000FFE7FF8000FFFE07E0000FF803F0000F
F001F8000FE000FC000FE000FE000FE000FF000FE0007F000FE0007F000FE0007F800FE0007F80
0FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F000FE000FF000FE000FF
000FE000FE000FE001FC000FF001F8000FF803F0000FFE0FE0000FE7FF80000FE1FC00000FE000
00000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0
000000FFFE000000FFFE000000FFFE00000021277E9A26>I<FFC1F0FFC7FCFFCE3E0FD87F0FD8
7F0FF07F0FF03E0FF01C0FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0
000FE0000FE0000FE0000FE0000FE0000FE000FFFF00FFFF00FFFF00181B7E9A1C>114
D<03FE300FFFF01E03F03800F0700070F00070F00070F80070FC0000FFE0007FFE007FFF803FFF
E01FFFF007FFF800FFF80003FC0000FC60007CE0003CF0003CF00038F80038FC0070FF01E0F7FF
C0C1FF00161B7E9A1B>I<00700000700000700000700000F00000F00000F00001F00003F00003
F00007F0001FFFF0FFFFF0FFFFF007F00007F00007F00007F00007F00007F00007F00007F00007
F00007F00007F00007F00007F00007F03807F03807F03807F03807F03807F03803F03803F87001
F86000FFC0001F8015267FA51B>I<FFE03FF800FFE03FF800FFE03FF8000FE003F8000FE003F8
000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE0
03F8000FE007F80007E007F80007E00FF80003F03BFF8001FFF3FF80003FC3FF80211B7D9A26>
I<FFFE03FF80FFFE03FF80FFFE03FF8007F000700007F000700007F800F00003F800E00003FC01
E00001FC01C00001FC01C00000FE03800000FE038000007F070000007F070000007F8F0000003F
8E0000003FDE0000001FDC0000001FDC0000000FF80000000FF80000000FF800000007F0000000
07F000000003E000000003E000000001C00000211B7F9A24>I<FFFE7FFC0FFEFFFE7FFC0FFEFF
FE7FFC0FFE0FE007E000E007F003F001C007F003F001C007F807F803C003F807F8038003F807F8
038001FC0EFC070001FC0EFC070001FE1EFC0F0000FE1C7E0E0000FE1C7E0E0000FF383F1E0000
7F383F1C00007F783F3C00003FF01FB800003FF01FB800003FF01FF800001FE00FF000001FE00F
F000000FC007E000000FC007E000000FC007E00000078003C00000078003C0002F1B7F9A32>I<
FFFE03FF80FFFE03FF80FFFE03FF8007F000700007F000700007F800F00003F800E00003FC01E0
0001FC01C00001FC01C00000FE03800000FE038000007F070000007F070000007F8F0000003F8E
0000003FDE0000001FDC0000001FDC0000000FF80000000FF80000000FF800000007F000000007
F000000003E000000003E000000001C000000001C000000003800000000380000038078000007C
07000000FE0F000000FE0E000000FE1E000000FE3C0000007C780000003FE00000000FC0000000
21277F9A24>121 D E /Fq 45 119 df<00FC000782000E07001C07001C02001C00001C00001C
00001C0000FFFF001C07001C07001C07001C07001C07001C07001C07001C07001C07001C07001C
07001C0700FF1FE01317809614>12 D<0102040C1818303070606060E0E0E0E0E0E0E0E0E0E060
606070303018180C04020108227D980E>40 D<8040203018180C0C0E0606060707070707070707
07070606060E0C0C18183020408008227E980E>I<003000003000003000003000003000003000
003000003000003000003000003000FFFFFCFFFFFC003000003000003000003000003000003000
00300000300000300000300000300016187E931B>43 D<FF80FF80090280870C>45
D<60F0F06004047D830A>I<0008001800300030003000600060006000C000C000C00180018001
80030003000600060006000C000C000C00180018001800300030003000600060006000C000C000
0D217E9812>I<03000700FF000700070007000700070007000700070007000700070007000700
07000700070007007FF00C157E9412>49 D<0F8030E040708030C038E038403800380070007000
6000C00180030006000C08080810183FF07FF0FFF00D157E9412>I<0FE030306018701C701C00
1C00180038006007E000300018000C000E000EE00EE00EC00C401830300FE00F157F9412>I<00
300030007000F001F001700270047008701870107020704070C070FFFE00700070007000700070
03FE0F157F9412>I<20303FE03FC0240020002000200020002F8030E020700030003800384038
E038E0388030406020C01F000D157E9412>I<07C0183030186018E00CE00CE00EE00EE00E601E
301E186E0F8E000E000C001C70187018603020C01F800F157F9412>57 D<60F0F0600000000000
0060F0F07010102020404004147D8D0A>59 D<FFFFFCFFFFFC0000000000000000000000000000
00000000FFFFFCFFFFFC160A7E8C1B>61 D<001000003800003800003800005C00005C00005C00
008E00008E00008E0001070001070003078002038002038007FFC00401C00401C00800E00800E0
1800E03800F0FE03FE17177F961A>65 D<FFFF001C01C01C00E01C00301C00381C00181C001C1C
000C1C000E1C000E1C000E1C000E1C000E1C000E1C000E1C000C1C001C1C001C1C00381C00301C
00601C01C0FFFF0017177F961B>68 D<FFFFE01C00E01C00601C00201C00101C00101C00101C04
001C04001C04001C0C001FFC001C0C001C04001C04001C04001C00001C00001C00001C00001C00
001C0000FFC00014177F9617>70 D<FFE00E000E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E000E000E00FFE00B177F960D>73 D<0FFC00E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E0E0E0E0E0C1C061801F000E17
7E9612>I<FF80FE1C00781C00601C00401C00801C01001C06001C08001C10001C38001C78001C
9C001D0E001E0E001C07001C03801C01C01C01C01C00E01C00701C00781C007CFF80FF18177F96
1B>I<FFC0001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0000
1C00001C00001C00201C00201C00201C00601C00601C00401C00C01C03C0FFFFC013177F9616>
I<FE0003F81E0003C0170005C0170005C0170005C0138009C0138009C011C011C011C011C011C0
11C010E021C010E021C0107041C0107041C0107041C0103881C0103881C0101D01C0101D01C010
0E01C0100E01C0380E01C0FE040FF81D177F9620>I<FFFE001C03801C00C01C00601C00701C00
701C00701C00701C00601C00C01C03801FFE001C00001C00001C00001C00001C00001C00001C00
001C00001C00001C0000FF800014177F9618>80 D<FFFC001C03801C00C01C00E01C00701C0070
1C00701C00701C00E01C00C01C03801FFE001C07801C01C01C00E01C00E01C00E01C00E01C00E0
1C00E11C00E11C0072FF803C18177F961A>82 D<0FC4302C601C400CC004C004C004E00070007F
003FE00FF801FC001C000E0006800680068006C004E008D81087E00F177E9614>I<1FC0386038
301038003803F81E3830387038E039E039E07970FF1F1E100E7F8D12>97
D<FC00001C00001C00001C00001C00001C00001C00001C00001C00001CF8001F06001C03001C03
801C01801C01C01C01C01C01C01C01C01C01801C03801C03001B0E0010F8001217809614>I<07
F01838303870106000E000E000E000E000600070083008183007C00D0E7F8D10>I<007E00000E
00000E00000E00000E00000E00000E00000E00000E0007CE001C3E00300E00700E00600E00E00E
00E00E00E00E00E00E00600E00700E00301E00182E0007CFC012177F9614>I<0FC01860303070
38E018FFF8E000E000E000600070083010183007C00D0E7F8D10>I<03E006700E701C201C001C
001C001C001C00FF801C001C001C001C001C001C001C001C001C001C001C001C00FF800C178096
0B>I<0F9E18E33060707070707070306018C02F80200060003FE03FF83FFC600EC006C006C006
600C38380FE010157F8D12>I<FC00001C00001C00001C00001C00001C00001C00001C00001C00
001C7C001D8E001E07001C07001C07001C07001C07001C07001C07001C07001C07001C07001C07
00FF9FE01317809614>I<183C3C1800000000007C1C1C1C1C1C1C1C1C1C1C1C1CFF081780960A>
I<FC001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C00FF80091780960A>108 D<FC7C1F001D8E63801E0781C01C0701C01C0701C01C07
01C01C0701C01C0701C01C0701C01C0701C01C0701C01C0701C01C0701C0FF9FE7F81D0E808D1E
>I<FC7C001D8E001E07001C07001C07001C07001C07001C07001C07001C07001C07001C07001C
0700FF9FE0130E808D14>I<07C018303018600C600CE00EE00EE00EE00EE00E701C3018183007
C00F0E7F8D12>I<FCF8001F0E001C03001C03801C01801C01C01C01C01C01C01C01C01C01801C
03801C07001F0E001CF8001C00001C00001C00001C00001C0000FF80001214808D14>I<FCF01D
381E381C101C001C001C001C001C001C001C001C001C00FF800D0E808D0E>114
D<1F4060C0C040C040E000FF007F801FC001E080608060C060E0C09F000B0E7F8D0E>I<080008
000800180018003800FF80380038003800380038003800380038403840384038401C800F000A14
7F930E>I<FC3F001C07001C07001C07001C07001C07001C07001C07001C07001C07001C07001C
0F000E170003E7E0130E808D14>I<FE1F3C0E3C0C1C081C080E100E100720072003C003C003C0
01800180100E7F8D13>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 231 1
231 0 bop 75 -125 a Fq(Journal)10 b(of)h(Arti\014cial)f(In)o(telligence)e
(Researc)o(h)i(1)h(\(1994\))f(231-255)378 b(Submitted)9 b(12/93;)g(published)
g(2/94)183 145 y Fp(Substructure)23 b(Disco)n(v)n(ery)f(Using)h(Minim)n(um)d
(Description)437 220 y(Length)j(and)h(Bac)n(kground)g(Kno)n(wledge)75
356 y Fo(Diane)18 b(J.)f(Co)q(ok)1093 b Fn(cook@cse.ut)m(a.edu)75
412 y Fo(La)o(wrence)17 b(B.)g(Holder)920 b Fn(holder@cse.ut)m(a.edu)75
469 y Fm(Dep)n(artment)15 b(of)g(Computer)f(Scienc)n(e)i(Engine)n(ering)75
525 y(Box)g(19015)75 582 y(University)e(of)h(T)m(exas)g(at)g(A)o(rlington)75
638 y(A)o(rlington,)f(TX)g(76019)i(USA)868 793 y Fl(Abstract)229
864 y Fk(The)g(abilit)o(y)e(to)i(iden)o(tify)f(in)o(teresting)h(and)g(rep)q
(etitiv)o(e)h(substructures)i(is)c(an)h(essen)o(tial)g(comp)q(o-)158
914 y(nen)o(t)g(to)f(disco)o(v)o(ering)g(kno)o(wledge)f(in)h(structural)h
(data.)22 b(W)m(e)14 b(describ)q(e)j(a)e(new)g(v)o(ersion)h(of)e(our)h
Fn(Sub-)158 963 y(due)k Fk(substructure)j(disco)o(v)o(ery)d(system)f(based)i
(on)e(the)i(minim)n(um)14 b(description)20 b(length)f(principle.)158
1013 y(The)13 b Fn(Subdue)h Fk(system)e(disco)o(v)o(ers)i(substructures)h
(that)e(compress)g(the)g(original)e(data)h(and)h(represen)o(t)158
1063 y(structural)18 b(concepts)h(in)e(the)g(data.)28 b(By)17
b(replacing)g(previously-disco)o(v)o(ered)h(substructures)i(in)c(the)158
1113 y(data,)f(m)o(ultiple)f(passes)j(of)e Fn(Subdue)i Fk(pro)q(duce)g(a)e
(hierarc)o(hical)g(description)i(of)e(the)h(structural)h(reg-)158
1163 y(ularities)e(in)g(the)g(data.)22 b Fn(Subdue)16 b Fk(uses)h(a)e
(computationally-b)q(ounded)d(inexact)k(graph)f(matc)o(h)f(that)158
1212 y(iden)o(ti\014es)i(similar,)d(but)i(not)h(iden)o(tical,)e(instances)j
(of)d(a)i(substructure)i(and)d(\014nds)h(an)f(appro)o(ximate)158
1262 y(measure)e(of)g(closeness)j(of)d(t)o(w)o(o)g(substructures)j(when)e
(under)h(computational)c(constrain)o(ts.)18 b(In)c(addi-)158
1312 y(tion)d(to)g(the)i(minim)n(um)7 b(description)12 b(length)g(principle,)
f(other)h(bac)o(kground)g(kno)o(wledge)f(can)h(b)q(e)g(used)158
1362 y(b)o(y)j Fn(Subdue)i Fk(to)f(guide)f(the)h(searc)o(h)h(to)o(w)o(ards)f
(more)e(appropriate)i(substructures.)26 b(Exp)q(erimen)o(ts)15
b(in)158 1412 y(a)g(v)n(ariet)o(y)g(of)f(domains)g(demonstrate)h
Fn(Subdue)p Fk('s)i(abilit)o(y)c(to)j(\014nd)f(substructures)j(capable)e(of)e
(com-)158 1462 y(pressing)h(the)f(original)e(data)i(and)g(to)f(disco)o(v)o
(er)i(structural)f(concepts)i(imp)q(ortan)o(t)c(to)i(the)g(domain.)75
1599 y Fl(1.)24 b(In)n(tro)r(duction)75 1693 y Fj(The)17 b(large)f(amoun)o(t)
g(of)g(data)g(collected)j(to)q(da)o(y)d(is)h(quic)o(kly)h(o)o(v)o(erwhelming)
f(researc)o(hers')f(abilities)j(to)75 1749 y(in)o(terpret)g(the)g(data)f(and)
h(disco)o(v)o(er)g(in)o(teresting)g(patterns)g(within)h(the)f(data.)30
b(In)19 b(resp)q(onse)g(to)g(this)75 1806 y(problem,)j(a)e(n)o(um)o(b)q(er)h
(of)f(researc)o(hers)g(ha)o(v)o(e)g(dev)o(elop)q(ed)i(tec)o(hniques)g(for)e
(disco)o(v)o(ering)h(concepts)g(in)75 1862 y(databases.)30
b(These)19 b(tec)o(hniques)h(w)o(ork)d(w)o(ell)j(for)e(data)g(expressed)i(in)
f(a)f(non-structural,)i(attribute-)75 1919 y(v)m(alue)f(represen)o(tation,)e
(and)h(address)f(issues)h(of)f(data)g(relev)m(ance,)i(missing)f(data,)f
(noise)h(and)f(uncer-)75 1975 y(tain)o(t)o(y)l(,)22 b(and)g(utilization)i(of)
d(domain)h(kno)o(wledge.)40 b(Ho)o(w)o(ev)o(er,)22 b(recen)o(t)g(data)f
(acquisition)i(pro)s(jects)75 2032 y(are)17 b(collecting)h(structural)f(data)
f(describing)j(the)e(relationships)h(among)e(the)h(data)f(ob)s(jects.)24
b(Corre-)75 2088 y(sp)q(ondingly)l(,)15 b(there)e(exists)g(a)g(need)h(for)e
(tec)o(hniques)i(to)e(analyze)i(and)f(disco)o(v)o(er)g(concepts)g(in)h
(structural)75 2145 y(databases.)146 2208 y(One)k(metho)q(d)g(for)g(disco)o
(v)o(ering)g(kno)o(wledge)h(in)f(structural)g(data)f(is)i(the)f(iden)o
(ti\014cation)i(of)d(com-)75 2265 y(mon)c(substructures)h(within)h(the)e
(data.)19 b(The)14 b(motiv)m(ation)g(for)f(this)h(pro)q(cess)g(is)g(to)f
(\014nd)h(substructures)75 2321 y(capable)h(of)e(compressing)h(the)g(data)g
(and)g(to)f(iden)o(tify)i(conceptually)g(in)o(teresting)g(substructures)f
(that)75 2378 y(enhance)i(the)e(in)o(terpretation)h(of)f(the)h(data.)k
(Substructure)c(disco)o(v)o(ery)g(is)g(the)g(pro)q(cess)g(of)f(iden)o
(tifying)75 2434 y(concepts)k(describing)i(in)o(teresting)f(and)f(rep)q
(etitiv)o(e)h(substructures)f(within)h(structural)f(data.)27
b(Once)75 2491 y(disco)o(v)o(ered,)13 b(the)g(substructure)f(concept)h(can)g
(b)q(e)g(used)g(to)f(simplify)i(the)e(data)g(b)o(y)g(replacing)i(instances)75
2547 y(of)k(the)g(substructure)h(with)f(a)g(p)q(oin)o(ter)h(to)e(the)i(newly)
g(disco)o(v)o(ered)g(concept.)29 b(The)19 b(disco)o(v)o(ered)f(sub-)75
2604 y(structure)12 b(concepts)h(allo)o(w)g(abstraction)f(o)o(v)o(er)f
(detailed)j(structure)f(in)g(the)f(original)i(data)e(and)g(pro)o(vide)85
2727 y Fq(c)75 2728 y Fi(\015)p Fq(1994)f(AI)h(Access)f(F)m(oundation)d(and)j
(Morgan)f(Kaufmann)g(Publishers.)j(All)f(righ)o(ts)e(reserv)o(ed.)p
eop
%%Page: 232 2
232 1 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)75 95 y Fj(new,)i(relev)m(an)o
(t)g(attributes)f(for)g(in)o(terpreting)h(the)g(data.)26 b(Iteration)18
b(of)f(the)g(substructure)h(disco)o(v)o(ery)75 152 y(and)12
b(replacemen)o(t)g(pro)q(cess)g(constructs)g(a)f(hierarc)o(hical)j
(description)f(of)e(the)h(structural)g(data)f(in)i(terms)75
208 y(of)e(the)h(disco)o(v)o(ered)g(substructures.)19 b(This)12
b(hierarc)o(h)o(y)g(pro)o(vides)g(v)m(arying)g(lev)o(els)h(of)e(in)o
(terpretation)h(that)75 265 y(can)j(b)q(e)h(accessed)g(based)g(on)f(the)g
(goals)g(of)g(the)g(data)f(analysis.)146 327 y(W)l(e)j(describ)q(e)i(a)e
(system)g(called)j Fh(Subdue)e Fj(\(Holder,)g(Co)q(ok,)f(&)h(Bunk)o(e,)g
(1992;)f(Holder)h(&)g(Co)q(ok,)75 383 y(1993\))h(that)h(disco)o(v)o(ers)g(in)
o(teresting)i(substructures)e(in)i(structural)e(data)g(based)h(on)f(the)h
(minim)o(um)75 440 y(description)g(length)g(principle.)36 b(The)20
b Fh(Subdue)g Fj(system)f(disco)o(v)o(ers)h(substructures)g(that)f(compress)
75 496 y(the)f(original)h(data)e(and)i(represen)o(t)e(structural)h(concepts)h
(in)f(the)h(data.)27 b(By)18 b(replacing)h(previously-)75 552
y(disco)o(v)o(ered)c(substructures)g(in)g(the)f(data,)g(m)o(ultiple)i(passes)
f(of)f Fh(Subdue)h Fj(pro)q(duce)g(a)f(hierarc)o(hical)i(de-)75
609 y(scription)d(of)e(the)h(structural)f(regularities)i(in)g(the)f(data.)18
b Fh(Subdue)12 b Fj(uses)g(a)f(computationally-b)q(ounded)75
665 y(inexact)g(graph)g(matc)o(h)f(that)g(iden)o(ti\014es)i(similar,)h(but)d
(not)h(iden)o(tical,)i(instances)e(of)g(a)f(substructure)h(and)75
722 y(\014nds)k(an)g(appro)o(ximate)f(measure)h(of)f(closeness)i(of)e(t)o(w)o
(o)f(substructures)i(when)g(under)h(computational)75 778 y(constrain)o(ts.)33
b(In)21 b(addition)g(to)e(the)h(minim)o(um)h(description)h(length)e
(principle,)k(other)19 b(bac)o(kground)75 835 y(kno)o(wledge)c(can)f(b)q(e)h
(used)f(b)o(y)g Fh(Subdue)h Fj(to)e(guide)i(the)g(searc)o(h)e(to)o(w)o(ards)g
(more)g(appropriate)i(substruc-)75 891 y(tures.)146 953 y(The)d(follo)o(wing)
h(sections)g(describ)q(e)h(the)e(approac)o(h)g(in)h(detail.)20
b(Section)13 b(2)f(describ)q(es)i(the)e(pro)q(cess)g(of)75
1010 y(substructure)k(disco)o(v)o(ery)f(and)h(in)o(tro)q(duces)g(needed)h
(de\014nitions.)22 b(Section)17 b(3)e(compares)g(the)g Fh(Subdue)75
1066 y Fj(disco)o(v)o(ery)h(system)f(to)g(other)g(w)o(ork)g(found)h(in)g(the)
g(literature.)22 b(Section)16 b(4)g(in)o(tro)q(duces)g(the)g(minim)o(um)75
1123 y(description)24 b(length)f(enco)q(ding)i(used)e(b)o(y)f(this)i(approac)
o(h,)f(and)g(Section)h(5)e(presen)o(ts)h(the)f(inexact)75 1179
y(graph)12 b(matc)o(h)g(algorithm)h(emplo)o(y)o(ed)g(b)o(y)g
Fh(Subdue)p Fj(.)19 b(Section)14 b(6)e(describ)q(es)i(metho)q(ds)f(of)f
(incorp)q(orating)75 1236 y(bac)o(kground)17 b(kno)o(wledge)h(in)o(to)f(the)h
(substructure)f(disco)o(v)o(ery)h(pro)q(cess.)27 b(The)17 b(exp)q(erimen)o
(ts)h(detailed)75 1292 y(in)13 b(Section)g(7)f(demonstrate)g
Fh(Subdue)p Fj('s)g(abilit)o(y)i(to)e(\014nd)h(substructures)f(that)g
(compress)g(the)g(data)g(and)75 1348 y(to)18 b(re-disco)o(v)o(er)h(kno)o(wn)f
(concepts)h(in)h(a)e(v)m(ariet)o(y)h(of)f(domains.)30 b(Section)20
b(8)e(details)i(the)e(hierarc)o(hical)75 1405 y(disco)o(v)o(ery)d(pro)q
(cess.)20 b(W)l(e)c(conclude)h(with)e(observ)m(ations)h(and)f(directions)h
(for)f(future)g(researc)o(h.)75 1541 y Fl(2.)24 b(Substructure)18
b(Disco)n(v)n(ery)75 1633 y Fj(The)e(substructure)g(disco)o(v)o(ery)g(system)
g(represen)o(ts)f(structured)h(data)f(as)h(a)f(lab)q(eled)j(graph.)k(Ob)s
(jects)75 1689 y(in)f(the)f(data)f(map)h(to)f(v)o(ertices)h(or)f(small)i
(subgraphs)f(in)h(the)f(graph,)g(and)g(relationships)i(b)q(et)o(w)o(een)75
1746 y(ob)s(jects)c(map)g(to)f(directed)j(or)e(undirected)i(edges)e(in)h(the)
g(graph.)28 b(A)19 b Fg(substructur)n(e)f Fj(is)h(a)f(connected)75
1802 y(subgraph)13 b(within)h(the)f(graphical)h(represen)o(tation.)19
b(This)14 b(graphical)g(represen)o(tation)f(serv)o(es)f(as)h(input)75
1859 y(to)g(the)h(substructure)f(disco)o(v)o(ery)h(system.)19
b(Figure)14 b(1)f(sho)o(ws)g(a)g(geometric)h(example)g(of)g(suc)o(h)f(an)h
(input)75 1915 y(graph.)19 b(The)14 b(ob)s(jects)e(in)i(the)g(\014gure)f
(\(e.g.,)f Ff(T1)p Fj(,)h Ff(S1)p Fj(,)g Ff(R1)p Fj(\))g(b)q(ecome)h(lab)q
(eled)i(v)o(ertices)d(in)h(the)g(graph,)f(and)75 1971 y(the)h(relationships)i
(\(e.g.,)c Ff(on\(T1,S1\))p Fj(,)h Ff(shape\(C1,circle\))p
Fj(\))e(b)q(ecome)k(lab)q(eled)h(edges)e(in)h(the)f(graph.)75
2028 y(The)k(graphical)g(represen)o(tation)g(of)f(the)g(substructure)h(disco)
o(v)o(ered)g(b)o(y)g Fh(Subdue)g Fj(from)f(this)h(data)e(is)75
2084 y(also)f(sho)o(wn)g(in)h(Figure)g(1.)146 2146 y(An)k Fg(instanc)n(e)f
Fj(of)i(a)f(substructure)h(in)g(an)g(input)g(graph)f(is)h(a)g(set)f(of)g(v)o
(ertices)h(and)g(edges)g(from)75 2203 y(the)h(input)g(graph)g(that)f(matc)o
(h,)h(graph)f(theoretically)l(,)k(to)c(the)g(graphical)i(represen)o(tation)f
(of)f(the)75 2259 y(substructure.)39 b(F)l(or)20 b(example,)k(the)d
(instances)h(of)f(the)h(substructure)f(in)h(Figure)g(1)f(are)g(sho)o(wn)g(in)
75 2316 y(Figure)15 b(2.)146 2378 y(The)d(substructure)h(disco)o(v)o(ery)f
(algorithm)g(used)h(b)o(y)g Fh(Subdue)f Fj(is)h(a)f
(computationally-constrained)75 2434 y(b)q(eam)17 b(searc)o(h.)23
b(The)17 b(algorithm)f(b)q(egins)i(with)f(the)f(substructure)h(matc)o(hing)g
(a)f(single)i(v)o(ertex)e(in)h(the)75 2491 y(graph.)i(Eac)o(h)14
b(iteration)h(through)f(the)g(algorithm)h(selects)g(the)f(b)q(est)h
(substructure)f(and)h(expands)g(the)75 2547 y(instances)f(of)g(the)f
(substructure)h(b)o(y)g(one)g(neigh)o(b)q(oring)h(edge)f(in)g(all)h(p)q
(ossible)g(w)o(a)o(ys.)k(The)14 b(new)f(unique)75 2604 y(generated)j
(substructures)g(b)q(ecome)h(candidates)g(for)f(further)g(expansion.)23
b(The)17 b(algorithm)f(searc)o(hes)944 2728 y Fk(232)p eop
%%Page: 233 3
233 2 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)317
103 y
 20787036 8025375 11314462 29799137 32101498 37824512 startTexFig
 317 103 a
%%BeginDocument: figures/f1.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
[ 1 0 0 1 0.0361328 -10.2892 ] concat

Begin %I Pict

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 401 101 421 Rect
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 421
91 441
101 421
81 421
4 Poly
End

End %I eop

Begin %I Pict
[ 1 0 0 1 60 0 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 401 101 421 Rect
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 421
91 441
101 421
81 421
4 Poly
End

End %I eop

Begin %I Pict
[ 1 0 0 1 120 0 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 401 101 421 Rect
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 421
91 441
101 421
81 421
4 Poly
End

End %I eop

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
71 441 231 461 Rect
End

Begin %I Pict
[ 1 0 0 1 0 59 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 401 101 421 Rect
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 421
91 441
101 421
81 421
4 Poly
End

End %I eop

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
211 470 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 233 671 ] concat
[
(S1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 232.831 687.084 ] concat
[
(T1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 233 629 ] concat
[
(T2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 293 628 ] concat
[
(T3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 353 628 ] concat
[
(T4)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 233 611 ] concat
[
(S2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 293 611 ] concat
[
(S3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 354 610 ] concat
[
(S4)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 353 671 ] concat
[
(C1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 293 652 ] concat
[
(R1)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1.19444 0 0 1.19444 493.265 711.778 ] concat
[
(Substructure)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1.28149 0 0 1.28149 261.325 713.198 ] concat
[
(Input Graph)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 470.925 620.563 ] concat
[
(on)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ .907557 .593403 -.593403 .907557 492.889 658.665 ] concat
[
(shape)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ .886778 .624029 -.624029 .886778 494.163 599.569 ] concat
[
(shape)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 226.949 313.695 ] concat
240 292 240 255 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 226.949 313.695 ] concat
241 302 289 333 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 226.949 313.695 ] concat
240 247 287 277 Line
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1.08434 0 0 1.08434 306.105 223.695 ] concat
167 329 9 9 Elli
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1.08434 0 0 1.08434 306.105 283.334 ] concat
167 329 9 9 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
259 430 286 430 Line
End

Begin %I Pict
[ 1 0 0 1 5.42169 -2.16858 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 543.575 684.539 ] concat
[
(triangle)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
406 468 31 9 Elli
End

End %I eop

Begin %I Pict
[ 1 0 0 1 4.3374 -4.33734 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 542.491 625.985 ] concat
[
(square)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
399 413 23 9 Elli
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 506 710 a Fj(Figure)f(1:)20 b(Example)c(substructure)f(in)h(graph)f(form.)
321 878 y
 20655473 2894398 10985553 33219788 31641026 36114186 startTexFig
 321 878 a
%%BeginDocument: figures/f2.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
[ 1 0 0 1 106 35 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 401 101 421 Rect
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 421
91 441
101 421
81 421
4 Poly
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 339 664 ] concat
[
(T2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 339 646 ] concat
[
(S2)
] Text
End

Begin %I Pict
[ 1 0 0 1 214 35 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 401 101 421 Rect
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 421
91 441
101 421
81 421
4 Poly
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 447 663 ] concat
[
(T3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 447 646 ] concat
[
(S3)
] Text
End

Begin %I Pict
[ 1 0 0 1 326 35 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 401 101 421 Rect
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 421
91 441
101 421
81 421
4 Poly
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 559 663 ] concat
[
(T4)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 560 645 ] concat
[
(S4)
] Text
End

Begin %I Pict
[ 1 0 0 1 8 35 ] concat

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 401 101 421 Rect
End

Begin %I Poly
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
81 421
91 441
101 421
81 421
4 Poly
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 242 663 ] concat
[
(T1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 241 646 ] concat
[
(S1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 210 685 ] concat
[
(Instance  1       Instance  2       Instance  3       Instance  4)
] Text
End

End %I eop

showpage


end

%%EndDocument

 endTexFig
 581 1159 a Fj(Figure)g(2:)20 b(Instances)15 b(of)g(the)g(substructure.)75
1352 y(for)g(the)h(b)q(est)g(substructure)g(un)o(til)h(all)f(p)q(ossible)i
(substructures)d(ha)o(v)o(e)h(b)q(een)h(considered)g(or)e(the)h(total)75
1408 y(amoun)o(t)c(of)g(computation)g(exceeds)h(a)f(giv)o(en)h(limit.)21
b(The)12 b(ev)m(aluation)i(of)e(eac)o(h)g(substructure)h(is)g(guided)75
1465 y(b)o(y)i(the)g(MDL)g(principle)j(and)e(other)f(bac)o(kground)g(kno)o
(wledge)g(pro)o(vided)h(b)o(y)f(the)h(user.)146 1526 y(T)o(ypically)l(,)h
(once)f(the)f(description)i(length)g(of)e(an)g(expanding)i(substructure)f(b)q
(egins)h(to)d(increase,)75 1582 y(further)21 b(expansion)h(of)f(the)h
(substructure)f(will)i(not)e(yield)i(a)e(smaller)h(description)h(length.)39
b(As)21 b(a)75 1639 y(result,)16 b Fh(Subdue)h Fj(mak)o(es)f(use)g(of)g(an)g
(optional)h(pruning)g(mec)o(hanism)g(that)e(eliminates)j(substructure)75
1695 y(expansions)e(from)e(consideration)i(when)f(the)g(description)h
(lengths)g(for)e(these)h(expansions)g(increases.)75 1830 y
Fl(3.)24 b(Related)17 b(W)-5 b(ork)75 1921 y Fj(Sev)o(eral)18
b(approac)o(hes)f(to)f(substructure)i(disco)o(v)o(ery)f(ha)o(v)o(e)g(b)q(een)
h(dev)o(elop)q(ed.)28 b(Winston's)17 b Fh(Ar)o(ch)g Fj(pro-)75
1978 y(gram)10 b(\(Winston,)h(1975\))f(disco)o(v)o(ers)h(substructures)g(in)g
(order)g(to)f(deep)q(en)j(the)e(hierarc)o(hical)h(description)75
2034 y(of)g(a)g(scene)h(and)f(to)g(group)g(ob)s(jects)g(in)o(to)g(more)g
(general)h(concepts.)19 b(The)13 b Fh(Ar)o(ch)f Fj(program)f(searc)o(hes)i
(for)75 2091 y(t)o(w)o(o)j(t)o(yp)q(es)i(of)f(substructure)g(in)i(the)e(blo)q
(c)o(ks-w)o(orld)h(domain.)27 b(The)18 b(\014rst)f(t)o(yp)q(e)h(in)o(v)o(olv)
o(es)g(a)f(sequence)75 2147 y(of)k(ob)s(jects)f(connected)i(b)o(y)f(a)f(c)o
(hain)i(of)e(similar)i(relations.)38 b(The)21 b(second)h(t)o(yp)q(e)f(in)o(v)
o(olv)o(es)g(a)g(set)f(of)75 2204 y(ob)s(jects)15 b(eac)o(h)h(ha)o(ving)f(a)h
(similar)h(relationship)g(to)e(some)g(\\grouping")g(ob)s(ject.)21
b(The)16 b(main)g(di\013erence)75 2260 y(b)q(et)o(w)o(een)f(the)g
(substructure)h(disco)o(v)o(ery)f(pro)q(cedures)h(used)f(b)o(y)g(the)h
Fh(Ar)o(ch)f Fj(program)f(and)h Fh(Subdue)g Fj(is)75 2317 y(that)g(the)g
Fh(Ar)o(ch)g Fj(program)f(is)i(designed)h(sp)q(eci\014cally)h(for)d(the)g
(blo)q(c)o(ks-w)o(orld)h(domain.)21 b(F)l(or)15 b(instance,)75
2373 y(the)k(sequence)h(disco)o(v)o(ery)g(metho)q(d)f(lo)q(oks)g(for)g
Ff(supported-by)e Fj(and)i Ff(in-front-of)f Fj(relations)i(only)l(.)75
2430 y Fh(Subdue)p Fj('s)15 b(substructure)f(disco)o(v)o(ery)h(metho)q(d)g
(is)g(domain)g(indep)q(enden)o(t,)h(although)f(the)f(inclusion)j(of)75
2486 y(domain-sp)q(eci\014c)h(kno)o(wledge)d(w)o(ould)h(impro)o(v)o(e)f
Fh(Subdue)p Fj('s)g(p)q(erformance.)146 2547 y(Motiv)m(ated)h(b)o(y)g(the)g
(need)h(to)e(construct)h(a)g(kno)o(wledge)h(base)f(of)f(c)o(hemical)j
(structures,)e(Levinson)75 2604 y(\(Levinson,)g(1984\))e(dev)o(elop)q(ed)j(a)
e(system)g(for)g(storing)g(lab)q(eled)j(graphs)d(in)h(whic)o(h)h(individual)h
(graphs)944 2728 y Fk(233)p eop
%%Page: 234 4
234 3 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)75 95 y Fj(are)11
b(represen)o(ted)i(b)o(y)e(the)h(set)g(of)f(v)o(ertices)h(in)h(a)e(univ)o
(ersal)i(graph.)19 b(In)12 b(addition,)h(the)f(individual)j(graphs)75
152 y(are)h(main)o(tained)h(in)f(a)g(partial)h(ordering)f(de\014ned)h(b)o(y)f
(the)g Ff(subgraph-of)f Fj(relation,)h(whic)o(h)h(impro)o(v)o(es)75
208 y(the)23 b(p)q(erformance)g(of)f(graph)g(comparisons.)43
b(The)23 b(univ)o(ersal)h(graph)e(represen)o(tation)h(pro)o(vides)g(a)75
265 y(metho)q(d)f(for)f(compressing)h(the)f(set)h(of)f(graphs)g(stored)g(in)i
(the)e(kno)o(wledge)h(base.)39 b(Subgraphs)22 b(of)75 321 y(the)16
b(univ)o(ersal)g(graph)f(used)h(b)o(y)g(sev)o(eral)f(individual)k(graphs)c
(suggest)g(common)g(substructure)h(in)g(the)75 377 y(individual)22
b(graphs.)30 b(One)20 b(di\013erence)g(b)q(et)o(w)o(een)f(the)g(t)o(w)o(o)f
(approac)o(hes)g(is)i(that)e(Levinson's)h(system)75 434 y(is)c(designed)i(to)
d(incremen)o(tally)j(pro)q(cess)e(smaller)h(individual)i(graphs;)c(whereas,)h
Fh(Subdue)h Fj(pro)q(cesses)75 490 y(larger)21 b(graphs)f(all)i(at)e(once.)37
b(Also,)23 b(Levinson's)e(system)g(disco)o(v)o(ers)g(common)f(substructure)h
(only)75 547 y(as)g(an)g(indirect)h(result)g(of)e(the)i(univ)o(ersal)g(graph)
f(construction;)i(whereas,)f Fh(Subdue)p Fj('s)g(main)f(goal)75
603 y(is)g(to)g(disco)o(v)o(er)g(and)g(output)g(substructure)g(de\014nitions)
h(that)f(reduce)g(the)g(minim)o(um)h(description)75 660 y(length)14
b(enco)q(ding)g(of)e(the)h(graph.)19 b(Finally)l(,)c(the)e
Ff(subgraph-of)e Fj(partial)i(ordering)h(used)f(b)o(y)g(Levinson's)75
716 y(system)g(is)h(not)f(included)j(in)f Fh(Subdue)p Fj(,)f(but)f(main)o
(taining)i(this)f(partial)g(ordering)g(w)o(ould)f(impro)o(v)o(e)h(the)75
773 y(p)q(erformance)g(of)g(the)h(graph)f(matc)o(hing)g(pro)q(cedure)h(b)o(y)
g(pruning)g(the)f(n)o(um)o(b)q(er)h(of)f(p)q(ossible)i(matc)o(hing)75
829 y(graphs.)146 913 y(Segen)i(\(Segen,)h(1990\))e(describ)q(es)i(a)f
(system)g(for)g(storing)f(graphs)h(using)h(a)f(probabilistic)i(graph)75
969 y(mo)q(del)15 b(to)f(represen)o(t)h(subsets)f(of)g(the)h(graph.)k
(Alternativ)o(e)c(mo)q(dels)g(are)f(ev)m(aluated)i(based)f(on)f(a)g(min-)75
1025 y(im)o(um)h(description)i(length)e(measure)g(of)g(the)g(information)g
(needed)h(to)f(represen)o(t)g(the)g(stored)f(graphs)75 1082
y(using)22 b(the)f(mo)q(del.)38 b(In)22 b(addition,)h(Segen's)f(system)e
(clusters)i(the)f(graphs)g(in)o(to)g(classes)h(based)f(on)75
1138 y(minimizing)f(the)d(description)i(length)f(of)f(the)g(graphs)g
(according)h(to)f(the)g(en)o(tire)h(clustering.)27 b(Apart)75
1195 y(from)17 b(the)h(probabilistic)i(represen)o(tation,)d(Segen's)h
(approac)o(h)f(is)i(similar)f(to)f(Levinson's)i(system)e(in)75
1251 y(that)f(b)q(oth)g(metho)q(ds)h(tak)o(e)f(adv)m(an)o(tage)g(of)g
(commonalities)i(in)f(the)g(graphs)f(to)g(assist)g(in)h(graph)g(stor-)75
1308 y(age)i(and)g(matc)o(hing.)31 b(The)19 b(probabilistic)i(graphs)e(con)o
(tain)g(information)g(for)g(iden)o(tifying)h(common)75 1364
y(substructure)g(in)h(the)e(exact)h(graphs)f(they)h(represen)o(t.)34
b(The)20 b(p)q(ortion)g(of)f(the)h(probabilistic)i(graph)75
1421 y(with)c(high)h(probabilit)o(y)h(de\014nes)f(a)f(substructure)g(that)g
(app)q(ears)g(frequen)o(tly)h(in)g(the)f(exact)g(graphs.)75
1477 y(This)h(notion)h(w)o(as)e(not)g(emphasized)i(in)g(Segen's)f(w)o(ork,)f
(but)h(pro)o(vides)h(an)e(alternativ)o(e)i(metho)q(d)f(to)75
1534 y(substructure)13 b(disco)o(v)o(ery)h(b)o(y)f(clustering)h(subgraphs)f
(of)g(the)g(original)i(input)f(graphs.)19 b(As)13 b(with)g(Levin-)75
1590 y(son's)f(approac)o(h,)g(graphs)f(are)h(pro)q(cessed)h(incremen)o(tally)
l(,)i(and)d(substructure)g(is)h(found)f(across)g(sev)o(eral)75
1646 y(graphs,)i(not)h(within)i(a)e(single)h(graph)f(as)g(in)h
Fh(Subdue)p Fj(.)146 1730 y(The)11 b Fh(Labyrinth)h Fj(system)f(\(Thompson)g
(&)h(Langley)l(,)h(1991\))e(extends)h(the)g Fh(Cobweb)g Fj(incremen)o(tal)75
1786 y(conceptual)k(clustering)f(system)f(\(Fisher,)h(1987\))d(to)i(handle)i
(structured)e(ob)s(jects.)19 b Fh(Labyrinth)c Fj(uses)75 1843
y Fh(Cobweb)k Fj(to)f(form)h(hierarc)o(hical)h(concepts)f(of)f(the)h
(individual)j(ob)s(jects)c(in)i(the)f(domain)g(based)g(on)75
1899 y(their)f(primitiv)o(e)g(attributes.)25 b(Concepts)17
b(of)g(structured)g(ob)s(jects)f(are)h(formed)g(in)h(a)f(similar)h(manner)75
1956 y(using)11 b(the)g(individual)j(ob)s(jects)c(as)h(attributes.)18
b(The)11 b(resulting)h(hierarc)o(h)o(y)f(represen)o(ts)f(a)h(comp)q(onen)o
(tial)75 2012 y(mo)q(del)i(of)e(the)i(structured)f(ob)s(jects.)18
b(Because)12 b Fh(Cobweb)p Fj('s)g(concepts)h(are)f(probabilistic,)i
Fh(Labyrinth)75 2069 y Fj(pro)q(duces)22 b(probabilistic)h(mo)q(dels)f(of)e
(the)h(structured)g(ob)s(jects,)g(but)h(with)f(an)g(added)g(hierarc)o(hical)
75 2125 y(organization.)i(The)17 b(upp)q(er-lev)o(el)i(comp)q(onen)o(ts)d(of)
g(the)g(structured-ob)s(ject)g(hierarc)o(h)o(y)h(pro)q(duced)g(b)o(y)75
2182 y Fh(Labyrinth)d Fj(represen)o(t)g(substructures)g(common)g(to)f(the)h
(examples.)20 b(Therefore,)14 b(although)g(not)g(the)75 2238
y(primary)i(fo)q(cus,)h Fh(Labyrinth)f Fj(is)h(disco)o(v)o(ering)g
(substructure,)f(but)h(in)g(a)f(more)g(constrained)h(con)o(text)75
2294 y(than)e(the)g(general)h(graph)f(represen)o(tation)g(used)h(b)o(y)f
Fh(Subdue)p Fj(.)146 2378 y(Conklin)k(et)f(al.)29 b(\(Conklin)19
b(&)f(Glasgo)o(w,)g(1992\))f(ha)o(v)o(e)g(dev)o(elop)q(ed)j(the)e
Fh(i-mem)g Fj(system)g(for)g(con-)75 2434 y(structing)e(an)g(image)h(hierarc)
o(h)o(y)l(,)f(similar)i(to)d(that)g(of)h Fh(Labyrinth)p Fj(,)g(used)h(for)e
(disco)o(v)o(ering)i(common)75 2491 y(substructures)c(in)g(a)g(set)f(of)h
(images)f(and)h(for)f(e\016cien)o(t)i(retriev)m(al)g(of)e(images)h(similar)h
(to)e(a)g(giv)o(en)h(image.)75 2547 y(Images)h(are)g(expressed)h(in)f(terms)g
(of)g(a)f(set)h(of)g(relations)h(de\014ned)g(b)o(y)f(the)g(user.)20
b(Sp)q(eci\014c)c(and)e(general)75 2604 y(\(conceptual\))20
b(images)f(are)g(stored)g(in)h(the)f(hierarc)o(h)o(y)h(based)f(on)h(a)f
(subsumption)h(relation)g(similar)944 2728 y Fk(234)p eop
%%Page: 235 5
235 4 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)75
95 y Fj(to)j(Levinson's)h Ff(subgraph-of)e Fj(partial)h(ordering.)33
b(Image)19 b(matc)o(hing)h(utilizes)h(a)e(transformational)75
152 y(approac)o(h)c(\(similar)h(to)e Fh(Subdue)p Fj('s)i(inexact)g(graph)f
(matc)o(h\))f(as)h(a)g(measure)g(of)f(image)i(closeness.)146
214 y(As)e(with)h(the)g(approac)o(hes)f(of)g(Segen)h(and)g(Levinson,)g
Fh(i-mem)g Fj(is)g(designed)h(to)e(pro)q(cess)h(individual)75
271 y(images.)36 b(Therefore,)21 b(the)f(general)h(image)g(concepts)g(that)e
(app)q(ear)i(higher)g(in)h Fh(i-mem)p Fj('s)e(hierarc)o(h)o(y)75
327 y(will)15 b(represen)o(t)e(common)g(substructures)h(across)f(sev)o(eral)g
(images.)19 b Fh(Subdue)14 b Fj(is)g(designed)h(to)e(disco)o(v)o(er)75
384 y(common)j(substructures)g(within)h(a)f(single)h(image.)23
b Fh(Subdue)16 b Fj(can)h(mimic)g(the)f(individual)j(approac)o(h)75
440 y(of)d(these)h(systems)g(b)o(y)f(pro)q(cessing)i(a)f(set)f(of)h
(individual)j(images)c(as)h(one)g(disconnected)h(graph.)25
b(The)75 496 y(substructures)12 b(found)h(will)h(b)q(e)e(common)g(to)g(the)g
(individual)j(images.)k(The)12 b(hierarc)o(h)o(y)h(also)f(represen)o(ts)75
553 y(a)k(comp)q(onen)o(tial)i(view)f(of)f(the)h(images.)24
b(This)17 b(same)f(view)h(can)g(b)q(e)g(constructed)g(b)o(y)f
Fh(Subdue)h Fj(using)75 609 y(m)o(ultiple)c(passes)e(o)o(v)o(er)g(the)g
(graph)g(after)g(replacing)i(p)q(ortions)e(of)g(the)h(input)g(graph)f(with)h
(substructures)75 666 y(disco)o(v)o(ered)21 b(during)h(previous)f(passes.)37
b Fh(i-mem)20 b Fj(has)h(p)q(erformed)g(w)o(ell)h(in)f(a)f(simple)j(c)o(hess)
e(domain)75 722 y(and)f(molecular)g(c)o(hemistry)g(domains)f(\(Conklin)i(&)f
(Glasgo)o(w,)f(1992\).)31 b(Ho)o(w)o(ev)o(er,)19 b Fh(i-mem)g
Fj(requires)75 779 y(domain-sp)q(eci\014c)i(relations)d(for)g(expressing)h
(images)f(in)h(order)f(for)g(the)g(hierarc)o(h)o(y)h(to)e(\014nd)i(relev)m
(an)o(t)75 835 y(substructures)j(and)f(for)g(image)h(matc)o(hing)f(to)g(b)q
(e)i(e\016cien)o(t.)39 b(Again,)23 b(main)o(taining)g(the)f(concepts)75
892 y(\(images,)c(graphs\))f(in)i(a)f(partially-ordered)h(hierarc)o(h)o(y)f
(impro)o(v)o(es)g(the)g(e\016ciency)h(of)f(matc)o(hing)g(and)75
948 y(retriev)m(al,)e(and)f(suggests)g(a)g(p)q(ossible)i(impro)o(v)o(emen)o
(t)e(to)f Fh(Subdue)p Fj(.)146 1011 y(The)i Fh(CLiP)f Fj(system)g(\(Y)l
(oshida,)i(Moto)q(da,)d(&)j(Indurkh)o(y)o(a,)f(1993\))e(for)i(graph-based)g
(induction)h(is)75 1067 y(more)d(similar)j(to)d Fh(Subdue)h
Fj(than)g(the)g(previous)h(systems.)j Fh(CLiP)14 b Fj(iterativ)o(ely)i(disco)
o(v)o(ers)f(patterns)f(in)75 1124 y(graphs)k(b)o(y)h(expanding)h(and)f(com)o
(bining)h(patterns)f(disco)o(v)o(ered)g(in)h(previous)f(iterations.)31
b(P)o(atterns)75 1180 y(are)22 b(group)q(ed)i(in)o(to)e(views)h(based)g(on)g
(their)g(collectiv)o(e)i(abilit)o(y)f(to)e(compress)g(the)h(original)h(input)
75 1237 y(graph.)32 b(During)19 b(eac)o(h)h(iteration)f Fh(CLiP)g
Fj(uses)g(existing)i(views)e(to)g(con)o(tract)f(the)i(input)g(graph)f(and)75
1293 y(then)13 b(considers)h(adding)f(to)f(the)h(views)g(new)g(patterns)g
(consisting)g(of)g(t)o(w)o(o)e(v)o(ertices)i(and)g(an)g(edge)g(from)75
1349 y(the)18 b(con)o(tracted)g(graph.)28 b(The)19 b(compression)f(of)g(the)g
(new)h(prop)q(osed)f(views)h(is)g(estimated,)g(and)f(the)75
1406 y(b)q(est)d(views)h(\(according)g(to)e(a)h(giv)o(en)h(b)q(eam)f(width\))
h(are)e(retained)i(for)f(the)g(next)h(iteration.)146 1468 y
Fh(CLiP)10 b Fj(disco)o(v)o(ers)h(substructures)g(\(patterns\))e(di\013eren)o
(tly)j(than)f Fh(Subdue)p Fj(.)19 b(First,)11 b Fh(CLiP)f Fj(pro)q(duces)75
1525 y(a)h(set)f(of)h(substructures)g(that)f(collectiv)o(ely)j(compress)e
(the)g(input)h(graph;)f(whereas,)h Fh(Subdue)f Fj(pro)q(duces)75
1581 y(only)k(single)h(substructures)f(ev)m(aluated)g(using)h(the)e(more)g
(principled)k(minim)o(um)e(description)g(length.)75 1638 y
Fh(CLiP)11 b Fj(has)h(the)g(abilit)o(y)i(to)d(gro)o(w)g(substructures)h
(agglomerativ)o(ely)g(\(i.e.,)g(merging)g(t)o(w)o(o)f(substructures)75
1694 y(together\);)16 b(whereas,)g Fh(Subdue)h Fj(alw)o(a)o(ys)f(pro)q(duces)
h(new)g(substructures)f(using)i(incremen)o(tal)f(gro)o(wth)75
1751 y(along)d(one)h(new)g(edge.)20 b Fh(CLiP)13 b Fj(initially)k(estimates)e
(the)f(compression)h(v)m(alue)h(of)e(new)g(views)h(based)g(on)75
1807 y(the)j(compression)g(v)m(alue)h(of)e(the)h(paren)o(t)f(view;)j
(whereas,)d Fh(Subdue)i Fj(p)q(erforms)e(an)h(exp)q(ensiv)o(e)h(exact)75
1864 y(measuremen)o(t)14 b(of)f(compression)h(for)f(eac)o(h)h(new)g
(substructure.)20 b(Finally)l(,)15 b Fh(CLiP)e Fj(emplo)o(ys)h(an)g
(e\016cien)o(t)75 1920 y(graph)e(matc)o(h)f(based)i(on)f(graph)g(iden)o(tit)o
(y)l(,)h(not)f(graph)g(isomorphism)g(as)g(in)h Fh(Subdue)p
Fj(.)19 b(Graph)12 b(iden)o(tit)o(y)75 1977 y(assumes)k(an)g(ordering)h(o)o
(v)o(er)f(the)g(inciden)o(t)i(edges)f(of)f(a)g(v)o(ertex)g(and)g(do)q(es)h
(not)f(consider)h(all)g(p)q(ossible)75 2033 y(mappings)h(when)g(lo)q(oking)g
(for)e(o)q(ccurrences)j(of)d(a)h(pattern)g(in)h(an)f(input)i(graph.)25
b(These)18 b(di\013erences)75 2089 y(in)e Fh(CLiP)e Fj(suggest)h(p)q(ossible)
i(enhancemen)o(ts)f(to)e Fh(Subdue)p Fj(.)146 2152 y(Researc)o(h)k(in)g
(pattern)f(recognition)i(has)f(b)q(egun)g(to)f(in)o(v)o(estigate)h(the)g(use)
g(of)f(graphs)g(and)h(graph)75 2208 y(grammars)13 b(as)h(an)h(underlying)h
(represen)o(tation)f(for)f(structural)g(problems)i(\(Sc)o(halk)o(o\013,)d
(1992\).)19 b(Man)o(y)75 2265 y(results)c(in)g(grammatical)f(inference)i(are)
e(applicable)j(to)d(constrained)h(classes)g(of)f(graphs)g(\(e.g.,)g(trees\))
75 2321 y(\(F)l(u,)g(1982;)g(Miclet,)h(1986\).)k(The)c(approac)o(h)f(b)q
(egins)i(with)g(a)e(set)h(of)f(sample)i(graphs)e(and)i(pro)q(duces)f(a)75
2378 y(generalized)f(graph)e(grammar)e(capable)j(of)f(deriving)h(the)f
(original)i(sample)e(graphs)g(and)g(man)o(y)g(others.)75 2434
y(The)19 b(pro)q(duction)h(rules)g(of)f(this)g(general)h(grammar)d(capture)i
(regularities)i(\(substructures\))d(in)i(the)75 2491 y(sample)14
b(graphs.)k(Jeltsc)o(h)c(and)g(Kreo)o(wski)f(\(Jeltsc)o(h)g(&)h(Kreo)o(wski,)
f(1991\))e(describ)q(e)k(an)e(approac)o(h)g(that)75 2547 y(b)q(egins)18
b(with)f(a)f(maximally-sp)q(eci\014c)j(grammar)c(and)i(iterativ)o(ely)g(iden)
o(ti\014es)h(common)f(subgraphs)f(in)75 2604 y(the)i(righ)o(t-hand)h(sides)g
(of)f(the)g(pro)q(duction)h(rules.)30 b(These)18 b(common)g(subgraphs)g(are)g
(used)h(to)f(form)944 2728 y Fk(235)p eop
%%Page: 236 6
236 5 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)75 95 y Fj(new,)c(more)f
(general)g(pro)q(duction)i(rules.)19 b(Although)12 b(their)g(metho)q(d)f(do)q
(es)h(not)e(address)i(the)f(underlying)75 152 y(com)o(binatorial)21
b(nondeterminism,)i(heuristic)e(approac)o(hes)f(could)i(pro)o(vide)e(a)g
(feasible)i(metho)q(d)f(for)75 208 y(extracting)14 b(substructures)g(in)h
(the)g(form)e(of)h(graph)g(grammars.)k(F)l(urthermore,)13 b(the)i(graph)e
(grammar)75 265 y(pro)q(duction-rule)h(ma)o(y)e(pro)o(vide)h(a)f(suitable)i
(represen)o(tation)e(for)g(bac)o(kground)g(kno)o(wledge)h(during)g(the)75
321 y(substructure)i(disco)o(v)o(ery)h(pro)q(cess.)75 451 y
Fl(4.)24 b(Minim)n(um)16 b(Description)h(Length)h(Enco)r(ding)g(of)h(Graphs)
75 538 y Fj(The)k(minim)o(um)i(description)f(length)g(principle)i(\(MDLP\))c
(in)o(tro)q(duced)j(b)o(y)e(Rissanen)h(\(Rissanen,)75 594 y(1989\))15
b(states)h(that)f(the)i(b)q(est)g(theory)f(to)f(describ)q(e)k(a)d(set)g(of)g
(data)g(is)h(that)e(theory)h(whic)o(h)i(minimizes)75 650 y(the)c(description)
h(length)g(of)e(the)h(en)o(tire)h(data)e(set.)19 b(The)14 b(MDL)g(principle)j
(has)c(b)q(een)i(used)g(for)e(decision)75 707 y(tree)f(induction)j(\(Quinlan)
f(&)f(Riv)o(est,)g(1989\),)e(image)i(pro)q(cessing)g(\(P)o(ednault,)g(1989;)f
(P)o(en)o(tland,)h(1989;)75 763 y(Leclerc,)j(1989\),)c(concept)i(learning)i
(from)d(relational)i(data)e(\(Derthic)o(k,)h(1991\),)f(and)h(learning)h(mo)q
(dels)75 820 y(of)g(non-homogeneous)g(engineering)i(domains)f(\(Rao)e(&)i
(Lu,)f(1992\).)146 876 y(W)l(e)f(demonstrate)g(ho)o(w)g(the)h(minim)o(um)h
(description)g(length)f(principle)j(can)c(b)q(e)i(used)f(to)f(disco)o(v)o(er)
75 933 y(substructures)f(in)h(complex)g(data.)19 b(In)14 b(particular,)g(a)e
(substructure)i(is)f(ev)m(aluated)i(based)e(on)g(ho)o(w)g(w)o(ell)75
989 y(it)19 b(can)f(compress)h(the)f(en)o(tire)h(dataset)e(using)j(the)e
(minim)o(um)i(description)g(length.)30 b(W)l(e)18 b(de\014ne)i(the)75
1046 y(minim)o(um)f(description)g(length)f(of)g(a)f(graph)g(to)g(b)q(e)i(the)
e(n)o(um)o(b)q(er)h(of)g(bits)g(necessary)g(to)f(completely)75
1102 y(describ)q(e)g(the)e(graph.)146 1159 y(According)20 b(to)f(the)g(minim)
o(um)i(description)g(length)f(\(MDL\))e(principle,)23 b(the)d(theory)f(that)g
(b)q(est)75 1215 y(accoun)o(ts)e(for)g(a)g(collection)i(of)e(data)f(is)i(the)
f(one)h(that)e(minimizes)k Fe(I)t Fj(\()p Fe(S)s Fj(\))10 b(+)i
Fe(I)t Fj(\()p Fe(G)p Fd(j)p Fe(S)s Fj(\),)j(where)i Fe(S)j
Fj(is)e(the)75 1272 y(disco)o(v)o(ered)13 b(substructure,)g
Fe(G)g Fj(is)g(the)g(input)h(graph,)e Fe(I)t Fj(\()p Fe(S)s
Fj(\))f(is)j(the)e(n)o(um)o(b)q(er)h(of)g(bits)g(required)h(to)e(enco)q(de)75
1328 y(the)i(disco)o(v)o(ered)h(substructure,)g(and)f Fe(I)t
Fj(\()p Fe(G)p Fd(j)p Fe(S)s Fj(\))e(is)j(the)f(n)o(um)o(b)q(er)h(of)f(bits)g
(required)i(to)d(enco)q(de)j(the)e(input)75 1384 y(graph)h
Fe(G)g Fj(with)g(resp)q(ect)h(to)f Fe(S)s Fj(.)146 1441 y(The)i(graph)f
(connectivit)o(y)i(can)f(b)q(e)g(represen)o(ted)g(b)o(y)g(an)f(adjacency)i
(matrix.)24 b(Consider)17 b(a)f(graph)75 1497 y(that)f(has)g
Fe(n)h Fj(v)o(ertices,)f(whic)o(h)h(are)g(n)o(um)o(b)q(ered)g(0)p
Fe(;)8 b Fj(1)p Fe(;)g(:)g(:)f(:)t(;)h(n)i Fd(\000)h Fj(1.)20
b(An)c Fe(n)10 b Fd(\002)h Fe(n)k Fj(adjacency)h(matrix)f Fe(A)h
Fj(can)75 1554 y(b)q(e)h(formed)g(with)g(en)o(try)f Fe(A)p
Fj([)p Fe(i;)8 b(j)s Fj(])14 b(set)j(to)f(0)g(or)h(1.)24 b(If)17
b Fe(A)p Fj([)p Fe(i;)8 b(j)s Fj(])k(=)k(0,)g(then)h(there)g(is)g(no)g
(connection)h(from)75 1610 y(v)o(ertex)f Fe(i)h Fj(to)f(v)o(ertex)g
Fe(j)s Fj(.)27 b(If)17 b Fe(A)p Fj([)p Fe(i;)8 b(j)s Fj(])15
b(=)i(1,)h(then)g(there)f(is)i(at)e(least)g(one)h(connection)h(from)e(v)o
(ertex)g Fe(i)h Fj(to)75 1667 y(v)o(ertex)g Fe(j)s Fj(.)28
b(Undirected)20 b(edges)e(are)g(recorded)h(in)g(only)f(one)h(en)o(try)f(of)f
(the)i(matrix.)28 b(The)19 b(adjacency)75 1723 y(matrix)c(for)f(the)i(graph)f
(in)h(Figure)f(3)g(is)h(sho)o(wn)f(b)q(elo)o(w.)819 1800 y
Fe(x)681 1856 y(tr)q(iang)r(l)q(e)822 1913 y(y)709 1969 y(sq)r(uar)q(e)824
2026 y(r)656 2082 y(r)q(ectang)r(l)q(e)874 1770 y Fc(2)874
1843 y(6)874 1868 y(6)874 1892 y(6)874 1917 y(6)874 1942 y(6)874
1967 y(6)874 1992 y(6)874 2019 y(4)922 1800 y Fj(0)41 b(1)h(1)f(0)g(0)g(0)922
1856 y(0)g(0)h(0)f(0)g(0)g(0)922 1913 y(0)g(0)h(0)f(1)g(1)g(0)922
1969 y(0)g(0)h(0)f(0)g(0)g(0)922 2026 y(0)g(0)h(0)f(0)g(0)g(1)922
2082 y(0)g(0)h(0)f(0)g(0)g(0)1287 1770 y Fc(3)1287 1843 y(7)1287
1868 y(7)1287 1892 y(7)1287 1917 y(7)1287 1942 y(7)1287 1967
y(7)1287 1992 y(7)1287 2019 y(5)146 2159 y Fj(The)15 b(enco)q(ding)i(of)d
(the)i(graph)f(consists)g(of)g(the)g(follo)o(wing)h(steps.)k(W)l(e)15
b(assume)g(that)g(the)g(deco)q(der)75 2216 y(has)g(a)g(table)h(of)e(the)i
Fe(l)452 2223 y Fb(u)489 2216 y Fj(unique)h(lab)q(els)f(in)g(the)g(original)g
(graph)f Fe(G)p Fj(.)131 2297 y(1.)22 b(Determine)17 b(the)f(n)o(um)o(b)q(er)
h(of)f(bits)h Fg(vbits)f Fj(needed)i(to)e(enco)q(de)h(the)g(v)o(ertex)f(lab)q
(els)i(of)e(the)h(graph.)189 2354 y(First,)j(w)o(e)g(need)h(\(lg)8
b Fe(v)r Fj(\))20 b(bits)g(to)g(enco)q(de)h(the)f(n)o(um)o(b)q(er)h(of)e(v)o
(ertices)i Fe(v)g Fj(in)g(the)g(graph.)34 b(Then,)189 2410
y(enco)q(ding)16 b(the)f(lab)q(els)h(of)e(all)i Fe(v)g Fj(v)o(ertices)f
(requires)h(\()p Fe(v)9 b Fj(lg)f Fe(l)1177 2417 y Fb(u)1199
2410 y Fj(\))15 b(bits.)20 b(W)l(e)15 b(assume)f(the)h(v)o(ertices)g(are)189
2466 y(sp)q(eci\014ed)k(in)f(the)f(same)f(order)h(they)g(app)q(ear)h(in)f
(the)h(adjacency)f(matrix.)25 b(The)17 b(total)g(n)o(um)o(b)q(er)189
2523 y(of)d(bits)i(to)f(enco)q(de)h(the)f(v)o(ertex)g(lab)q(els)i(is)808
2604 y Fe(v)r(bits)41 b Fj(=)g(lg)9 b Fe(v)j Fj(+)e Fe(v)f
Fj(lg)g Fe(l)1234 2611 y Fb(u)944 2728 y Fk(236)p eop
%%Page: 237 7
237 6 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)735
103 y
 7564902 9669919 13419479 26641612 20984381 36311531 startTexFig
 735 103 a
%%BeginDocument: figures/mdleg.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ .886778 .624029 -.624029 .886778 283.163 599.569 ] concat
[
(shape)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 15.949 313.695 ] concat
240 247 287 277 Line
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1.08434 0 0 1.08434 95.105 283.334 ] concat
167 329 9 9 Elli
End

Begin %I Pict
[ 1 0 0 1 -211 0 ] concat

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
347 449 393 478 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ .907557 .593403 -.593403 .907557 492.889 658.665 ] concat
[
(shape)
] Text
End

Begin %I Pict
[ 1 0 0 1 5.42169 -2.16858 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 543.575 684.539 ] concat
[
(triangle)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
406 468 31 9 Elli
End

End %I eop

End %I eop

Begin %I Pict
[ 1 0 0 1 -206.663 -4.33734 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 542.491 625.985 ] concat
[
(square)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
399 413 23 9 Elli
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 273 646 ] concat
[
(x)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 259.925 620.563 ] concat
[
(on)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 15.949 313.695 ] concat
240 292 240 255 Line
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1.08434 0 0 1.08434 95.105 223.695 ] concat
167 329 9 9 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 272 585 ] concat
[
(y)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 259.925 560.563 ] concat
[
(on)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 15.949 253.695 ] concat
240 292 240 255 Line
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1.08434 0 0 1.08434 95.105 163.695 ] concat
167 329 9 9 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -63 78 ] concat
347 449 393 478 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ .907557 .593403 -.593403 .907557 281.889 539.665 ] concat
[
(shape)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 -77.626 50.1564 ] concat
406 468 31 9 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.18519 0 0 1.18519 331 563.741 ] concat
[
(rectangle)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 272 524 ] concat
[
(r)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 663 814 a Fj(Figure)g(3:)j(MDL)c(example)h(graph.)189 1002
y(F)l(or)j(the)h(example)g(in)h(Figure)f(3,)g Fe(v)i Fj(=)e(6,)h(and)f(w)o(e)
f(assume)h(that)f(there)h(are)f Fe(l)1602 1009 y Fb(u)1644
1002 y Fj(=)i(8)e(unique)189 1059 y(lab)q(els)g(in)g(the)g(original)g(graph.)
29 b(The)18 b(n)o(um)o(b)q(er)h(of)e(bits)i(needed)h(to)d(enco)q(de)i(these)g
(v)o(ertices)f(is)189 1115 y(lg)8 b(6)i(+)g(6)e(lg)g(8)13 b(=)g(20)p
Fe(:)p Fj(58)g(bits.)131 1219 y(2.)22 b(Determine)13 b(the)g(n)o(um)o(b)q(er)
g(of)f(bits)h Fg(rbits)f Fj(needed)i(to)e(enco)q(de)i(the)f(ro)o(ws)e(of)h
(the)h(adjacency)g(matrix)189 1276 y Fe(A)p Fj(.)20 b(T)o(ypically)l(,)d(in)g
(large)e(graphs,)g(a)g(single)i(v)o(ertex)e(has)h(edges)f(to)g(only)h(a)f
(small)i(p)q(ercen)o(tage)e(of)189 1332 y(the)f(v)o(ertices)g(in)h(the)f(en)o
(tire)h(graph.)k(Therefore,)14 b(a)g(t)o(ypical)h(ro)o(w)e(in)i(the)f
(adjacency)h(matrix)e(will)189 1389 y(ha)o(v)o(e)i(m)o(uc)o(h)g(few)o(er)g
(than)g Fe(v)i Fj(1s,)e(where)g Fe(v)i Fj(is)f(the)f(total)g(n)o(um)o(b)q(er)
h(of)f(v)o(ertices)g(in)h(the)g(graph.)k(W)l(e)189 1445 y(apply)15
b(a)f(v)m(arian)o(t)h(of)f(the)h(co)q(ding)h(sc)o(heme)f(used)g(b)o(y)f
(\(Quinlan)j(&)e(Riv)o(est,)g(1989\))e(to)h(enco)q(de)h(bit)189
1502 y(strings)i(with)h(length)h Fe(n)f Fj(consisting)g(of)f
Fe(k)i Fj(1s)e(and)h(\()p Fe(n)12 b Fd(\000)g Fe(k)q Fj(\))17
b(0s,)h(where)g Fe(k)g Fd(\034)f Fj(\()p Fe(n)12 b Fd(\000)g
Fe(k)q Fj(\).)27 b(In)18 b(our)189 1558 y(case,)g(ro)o(w)f
Fe(i)g Fj(\(1)f Fd(\024)i Fe(i)e Fd(\024)i Fe(v)r Fj(\))f(can)h(b)q(e)g
(represen)o(ted)g(as)g(a)f(bit)i(string)e(of)h(length)g Fe(v)i
Fj(con)o(taining)e Fe(k)1861 1565 y Fb(i)189 1615 y Fj(1s.)h(If)c(w)o(e)g
(let)h Fe(b)c Fj(=)h(max)605 1622 y Fb(i)626 1615 y Fe(k)650
1622 y Fb(i)664 1615 y Fj(,)i(then)g(the)g Fe(i)889 1598 y
Fb(th)939 1615 y Fj(ro)o(w)g(of)f(the)h(adjacency)h(matrix)f(can)g(b)q(e)h
(enco)q(ded)g(as)189 1671 y(follo)o(ws.)208 1790 y(\(a\))22
b(Enco)q(ding)16 b(the)f(v)m(alue)i(of)e Fe(k)762 1797 y Fb(i)790
1790 y Fj(requires)h(lg)q(\()p Fe(b)10 b Fj(+)g(1\))15 b(bits.)205
1876 y(\(b\))23 b(Giv)o(en)16 b(that)g(only)h Fe(k)646 1883
y Fb(i)676 1876 y Fj(1s)f(o)q(ccur)h(in)g(the)g(ro)o(w)e(bit)i(string)f(of)g
(length)h Fe(v)r Fj(,)f(only)1628 1829 y Fc(\020)1666 1868
y Fe(v)1659 1885 y(k)1683 1892 y Fb(i)1702 1829 y Fc(\021)1743
1876 y Fj(strings)289 1938 y(of)j(0s)h(and)g(1s)g(are)g(p)q(ossible.)37
b(Since)21 b(all)g(of)f(these)g(strings)g(ha)o(v)o(e)g(equal)h(probabilit)o
(y)g(of)289 2000 y(o)q(ccurrence,)c(lg)573 1953 y Fc(\020)610
1991 y Fe(v)603 2008 y(k)627 2015 y Fb(i)647 1953 y Fc(\021)688
2000 y Fj(bits)g(are)g(needed)h(to)e(enco)q(de)h(the)g(p)q(ositions)h(of)e
(1s)g(in)i(ro)o(w)e Fe(i)p Fj(.)24 b(The)289 2062 y(v)m(alue)16
b(of)f Fe(v)i Fj(is)e(kno)o(wn)g(from)g(the)g(v)o(ertex)g(enco)q(ding.)189
2181 y(Finally)l(,)j(w)o(e)e(need)h(an)f(additional)i(lg)q(\()p
Fe(b)10 b Fj(+)h(1\))16 b(bits)g(to)g(enco)q(de)h(the)g(n)o(um)o(b)q(er)f(of)
g(bits)h(needed)h(to)189 2237 y(sp)q(ecify)12 b(the)g(v)m(alue)h(of)e
Fe(k)596 2244 y Fb(i)621 2237 y Fj(for)g(eac)o(h)g(ro)o(w.)18
b(The)12 b(total)f(enco)q(ding)i(length)f(in)g(bits)g(for)f(the)h(adjacency)
189 2294 y(matrix)i(is)592 2423 y Fe(r)q(bits)41 b Fj(=)h(lg)q(\()p
Fe(b)9 b Fj(+)i(1\))e(+)1051 2370 y Fb(v)1030 2382 y Fc(X)1031
2473 y Fb(i)p Fq(=1)1097 2423 y Fj(lg)q(\()p Fe(b)h Fj(+)g(1\))f(+)i(lg)1366
2376 y Fc(\020)1403 2414 y Fe(v)1396 2431 y(k)1420 2438 y Fb(i)1439
2376 y Fc(\021)728 2565 y Fj(=)42 b(\()p Fe(v)11 b Fj(+)g(1\))d(lg\()p
Fe(b)h Fj(+)i(1\))1147 2513 y Fb(v)1127 2525 y Fc(X)1128 2616
y Fb(i)p Fq(=1)1194 2565 y Fj(lg)1238 2518 y Fc(\020)1275 2557
y Fe(v)1268 2574 y(k)1292 2581 y Fb(i)1311 2518 y Fc(\021)944
2728 y Fk(237)p eop
%%Page: 238 8
238 7 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)189 95 y Fj(F)l(or)i(the)i
(example)g(in)g(Figure)g(3,)f Fe(b)g Fj(=)h(2,)g(and)f(the)h(n)o(um)o(b)q(er)
f(of)g(bits)h(needed)h(to)d(enco)q(de)j(the)189 157 y(adjacency)11
b(matrix)g(is)h(\(7)c(lg)f(3\))r(+)r(lg)795 110 y Fc(\020)825
148 y Fj(6)825 165 y(2)853 110 y Fc(\021)880 157 y Fj(+)r(lg)961
110 y Fc(\020)992 148 y Fj(6)992 165 y(0)1020 110 y Fc(\021)1047
157 y Fj(+)r(lg)1128 110 y Fc(\020)1158 148 y Fj(6)1158 165
y(2)1186 110 y Fc(\021)1213 157 y Fj(+)r(lg)1294 110 y Fc(\020)1325
148 y Fj(6)1325 165 y(0)1353 110 y Fc(\021)1380 157 y Fj(+)r(lg)1461
110 y Fc(\020)1491 148 y Fj(6)1491 165 y(1)1520 110 y Fc(\021)1546
157 y Fj(+)r(lg)1627 110 y Fc(\020)1658 148 y Fj(6)1658 165
y(0)1686 110 y Fc(\021)1723 157 y Fj(=)13 b(21)p Fe(:)p Fj(49)189
219 y(bits.)131 308 y(3.)22 b(Determine)d(the)g(n)o(um)o(b)q(er)h(of)f(bits)g
Fg(ebits)g Fj(needed)h(to)f(enco)q(de)h(the)f(edges)g(represen)o(ted)h(b)o(y)
f(the)189 364 y(en)o(tries)e Fe(A)p Fj([)p Fe(i;)8 b(j)s Fj(])13
b(=)i(1)i(of)f(the)h(adjacency)g(matrix)g Fe(A)p Fj(.)25 b(The)17
b(n)o(um)o(b)q(er)g(of)f(bits)i(needed)g(to)e(enco)q(de)189
421 y(en)o(try)i Fe(A)p Fj([)p Fe(i;)8 b(j)s Fj(])16 b(is)j(\(lg)8
b Fe(m)p Fj(\))k(+)h Fe(e)p Fj(\()p Fe(i;)8 b(j)s Fj(\)[1)h(+)k(lg)8
b Fe(l)940 428 y Fb(u)963 421 y Fj(],)18 b(where)h Fe(e)p Fj(\()p
Fe(i;)8 b(j)s Fj(\))16 b(is)j(the)g(actual)g(n)o(um)o(b)q(er)g(of)f(edges)189
477 y(b)q(et)o(w)o(een)12 b(v)o(ertex)g Fe(i)g Fj(and)g Fe(j)j
Fj(in)e(the)g(graph)f(and)g Fe(m)h Fj(=)g(max)1165 484 y Fb(i;j)1213
477 y Fe(e)p Fj(\()p Fe(i;)8 b(j)s Fj(\).)16 b(The)d(\(lg)8
b Fe(m)p Fj(\))k(bits)h(are)f(needed)189 534 y(to)i(enco)q(de)i(the)f(n)o(um)
o(b)q(er)g(of)g(edges)g(b)q(et)o(w)o(een)g(v)o(ertex)f Fe(i)h
Fj(and)g Fe(j)s Fj(,)f(and)h([1)9 b(+)h(lg)e Fe(l)1525 541
y Fb(u)1547 534 y Fj(])15 b(bits)g(are)g(needed)189 590 y(p)q(er)g(edge)h(to)
f(enco)q(de)h(the)f(edge)h(lab)q(el)h(and)e(whether)h(the)f(edge)h(is)f
(directed)i(or)e(undirected.)21 b(In)189 646 y(addition)c(to)f(enco)q(ding)h
(the)g(edges,)f(w)o(e)g(need)h(to)f(enco)q(de)h(the)f(n)o(um)o(b)q(er)h(of)f
(bits)h(\(lg)8 b Fe(m)p Fj(\))16 b(needed)189 703 y(to)e(sp)q(ecify)j(the)e
(n)o(um)o(b)q(er)h(of)e(edges)i(p)q(er)f(en)o(try)l(.)20 b(The)c(total)e
(enco)q(ding)j(of)e(the)g(edges)g(is)549 819 y Fe(ebits)42
b Fj(=)g(lg)8 b Fe(m)i Fj(+)921 766 y Fb(v)901 778 y Fc(X)902
870 y Fb(i)p Fq(=1)990 766 y Fb(v)969 778 y Fc(X)968 870 y
Fb(j)r Fq(=1)1037 819 y Fj(lg)f Fe(m)h Fj(+)g Fe(e)p Fj(\()p
Fe(i;)e(j)s Fj(\)[1)f(+)k(lg)d Fe(l)1438 826 y Fb(u)1460 819
y Fj(])685 968 y(=)42 b(lg)8 b Fe(m)i Fj(+)h Fe(e)p Fj(\(1)e(+)i(lg)d
Fe(l)1075 975 y Fb(u)1097 968 y Fj(\))i(+)1191 915 y Fb(v)1171
928 y Fc(X)1172 1019 y Fb(i)p Fq(=1)1260 915 y Fb(v)1239 928
y Fc(X)1238 1019 y Fb(j)r Fq(=1)1307 968 y Fe(A)p Fj([)p Fe(i;)e(j)s
Fj(])g(lg)e Fe(m)685 1080 y Fj(=)42 b Fe(e)p Fj(\(1)9 b(+)i(lg)d
Fe(l)936 1087 y Fb(u)958 1080 y Fj(\))i(+)h(\()p Fe(K)h Fj(+)f(1\))d(lg)f
Fe(m)189 1168 y Fj(where)k Fe(e)f Fj(is)h(the)g(n)o(um)o(b)q(er)g(of)f(edges)
h(in)h(the)f(graph,)g(and)f Fe(K)k Fj(is)d(the)g(n)o(um)o(b)q(er)g(of)f(1s)g
(in)i(the)f(adjacency)189 1225 y(matrix)i Fe(A)p Fj(.)20 b(F)l(or)13
b(the)i(example)f(in)h(Figure)g(3,)e Fe(e)g Fj(=)g(5,)h Fe(K)h
Fj(=)e(5,)h Fe(m)e Fj(=)h(1,)h Fe(l)1428 1232 y Fb(u)1463 1225
y Fj(=)f(8,)g(and)h(the)h(n)o(um)o(b)q(er)189 1281 y(of)f(bits)i(needed)h(to)
d(enco)q(de)i(the)g(edges)f(is)h(5\(1)9 b(+)i(lg)d(8\))i(+)g(6)e(lg)g(1)k(=)h
(20.)146 1371 y(The)k(total)f(enco)q(ding)j(of)e(the)g(graph)g(tak)o(es)f(\()
p Fe(v)r(bits)11 b Fj(+)h Fe(r)q(bits)f Fj(+)g Fe(ebits)p Fj(\))17
b(bits.)26 b(F)l(or)17 b(the)g(example)h(in)75 1427 y(Figure)d(3,)g(this)h(v)
m(alue)g(is)g(62)p Fe(:)p Fj(07)d(bits.)146 1484 y(Both)22
b(the)g(input)i(graph)e(and)g(disco)o(v)o(ered)h(substructure)g(can)f(b)q(e)h
(enco)q(ded)h(using)f(the)f(ab)q(o)o(v)o(e)75 1540 y(sc)o(heme.)i(After)16
b(a)g(substructure)h(is)g(disco)o(v)o(ered,)g(eac)o(h)g(instance)g(of)f(the)g
(substructure)h(in)g(the)g(input)75 1597 y(graph)h(is)g(replaced)i(b)o(y)e(a)
f(single)j(v)o(ertex)d(represen)o(ting)i(the)f(en)o(tire)g(substructure.)29
b(The)18 b(disco)o(v)o(ered)75 1653 y(substructure)12 b(is)h(represen)o(ted)g
(in)g Fe(I)t Fj(\()p Fe(S)s Fj(\))d(bits,)j(and)f(the)h(graph)f(after)f(the)h
(substructure)h(replacemen)o(t)f(is)75 1710 y(represen)o(ted)i(in)h
Fe(I)t Fj(\()p Fe(G)p Fd(j)p Fe(S)s Fj(\))c(bits.)20 b Fh(Subdue)14
b Fj(searc)o(hes)g(for)f(the)h(substructure)g Fe(S)i Fj(in)e(graph)g
Fe(G)f Fj(minimizing)75 1766 y Fe(I)t Fj(\()p Fe(S)s Fj(\))8
b(+)j Fe(I)t Fj(\()p Fe(G)p Fd(j)p Fe(S)s Fj(\).)75 1896 y
Fl(5.)24 b(Inexact)18 b(Graph)h(Matc)n(h)75 1983 y Fj(Although)d(exact)f
(structure)g(matc)o(h)g(can)g(b)q(e)h(used)g(to)f(\014nd)h(man)o(y)e(in)o
(teresting)i(substructures,)f(man)o(y)75 2039 y(of)j(the)g(most)f(in)o
(teresting)i(substructures)f(sho)o(w)f(up)i(in)g(a)f(sligh)o(tly)h
(di\013eren)o(t)f(form)f(throughout)h(the)75 2096 y(data.)30
b(These)19 b(di\013erences)h(ma)o(y)e(b)q(e)h(due)h(to)e(noise)h(and)g
(distortion,)h(or)e(ma)o(y)g(just)h(illustrate)g(sligh)o(t)75
2152 y(di\013erences)g(b)q(et)o(w)o(een)f(instances)g(of)f(the)h(same)g
(general)g(class)g(of)f(structures.)27 b(Consider)18 b(the)g(image)75
2208 y(sho)o(wn)c(in)h(Figure)f(9.)20 b(The)14 b(p)q(encil)j(and)d(the)g(cub)
q(e)i(w)o(ould)e(mak)o(e)g(ideal)i(substructures)e(in)h(the)f(picture,)75
2265 y(but)f(an)g(exact)g(matc)o(h)f(algorithm)h(ma)o(y)f(not)h(consider)h
(these)f(as)g(strong)f(substructures,)h(b)q(ecause)h(they)75
2321 y(rarely)h(o)q(ccur)h(in)g(the)f(same)g(form)g(and)g(lev)o(el)h(of)f
(detail)i(throughout)d(the)h(picture.)146 2378 y(Giv)o(en)c(an)g(input)i
(graph)e(and)g(a)g(set)g(of)g(de\014ned)h(substructures,)g(w)o(e)f(w)o(an)o
(t)f(to)h(\014nd)h(those)f(subgraphs)75 2434 y(of)f(the)h(input)g(graph)g
(that)e(most)h(closely)i(resem)o(ble)f(the)g(giv)o(en)g(substructures.)18
b(F)l(urthermore,)11 b(w)o(e)f(w)o(an)o(t)75 2491 y(to)k(asso)q(ciate)g(a)g
(distance)h(measure)g(b)q(et)o(w)o(een)g(a)f(pair)g(of)g(graphs)g(consisting)
i(of)e(a)g(giv)o(en)h(substructure)75 2547 y(and)h(a)g(subgraph)g(of)g(the)g
(input)h(graph.)22 b(W)l(e)16 b(adopt)g(the)g(approac)o(h)f(to)h(inexact)g
(graph)g(matc)o(h)f(giv)o(en)75 2604 y(b)o(y)g(Bunk)o(e)h(and)f(Allermann)i
(\(Bunk)o(e)e(&)h(Allermann,)g(1983\).)944 2728 y Fk(238)p
eop
%%Page: 239 9
239 8 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)371
103 y
 19076710 9735700 9538355 30654300 28615065 40390000 startTexFig
 371 103 a
%%BeginDocument: figures/im.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 310 282 ] concat
101 401 10 10 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 430 282 ] concat
101 401 10 10 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 370 213 ] concat
101 401 10 10 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 360 203 ] concat
51 470 101 421 Line
End

Begin %I Line
1 1 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 360 203 ] concat
121 421 161 470 Line
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 95 270 ] concat
101 401 10 10 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 215 270 ] concat
101 401 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 528 687 ] concat
[
(4)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 468 618 ] concat
[
(5)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 193 675 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 314 675 ] concat
[
(2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 407 687 ] concat
[
(3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 191 694 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 313 694 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 406 707 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 467 596 ] concat
[
(B)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 527 707 ] concat
[
(A)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 418 657 ] concat
[
(a)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 510 653 ] concat
[
(b)
] Text
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
58 478
70 489
144 489
157 478
4 BSpl
End

Begin %I BSpl
1 1 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 -1 148 1143 ] concat
58 478
70 489
144 489
157 478
4 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 247 703 ] concat
[
(a)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 249 647 ] concat
[
(b)
] Text
End

Begin %I Pict
/Courier-Bold 12 SetF

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 242 761 ] concat
[
(g)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 248 755 ] concat
[
(1)
] Text
End

End %I eop

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 148 197 ] concat
89 547 110 567 Rect
End

End %I eop

Begin %I Pict
/Courier-Bold 12 SetF

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 461 761 ] concat
[
(g)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 467 756 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Rect
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 367 197 ] concat
89 547 110 567 Rect
End

End %I eop

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 364 209 ] concat
58 478
70 489
144 489
157 478
4 BSpl
End

Begin %I BSpl
1 1 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 -1 362 1159 ] concat
58 478
70 489
144 489
157 478
4 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 466 714 ] concat
[
(b)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 464 665 ] concat
[
(a)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 577 818 a Fj(Figure)f(4:)20 b(Tw)o(o)14 b(similar)i(graphs)f
Fe(g)1196 825 y Fq(1)1231 818 y Fj(and)g Fe(g)1341 825 y Fq(2)1361
818 y Fj(.)146 1033 y(In)c(this)g(inexact)g(matc)o(h)f(approac)o(h,)h(eac)o
(h)g(distortion)g(of)f(a)g(graph)g(is)i(assigned)f(a)f(cost.)18
b(A)11 b(distortion)75 1089 y(is)17 b(describ)q(ed)h(in)f(terms)e(of)h(basic)
h(transformations)d(suc)o(h)j(as)e(deletion,)j(insertion,)f(and)f
(substitution)75 1145 y(of)d(v)o(ertices)h(and)f(edges.)20
b(The)14 b(distortion)f(costs)g(can)h(b)q(e)g(determined)h(b)o(y)e(the)h
(user)f(to)g(bias)h(the)g(matc)o(h)75 1202 y(for)h(or)f(against)h(particular)
h(t)o(yp)q(es)f(of)g(distortions.)146 1274 y(An)j(inexact)g(graph)g(matc)o(h)
f(b)q(et)o(w)o(een)h(t)o(w)o(o)f(graphs)g Fe(g)1093 1281 y
Fq(1)1130 1274 y Fj(and)h Fe(g)1243 1281 y Fq(2)1281 1274 y
Fj(maps)f Fe(g)1424 1281 y Fq(1)1461 1274 y Fj(to)h Fe(g)1542
1281 y Fq(2)1579 1274 y Fj(suc)o(h)g(that)f Fe(g)1807 1281
y Fq(2)1844 1274 y Fj(is)75 1330 y(in)o(terpreted)i(as)g(a)f(distorted)h(v)o
(ersion)g(of)f Fe(g)844 1337 y Fq(1)863 1330 y Fj(.)31 b(F)l(ormally)l(,)19
b(an)g(inexact)g(graph)g(matc)o(h)f(is)h(a)f(mapping)75 1387
y Fe(f)h Fj(:)13 b Fe(N)179 1394 y Fq(1)212 1387 y Fd(!)i Fe(N)309
1394 y Fq(2)338 1387 y Fd([)c(f)p Fe(\025)p Fd(g)p Fj(,)k(where)h
Fe(N)649 1394 y Fq(1)684 1387 y Fj(and)g Fe(N)810 1394 y Fq(2)845
1387 y Fj(are)g(the)g(sets)g(of)f(v)o(ertices)h(of)g Fe(g)1383
1394 y Fq(1)1418 1387 y Fj(and)g Fe(g)1529 1394 y Fq(2)1548
1387 y Fj(,)g(resp)q(ectiv)o(ely)l(.)24 b(A)75 1443 y(v)o(ertex)10
b Fe(v)k Fd(2)f Fe(N)324 1450 y Fq(1)354 1443 y Fj(that)d(is)h(mapp)q(ed)g
(to)f Fe(\025)f Fj(\(i.e.,)i Fe(f)5 b Fj(\()p Fe(v)r Fj(\))12
b(=)h Fe(\025)p Fj(\))d(is)h(deleted.)19 b(That)10 b(is,)i(it)e(has)h(no)f
(corresp)q(onding)75 1500 y(v)o(ertex)i(in)i Fe(g)283 1507
y Fq(2)302 1500 y Fj(.)19 b(Giv)o(en)14 b(a)e(set)h(of)f(particular)i
(distortion)f(costs)f(as)g(discussed)j(ab)q(o)o(v)o(e,)d(w)o(e)h(de\014ne)h
(the)e(cost)75 1556 y(of)h(an)h(inexact)h(graph)e(matc)o(h)h
Fe(cost)p Fj(\()p Fe(f)5 b Fj(\),)13 b(as)h(the)g(sum)g(of)f(the)h(cost)g(of)
f(the)h(individual)j(transformations)75 1613 y(resulting)c(from)f
Fe(f)5 b Fj(,)13 b(and)f(w)o(e)h(de\014ne)g Fe(matchcost)p
Fj(\()p Fe(g)940 1620 y Fq(1)960 1613 y Fe(;)8 b(g)1003 1620
y Fq(2)1021 1613 y Fj(\))13 b(as)f(the)g(v)m(alue)i(of)e(the)g(least-cost)g
(function)i(that)75 1669 y(maps)h(graph)g Fe(g)345 1676 y Fq(1)379
1669 y Fj(on)o(to)g(graph)g Fe(g)633 1676 y Fq(2)652 1669 y
Fj(.)146 1741 y(Giv)o(en)g Fe(g)299 1748 y Fq(1)319 1741 y
Fj(,)g Fe(g)369 1748 y Fq(2)388 1741 y Fj(,)g(and)h(a)f(set)g(of)g
(distortion)h(costs,)f(the)g(actual)h(computation)f(of)g Fe(matchcost)p
Fj(\()p Fe(g)1776 1748 y Fq(1)1796 1741 y Fe(;)8 b(g)1839 1748
y Fq(2)1857 1741 y Fj(\))75 1798 y(can)15 b(b)q(e)g(determined)h(using)f(a)g
(tree)f(searc)o(h)h(pro)q(cedure.)20 b(A)15 b(state)f(in)h(the)g(searc)o(h)f
(tree)h(corresp)q(onds)g(to)75 1854 y(a)i(partial)h(matc)o(h)f(that)g(maps)h
(a)f(subset)h(of)f(the)h(v)o(ertices)g(of)f Fe(g)1187 1861
y Fq(1)1224 1854 y Fj(to)g(a)g(subset)h(of)f(the)h(v)o(ertices)g(in)g
Fe(g)1843 1861 y Fq(2)1862 1854 y Fj(.)75 1911 y(Initially)l(,)e(w)o(e)e
(start)f(with)h(an)g(empt)o(y)f(mapping)i(at)e(the)h(ro)q(ot)f(of)g(the)h
(searc)o(h)g(tree.)19 b(Expanding)c(a)f(state)75 1967 y(corresp)q(onds)e(to)f
(adding)h(a)f(pair)h(of)f(v)o(ertices,)h(one)f(from)g Fe(g)1069
1974 y Fq(1)1100 1967 y Fj(and)h(one)f(from)g Fe(g)1390 1974
y Fq(2)1409 1967 y Fj(,)h(to)f(the)g(partial)h(mapping)75 2024
y(constructed)i(so)f(far.)19 b(A)14 b(\014nal)h(state)e(in)h(the)g(searc)o(h)
g(tree)f(is)i(a)e(matc)o(h)h(that)f(maps)g(all)i(v)o(ertices)f(of)f
Fe(g)1801 2031 y Fq(1)1835 2024 y Fj(to)75 2080 y Fe(g)97 2087
y Fq(2)132 2080 y Fj(or)i(to)h Fe(\025)p Fj(.)21 b(The)16 b(complete)g(searc)
o(h)g(tree)g(of)f(the)h(example)h(in)f(Figure)g(4)g(is)g(sho)o(wn)g(in)g
(Figure)g(5.)22 b(F)l(or)75 2136 y(this)17 b(example)f(w)o(e)g(assign)h(a)e
(v)m(alue)j(of)d(1)h(to)g(eac)o(h)g(distortion)g(cost.)22 b(The)17
b(n)o(um)o(b)q(ers)f(in)h(circles)h(in)f(this)75 2193 y(\014gure)h(represen)o
(t)g(the)g(cost)f(of)g(a)h(state.)27 b(As)17 b(w)o(e)h(are)g(ev)o(en)o
(tually)g(in)o(terested)h(in)f(the)g(mapping)h(with)75 2249
y(minim)o(um)f(cost,)e(eac)o(h)h(state)f(in)h(the)g(searc)o(h)f(tree)h(gets)f
(assigned)h(the)g(cost)f(of)g(the)h(partial)g(mapping)75 2306
y(that)i(it)h(represen)o(ts.)35 b(Th)o(us)19 b(the)h(goal)g(state)f(to)h(b)q
(e)g(found)g(b)o(y)g(our)g(tree)g(searc)o(h)g(pro)q(cedure)g(is)h(the)75
2362 y(\014nal)c(state)e(with)h(minim)o(um)h(cost)f(among)f(all)i(\014nal)g
(states.)k(F)l(rom)15 b(Figure)i(5)e(w)o(e)h(conclude)i(that)d(the)75
2419 y(minim)o(um)e(cost)f(inexact)h(graph)f(matc)o(h)f(of)h
Fe(g)852 2426 y Fq(1)883 2419 y Fj(and)h Fe(g)991 2426 y Fq(2)1022
2419 y Fj(is)g(giv)o(en)g(b)o(y)f(the)g(mapping)h Fe(f)5 b
Fj(\(1\))12 b(=)h(4,)f Fe(f)5 b Fj(\(2\))12 b(=)h(3.)75 2475
y(The)i(cost)g(of)g(this)h(mapping)f(is)h(4.)146 2547 y(Giv)o(en)g(graphs)h
Fe(g)449 2554 y Fq(1)484 2547 y Fj(with)g Fe(n)g Fj(v)o(ertices)g(and)f
Fe(g)910 2554 y Fq(2)946 2547 y Fj(with)h Fe(m)f Fj(v)o(ertices,)h
Fe(m)d Fd(\025)h Fe(n)p Fj(,)i(the)g(complexit)o(y)g(of)f(the)75
2604 y(full)i(inexact)f(graph)e(matc)o(h)h(is)h Fe(O)q Fj(\()p
Fe(n)711 2587 y Fb(m)p Fq(+1)789 2604 y Fj(\).)23 b(Because)17
b(this)g(routine)f(is)h(used)g(hea)o(vily)g(throughout)f(the)944
2728 y Fk(239)p eop
%%Page: 240 10
240 9 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)192 103 y
 24733942 8683192 7433338 27365212 32167280 36048404 startTexFig
 192
103 a
%%BeginDocument: figures/tree.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 185.627 618.5 ] concat
[
(\(1, 3\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 275.627 617.5 ] concat
[
(\(1, 4\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 385.627 619.5 ] concat
[
(\(1, 5\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 505.627 619.5 ] concat
[
(\(1,  \))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 145.627 559.5 ] concat
[
(\(2,4\) \(2,5\) \(2, \) \(2,3\) \(2,5\) \(2, \) \(2,3\) \(2,4\) \(2, \) \(2,3\) \(2,4\) \(2,5\) \(2, \))
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
210 407 62 360 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
210 407 151 358 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
219 408 257 359 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
42 348 13 303 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
56 347 56 304 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
67 348 88 304 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
146 346 127 302 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
154 345 154 305 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
162 344 192 306 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
254 347 233 303 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
262 345 262 302 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
271 346 303 302 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
368 346 342 302 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
375 348 370 304 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
388 344 407 305 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
396 346 438 307 Line
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 138.627 402.5 ] concat
93 212 6 7 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 228.627 618.5 ] concat
[
(1)
] Text
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 225.627 399.5 ] concat
93 212 6 7 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 316.627 615.5 ] concat
[
(0)
] Text
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 66.6265 321.5 ] concat
93 212 6 7 Elli
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 101.627 320.5 ] concat
93 212 6 7 Elli
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 455.627 402.5 ] concat
93 212 6 7 Elli
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 336.627 401.5 ] concat
93 212 6 7 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 426.627 617.5 ] concat
[
(1)
] Text
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 172.627 321.5 ] concat
93 212 6 7 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 142.627 261.5 ] concat
220 410 382 359 Line
End

Begin %I Pict
[ .222222 0 0 .222222 450.482 522.891 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
204 246 222 210 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
213 228 204 210 Line
End

End %I eop

Begin %I Pict
[ .222222 0 0 .222222 158.036 463.578 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
204 246 222 210 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
213 228 204 210 Line
End

End %I eop

Begin %I Pict
[ .222222 0 0 .222222 265.385 463.578 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
204 246 222 210 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
213 228 204 210 Line
End

End %I eop

Begin %I Pict
[ .222222 0 0 .222222 373.819 463.578 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
204 246 222 210 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
213 228 204 210 Line
End

End %I eop

Begin %I Pict
[ .222222 0 0 .222222 519.12 463.578 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
204 246 222 210 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
213 228 204 210 Line
End

End %I eop

Begin %I Pict
[ .27027 0 0 .27027 281.43 571.02 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
139 200 9 18 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 127.952 171.325 ] concat
148 219 130 182 Line
End

End %I eop

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 18 326 ] concat
215 208 8 8 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 122 325 ] concat
215 208 8 8 Elli
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 209.627 321.5 ] concat
93 212 6 7 Elli
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 281.627 321.5 ] concat
93 212 6 7 Elli
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 316.627 321.5 ] concat
93 212 6 7 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 230 325 ] concat
215 208 8 8 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 304 324 ] concat
215 208 8 8 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 376 325 ] concat
215 208 8 8 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 268 325 ] concat
215 208 8 8 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 341 324 ] concat
215 208 8 8 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 156.626 537.5 ] concat
[
(7)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 191.627 536.5 ] concat
[
(6)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 227 538 ] concat
[
(10)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 262.627 537.5 ] concat
[
(3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299.627 537.5 ] concat
[
(6)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 334 537 ] concat
[
(9)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 371.627 537.5 ] concat
[
(7)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 406.627 537.5 ] concat
[
(7)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 439 537 ] concat
[
(10)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 480 537 ] concat
[
(9)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 513 536 ] concat
[
(10)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 553 536 ] concat
[
(9)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 585 537 ] concat
[
(11)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 545.627 618.5 ] concat
[
(1)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 294 751 a Fj(Figure)f(5:)20 b(Searc)o(h)15 b(tree)g(for)g(computing)g(matc)o
(hcost\()p Fe(g)1265 758 y Fq(1)1283 751 y Fj(,)p Fe(g)1318
758 y Fq(2)1337 751 y Fj(\))g(from)g(Figure)g(4.)75 947 y(disco)o(v)o(ery)f
(and)g(ev)m(aluation)i(pro)q(cess,)e(the)g(complexit)o(y)h(of)f(the)g
(algorithm)g(can)g(signi\014can)o(tly)i(degrade)75 1003 y(the)f(p)q
(erformance)h(of)e(the)i(system.)146 1065 y(T)l(o)f(impro)o(v)o(e)h(the)f(p)q
(erformance)h(of)f(the)h(inexact)g(graph)g(matc)o(h)f(algorithm,)g(w)o(e)h
(extend)g(Bunk)o(e's)75 1121 y(approac)o(h)d(b)o(y)g(applying)i(a)e(branc)o
(h-and-b)q(ound)i(searc)o(h)e(to)g(the)g(tree.)19 b(The)14
b(cost)f(from)f(the)i(ro)q(ot)e(of)h(the)75 1177 y(tree)j(to)f(a)h(giv)o(en)g
(no)q(de)h(is)g(computed)f(as)g(describ)q(ed)h(ab)q(o)o(v)o(e.)22
b(No)q(des)17 b(are)e(considered)j(for)d(pairings)i(in)75 1234
y(order)d(from)g(the)h(most)e(hea)o(vily)j(connected)g(v)o(ertex)e(to)g(the)g
(least)h(connected,)g(as)f(this)h(constrains)g(the)75 1290
y(remaining)20 b(matc)o(h.)29 b(Because)19 b(branc)o(h-and-b)q(ound)h(searc)o
(h)f(guaran)o(tees)f(an)g(optimal)h(solution,)h(the)75 1347
y(searc)o(h)15 b(ends)h(as)f(so)q(on)g(as)f(the)i(\014rst)f(complete)g
(mapping)h(is)g(found.)146 1408 y(In)k(addition,)h(the)e(user)h(can)g(place)g
(a)f(limit)i(on)e(the)h(n)o(um)o(b)q(er)g(of)f(searc)o(h)g(no)q(des)h
(considered)h(b)o(y)75 1465 y(the)f(branc)o(h-and-b)q(ound)h(pro)q(cedure)f
(\(de\014ned)h(as)e(a)g(function)i(of)e(the)g(size)i(of)e(the)g(input)i
(graphs\).)75 1521 y(Once)15 b(the)f(n)o(um)o(b)q(er)g(of)g(no)q(des)g
(expanded)h(in)g(the)f(searc)o(h)g(tree)g(reac)o(hes)g(the)g(de\014ned)h
(limit,)g(the)f(searc)o(h)75 1577 y(resorts)f(to)g(hill)i(clim)o(bing)h
(using)e(the)g(cost)f(of)h(the)f(mapping)i(so)e(far)g(as)g(the)h(measure)g
(for)f(c)o(ho)q(osing)h(the)75 1634 y(b)q(est)i(no)q(de)g(at)g(a)f(giv)o(en)h
(lev)o(el.)23 b(By)16 b(de\014ning)h(suc)o(h)f(a)g(limit,)h(signi\014can)o(t)
g(sp)q(eedup)g(can)f(b)q(e)g(realized)i(at)75 1690 y(the)d(exp)q(ense)i(of)d
(accuracy)i(for)e(the)i(computed)f(matc)o(h)g(cost.)146 1752
y(Another)i(approac)o(h)h(to)f(inexact)i(graph)f(matc)o(h)f(w)o(ould)h(b)q(e)
h(to)e(enco)q(de)i(the)f(di\013erence)i(b)q(et)o(w)o(een)75
1808 y(t)o(w)o(o)13 b(graphs)i(using)h(the)e(MDL)h(principle.)23
b(Smaller)15 b(enco)q(dings)i(w)o(ould)e(indicate)h(a)f(lo)o(w)o(er)f(matc)o
(h)g(cost)75 1865 y(b)q(et)o(w)o(een)i(the)f(t)o(w)o(o)f(graphs.)19
b(W)l(e)c(lea)o(v)o(e)h(this)f(as)g(a)g(future)g(researc)o(h)g(direction.)75
1999 y Fl(6.)24 b(Guiding)18 b(the)g(Disco)n(v)n(ery)g(Pro)r(cess)g(with)h
(Bac)n(kground)g(Kno)n(wledge)75 2091 y Fj(Although)h(the)f(principle)j(of)d
(minim)o(um)i(description)g(length)f(is)f(useful)i(for)d(disco)o(v)o(ering)j
(substruc-)75 2147 y(tures)16 b(that)g(maximize)h(compression)g(of)e(the)i
(data,)e(scien)o(tists)i(ma)o(y)f(realize)h(more)f(b)q(ene\014t)h(from)f(the)
75 2204 y(disco)o(v)o(ery)c(of)g(substructures)g(that)g(exhibit)h(other)f
(domain-sp)q(eci\014c)j(and)d(domain-indep)q(endent)i(c)o(har-)75
2260 y(acteristics.)146 2321 y(T)l(o)i(mak)o(e)h Fh(Subdue)g
Fj(more)g(p)q(o)o(w)o(erful)g(across)f(a)h(wide)h(v)m(ariet)o(y)f(of)g
(domains,)g(w)o(e)g(ha)o(v)o(e)f(added)i(the)75 2378 y(abilit)o(y)e(to)e
(guide)i(the)e(disco)o(v)o(ery)h(pro)q(cess)g(with)g(bac)o(kground)g(kno)o
(wledge.)20 b(Although)15 b(the)g(minim)o(um)75 2434 y(description)e(length)g
(principle)h(still)g(driv)o(es)e(the)g(disco)o(v)o(ery)g(pro)q(cess,)g(the)g
(bac)o(kground)g(kno)o(wledge)g(can)75 2491 y(b)q(e)k(used)f(to)g(input)h(a)f
(bias)g(to)o(w)o(ard)f(certain)h(t)o(yp)q(es)g(of)g(substructures.)20
b(This)c(bac)o(kground)e(kno)o(wledge)75 2547 y(is)21 b(enco)q(ded)g(in)h
(the)e(form)g(of)f(rules)j(for)d(ev)m(aluating)j(substructures,)f(and)g(can)f
(represen)o(t)g(domain-)75 2604 y(indep)q(enden)o(t)15 b(or)e(domain-dep)q
(enden)o(t)i(rules.)20 b(Eac)o(h)12 b(time)i(a)e(substructure)h(is)h(ev)m
(aluated,)g(these)f(input)944 2728 y Fk(240)p eop
%%Page: 241 11
241 10 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)75
95 y Fj(rules)21 b(are)f(used)h(to)e(determine)j(the)e(v)m(alue)i(of)d(the)i
(substructure)f(under)h(consideration.)36 b(Because)75 152
y(only)17 b(the)f(most-fa)o(v)o(ored)e(substructures)i(are)g(k)o(ept)f(and)i
(expanded,)f(these)h(rules)f(bias)h(the)f(disco)o(v)o(ery)75
208 y(pro)q(cess)f(of)g(the)h(system.)146 267 y(Eac)o(h)g(bac)o(kground)h
(rule)g(can)g(b)q(e)h(assigned)f(a)f(p)q(ositiv)o(e,)i(zero,)f(or)f(negativ)o
(e)h(w)o(eigh)o(t,)f(that)g(biases)75 323 y(the)i(pro)q(cedure)g(to)o(w)o
(ard)e(a)h(t)o(yp)q(e)g(of)g(substructure,)h(eliminates)h(the)f(use)g(of)f
(the)g(rule,)i(or)e(biases)h(the)75 380 y(pro)q(cedure)h(a)o(w)o(a)o(y)d
(from)i(a)g(t)o(yp)q(e)g(of)f(substructure,)i(resp)q(ectiv)o(ely)l(.)30
b(The)19 b(v)m(alue)g(of)e(a)h(substructure)g(is)75 436 y(de\014ned)j(as)f
(the)g(description)i(length)f(\(DL\))e(of)h(the)g(input)h(graph)f(using)h
(the)f(substructure)g(m)o(ulti-)75 493 y(plied)g(b)o(y)e(the)g(w)o(eigh)o
(ted)g(v)m(alue)h(of)e(eac)o(h)h(bac)o(kground)g(rule)h(from)e(a)g(set)h(of)f
(rules)i Fe(R)f Fj(applied)i(to)d(the)75 549 y(substructure.)614
706 y Fe(v)r(al)q(ue)p Fj(\()p Fe(s)p Fj(\))12 b(=)h Fe(D)q(L)p
Fj(\()p Fe(G;)8 b(s)p Fj(\))g Fd(\002)1087 649 y Fi(j)o Fb(R)p
Fi(j)1083 666 y Fc(Y)1079 757 y Fb(r)q Fq(=1)1148 706 y Fj(rule)1224
713 y Fb(r)1243 706 y Fj(\()p Fe(s)p Fj(\))1300 688 y Fb(e)1316
692 y Fa(r)1817 706 y Fj(\(1\))146 835 y(Three)k(domain-indep)q(enden)o(t)j
(heuristics)e(that)e(ha)o(v)o(e)h(b)q(een)h(incorp)q(orated)g(as)e(rules)i
(in)o(to)f(the)g Fh(Sub-)75 891 y(due)j Fj(system)f(are)g(compactness,)g
(connectivit)o(y)l(,)i(and)f(co)o(v)o(erage.)j(F)l(or)c(the)h(de\014nitions)h
(of)e(these)h(rules,)75 947 y(w)o(e)k(will)j(let)e Fe(G)f Fj(represen)o(t)h
(the)g(input)h(graph,)f Fe(s)g Fj(represen)o(t)g(a)f(substructure)h(in)h(the)
e(graph,)i(and)e Fe(I)75 1004 y Fj(represen)o(t)h(the)h(set)f(of)g(instances)
h(of)f(the)g(substructure)h Fe(s)g Fj(in)g Fe(G)p Fj(.)35 b(The)21
b(instance)g(w)o(eigh)o(t)f Fe(w)h Fj(of)f(an)75 1060 y(instance)c
Fe(i)c Fd(2)h Fe(I)19 b Fj(of)c(a)g(substructure)g Fe(s)g Fj(is)h(de\014ned)h
(to)d(b)q(e)682 1184 y Fe(w)q Fj(\()p Fe(i;)8 b(s)p Fj(\))j(=)i(1)d
Fd(\000)952 1153 y Fe(matchcost)p Fj(\()p Fe(i;)e(s)p Fj(\))p
952 1174 299 2 v 1035 1215 a Fe(siz)r(e)p Fj(\()p Fe(i)p Fj(\))1255
1184 y Fe(;)549 b Fj(\(2\))75 1318 y(where)15 b Fe(siz)r(e)p
Fj(\()p Fe(i)p Fj(\))d(=)h(#)p Fe(v)r(er)q(tices)p Fj(\()p
Fe(i)p Fj(\))c(+)h(#)p Fe(edg)r(es)p Fj(\()p Fe(i)p Fj(\).)18
b(If)d(the)h(matc)o(h)e(cost)h(is)g(greater)f(than)h(the)g(size)h(of)f(the)75
1375 y(larger)i(graph,)f(then)h Fe(w)q Fj(\()p Fe(i;)8 b(s)p
Fj(\))14 b(=)h(0.)24 b(The)17 b(instance)h(w)o(eigh)o(ts)e(are)h(used)g(in)h
(these)f(rules)g(to)f(compute)h(a)75 1431 y(w)o(eigh)o(ted)d(a)o(v)o(erage)f
(o)o(v)o(er)h(instances)g(of)g(a)g(substructure.)20 b(A)14
b(v)m(alue)h(of)f(1)g(is)g(added)h(to)e(eac)o(h)i(form)o(ula)e(so)75
1487 y(that)h(the)i(exp)q(onen)o(tial)g(w)o(eigh)o(ts)f(can)h(b)q(e)g(used)f
(to)g(con)o(trol)g(the)g(rule's)h(signi\014cance.)146 1546
y(The)d(\014rst)f(rule,)i Fg(c)n(omp)n(actness)p Fj(,)e(is)i(a)e
(generalization)j(of)d(W)l(ertheimer's)h Fg(F)m(actor)i(of)f(Closur)n(e)p
Fj(,)e(whic)o(h)75 1603 y(states)18 b(that)g(h)o(uman)h(atten)o(tion)g(is)g
(dra)o(wn)f(to)h(closed)g(structures)g(\(W)l(ertheimer,)h(1939\).)29
b(A)19 b(closed)75 1659 y(substructure)j(has)f(at)g(least)h(as)f(man)o(y)h
(edges)f(as)h(v)o(ertices,)h(whereas)f(a)f(non-closed)i(substructure)75
1716 y(has)c(few)o(er)g(edges)h(than)f(v)o(ertices)g(\(Prather,)g(1976\).)31
b(Th)o(us,)20 b(closed)g(substructures)f(ha)o(v)o(e)g(a)g(higher)75
1772 y(compactness)i(v)m(alue.)38 b(Compactness)20 b(is)h(de\014ned)h(as)f
(the)g(w)o(eigh)o(ted)f(a)o(v)o(erage)g(of)g(the)h(ratio)g(of)f(the)75
1829 y(n)o(um)o(b)q(er)c(of)e(edges)i(in)g(the)f(substructure)g(to)g(the)g(n)
o(um)o(b)q(er)h(of)f(v)o(ertices)g(in)h(the)f(substructure.)462
1964 y Fe(compactness)p Fj(\()p Fe(s)p Fj(\))e(=)g(1)c(+)931
1933 y(1)p 918 1954 49 2 v 918 1995 a Fd(j)p Fe(I)t Fd(j)979
1924 y Fc(X)983 2015 y Fb(i)p Fi(2)p Fb(I)1047 1964 y Fe(w)q
Fj(\()p Fe(i;)f(s)p Fj(\))g Fd(\002)1259 1933 y Fj(#)p Fe(edg)r(es)p
Fj(\()p Fe(i)p Fj(\))p 1234 1954 250 2 v 1234 1995 a(#)p Fe(v)r(er)q(tices)p
Fj(\()p Fe(i)p Fj(\))1817 1964 y(\(3\))146 2096 y(The)19 b(second)g(rule,)h
Fg(c)n(onne)n(ctivity)p Fj(,)e(measures)h(the)g(amoun)o(t)f(of)h(external)g
(connection)h(in)g(the)f(in-)75 2152 y(stances)j(of)f(the)i(substructure.)40
b(The)22 b(connectivit)o(y)h(rule)g(is)g(a)f(v)m(arian)o(t)f(of)h(W)l
(ertheimer's)g Fg(F)m(actor)75 2208 y(of)c(Pr)n(oximity)f Fj(\(W)l
(ertheimer,)g(1939\),)f(and)h(is)g(related)g(to)g(earlier)g(n)o(umerical)i
(clustering)f(tec)o(hniques)75 2265 y(\(Zahn,)13 b(1971\).)18
b(These)c(w)o(orks)f(demonstrate)g(the)g(h)o(uman)h(preference)g(for)f
(\\isolated")h(substructures,)75 2321 y(that)g(is,)g(substructures)h(that)e
(are)h(minimally)j(related)e(to)e(adjoining)j(structure.)j(Connectivit)o(y)c
(mea-)75 2378 y(sures)h(the)h(\\isolation")f(of)g(a)g(substructure)g(b)o(y)h
(computing)f(the)h(in)o(v)o(erse)g(of)e(the)i(a)o(v)o(erage)e(n)o(um)o(b)q
(er)h(of)75 2434 y(external)e(connections)h(o)o(v)o(er)e(all)i(the)f(w)o
(eigh)o(ted)g(instances)h(of)f(the)g(substructure)g(in)h(the)f(input)h
(graph.)75 2491 y(An)e Fg(external)h(c)n(onne)n(ction)d Fj(is)i(de\014ned)h
(here)g(as)e(an)h(edge)g(that)f(connects)h(a)g(v)o(ertex)f(in)i(the)f
(substructure)75 2547 y(to)19 b(a)g(v)o(ertex)f(outside)i(the)g
(substructure.)32 b(The)19 b(form)o(ula)g(for)g(determining)i(the)e
(connectivit)o(y)h(of)f(a)75 2604 y(substructure)c Fe(s)h Fj(with)f
(instances)h Fe(I)j Fj(in)d(the)f(input)i(graph)d Fe(G)h Fj(is)h(giv)o(en)g
(b)q(elo)o(w.)944 2728 y Fk(241)p eop
%%Page: 242 12
242 11 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)314 188 y Fe(connectiv)r(ity)r
Fj(\()p Fe(s)p Fj(\))c(=)h(1)d(+)758 116 y Fc(")800 158 y Fj(1)p
787 178 49 2 v 787 220 a Fd(j)p Fe(I)t Fd(j)849 148 y Fc(X)852
240 y Fb(i)p Fi(2)p Fb(I)916 188 y Fe(w)q Fj(\()p Fe(i;)e(s)p
Fj(\))h Fd(\002)h Fe(num)p 1194 188 14 2 v 17 w(exter)q(nal)p
1383 188 V 17 w(conns)p Fj(\()p Fe(i)p Fj(\))1565 116 y Fc(#)1589
128 y Fi(\000)p Fq(1)1817 188 y Fj(\(4\))146 320 y(The)j(third)g(rule,)h
Fg(c)n(over)n(age)p Fj(,)e(measures)h(the)g(fraction)f(of)h(structure)f(in)i
(the)f(input)h(graph)e(describ)q(ed)75 376 y(b)o(y)h(the)f(substructure.)20
b(The)13 b(co)o(v)o(erage)e(rule)j(is)f(motiv)m(ated)g(from)f(researc)o(h)h
(in)g(inductiv)o(e)i(learning)f(and)75 433 y(pro)o(vides)20
b(that)e(concept)i(descriptions)g(describing)h(more)e(input)h(examples)g(are)
f(considered)i(b)q(etter)75 489 y(\(Mic)o(halski)14 b(&)g(Stepp,)g(1983\).)k
(Although)c(MDL)f(measures)g(the)h(amoun)o(t)e(of)h(structure,)g(the)h(co)o
(v)o(erage)75 546 y(rule)h(includes)h(the)e(relev)m(ance)h(of)f(this)g(sa)o
(vings)g(with)g(resp)q(ect)g(to)f(the)h(size)h(of)f(the)f(en)o(tire)i(input)g
(graph.)75 602 y(Co)o(v)o(erage)20 b(is)h(de\014ned)i(as)d(the)h(n)o(um)o(b)q
(er)h(of)e(unique)j(v)o(ertices)e(and)g(edges)h(in)f(the)h(instances)f(of)g
(the)75 658 y(substructure)16 b(divided)h(b)o(y)f(the)f(total)g(n)o(um)o(b)q
(er)h(of)f(v)o(ertices)h(and)g(edges)f(in)i(the)e(input)i(graph.)j(In)d(this)
75 715 y(form)o(ula,)h(the)h Fg(unique)p 473 715 V 16 w(structur)n(e\(i\))f
Fj(of)g(an)g(instance)h Fe(i)f Fj(is)h(the)f(n)o(um)o(b)q(er)h(of)f(v)o
(ertices)g(and)h(edges)f(in)h Fe(i)75 771 y Fj(that)14 b(ha)o(v)o(e)h(not)g
(already)h(app)q(eared)f(in)h(previous)g(instances)g(in)g(the)g(summation.)
441 906 y Fe(cov)r(er)q(ag)r(e)p Fj(\()p Fe(s)p Fj(\))c(=)h(1)c(+)819
844 y Fc(P)863 887 y Fb(i)p Fi(2)p Fb(I)926 876 y Fe(w)q Fj(\()p
Fe(i;)f(s)p Fj(\))g Fd(\002)j Fe(uniq)r(ue)p 1249 876 V 16
w(str)q(uctur)q(e)p Fj(\()p Fe(i)p Fj(\))p 819 896 685 2 v
1085 938 a Fe(siz)r(e)p Fj(\()p Fe(G)p Fj(\))1817 906 y(\(5\))146
1023 y(Domain-dep)q(enden)o(t)20 b(rules)f(can)f(also)h(b)q(e)g(used)g(to)e
(guide)j(the)e(disco)o(v)o(ery)h(pro)q(cess)f(in)h(a)g(domain)75
1079 y(where)13 b(scien)o(tists)h(can)f(con)o(tribute)h(their)f(exp)q
(ertise.)20 b(F)l(or)13 b(example,)h(CAD)e(circuits)j(generally)f(consist)75
1135 y(of)k(t)o(w)o(o)g(t)o(yp)q(es)g(of)h(comp)q(onen)o(ts,)g(activ)o(e)g
(and)f(passiv)o(e)h(comp)q(onen)o(ts.)31 b(The)19 b(activ)o(e)g(comp)q(onen)o
(ts)f(are)75 1192 y(the)d(main)h(driving)g(comp)q(onen)o(ts.)k(Iden)o
(tifying)d(the)e(activ)o(e)g(comp)q(onen)o(ts)g(is)h(the)f(\014rst)g(step)g
(in)h(under-)75 1248 y(standing)j(the)f(main)h(function)g(of)f(the)g
(circuit.)31 b(T)l(o)18 b(add)g(this)h(kno)o(wledge)g(to)f
Fh(Subdue)h Fj(w)o(e)f(include)75 1305 y(a)e(rule)h(that)e(assigns)h(higher)h
(v)m(alues)g(to)e(substructures)h(\(circuit)h(comp)q(onen)o(ts\))f(represen)o
(ting)h(activ)o(e)75 1361 y(comp)q(onen)o(ts)f(and)g(lo)o(w)o(er)g(v)m(alues)
h(to)e(substructures)h(represen)o(ting)h(passiv)o(e)f(comp)q(onen)o(ts.)22
b(Since)c(the)75 1418 y(activ)o(e)g(comp)q(onen)o(ts)h(ha)o(v)o(e)e(higher)i
(scores,)g(they)f(are)g(exp)q(ected)h(to)f(b)q(e)h(selected.)30
b(The)18 b(system)g(can)75 1474 y(then)13 b(fo)q(cus)h(the)f(atten)o(tion)f
(on)h(the)g(activ)o(e)h(comp)q(onen)o(ts)f(whic)o(h)h(will)g(b)q(e)g
(expanded)g(to)f(the)g(functional)75 1531 y(substructures.)146
1590 y(Another)k(metho)q(d)g(of)g(biasing)i(the)e(disco)o(v)o(ery)h(pro)q
(cess)f(with)h(bac)o(kground)f(kno)o(wledge)h(is)g(to)e(let)75
1646 y(bac)o(kground)e(rules)g(a\013ect)f(the)h(prior)g(probabilities)i(of)d
(p)q(ossible)i(substructures.)20 b(Ho)o(w)o(ev)o(er,)13 b(c)o(ho)q(osing)75
1702 y(the)20 b(appropriate)g(prior)g(probabilities)i(to)e(express)g(desired)
h(prop)q(erties)g(of)e(substructures)i(is)f(di\016-)75 1759
y(cult,)g(but)g(indicates)g(a)f(future)g(direction)h(for)f(the)g(inclusion)j
(of)c(bac)o(kground)h(kno)o(wledge)h(in)o(to)f(the)75 1815
y(substructure)c(disco)o(v)o(ery)h(pro)q(cess.)75 1948 y Fl(7.)24
b(Exp)r(erime)o(n)n(ts)75 2037 y Fj(The)e(exp)q(erimen)o(ts)g(in)h(this)f
(section)g(ev)m(aluate)g Fh(Subdue)p Fj('s)g(substructure)f(disco)o(v)o(ery)h
(capabilit)o(y)h(in)75 2093 y(sev)o(eral)14 b(domains,)g(including)i(c)o
(hemical)g(comp)q(ound)e(analysis,)h(scene)f(analysis,)h(CAD)e(circuit)i
(design)75 2150 y(analysis,)h(and)f(analysis)h(of)f(an)g
(arti\014cially-generated)i(structural)e(database.)146 2208
y(Tw)o(o)10 b(goals)i(of)f(our)g(substructure)h(disco)o(v)o(ery)g(system)g
(are)f(to)g(\014nd)h(substructures)g(that)f(can)h(reduce)75
2265 y(the)k(amoun)o(t)e(of)i(information)f(needed)i(to)e(describ)q(e)i(the)f
(data,)f(and)g(to)g(\014nd)i(substructures)e(that)g(are)75
2321 y(considered)h(in)o(teresting)g(for)e(the)i(giv)o(en)f(database.)k(As)c
(a)g(result,)g(w)o(e)g(ev)m(aluate)h(the)f Fh(Subdue)g Fj(system)75
2378 y(in)h(this)g(section)h(along)e(these)h(t)o(w)o(o)e(criteria.)22
b(First,)15 b(w)o(e)g(measure)h(the)g(amoun)o(t)e(of)i(compression)g(that)75
2434 y Fh(Subdue)c Fj(pro)o(vides)h(across)e(a)g(v)m(ariet)o(y)h(of)f
(databases.)19 b(Second,)13 b(w)o(e)e(use)h(the)g Fh(Subdue)g
Fj(system)g(with)g(the)75 2491 y(additional)g(bac)o(kground)f(kno)o(wledge)g
(rules)g(to)f(re-disco)o(v)o(er)h(substructures)g(that)f(ha)o(v)o(e)g(b)q
(een)i(iden)o(ti\014ed)75 2547 y(as)17 b(in)o(teresting)h(b)o(y)f(exp)q(erts)
h(in)g(eac)o(h)g(sp)q(eci\014c)h(domain.)27 b(Section)18 b(7.1)e(describ)q
(es)j(the)f(domains)f(used)75 2604 y(in)f(these)f(exp)q(erimen)o(ts,)h(and)g
(Section)g(7.2)e(presen)o(ts)h(the)g(exp)q(erimen)o(tal)i(results.)944
2728 y Fk(242)p eop
%%Page: 243 13
243 12 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)660
103 y
 9933046 4407378 11709153 26378485 21642199 30785863 startTexFig
 660 103 a
%%BeginDocument: figures/cortisone.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 131 351 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
131 351 141 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
141 336 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 101 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
101 336 111 321 Line
End

End %I eop

Begin %I Pict
[ 1 0 0 1 30 -15 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 131 351 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
131 351 141 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
141 336 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 101 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
101 336 111 321 Line
End

End %I eop

Begin %I Pict
[ 1 0 0 1 60 0 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 131 351 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
131 351 141 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
141 336 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 101 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
101 336 111 321 Line
End

End %I eop

Begin %I Pict
[ 1 0 0 1 90 -15 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 131 351 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
131 351 141 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
141 336 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 101 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
101 336 111 321 Line
End

End %I eop

Begin %I Pict

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
86 336 101 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 199 ] concat
86 336 101 336 Line
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
114 324 128 324 Line
End

Begin %I Pict
[ 0 -1 1 0 -213.5 797.5 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
86 336 101 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 199 ] concat
86 336 101 336 Line
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
141 336 148 346 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 286 558 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 553 ] concat
[
(3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 319 577 ] concat
[
(O)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 224 538 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 208 197 ] concat
141 336 148 346 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 346 558 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 359 553 ] concat
[
(3)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
223 336 236 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 230 197 ] concat
141 336 148 346 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 379 555 ] concat
[
(C   O)
] Text
End

Begin %I Pict
[ 0.875 0 0 1 183.25 16 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
86 336 101 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 199 ] concat
86 336 101 336 Line
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.625 148 -28.625 ] concat
233 361 233 368 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 381 583 ] concat
[
(CH OH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 394 578 ] concat
[
(2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 389 536 ] concat
[
(OH)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 774 481 a Fj(Figure)g(6:)j(Cortisone.)120 641 y
 26996819 5683529 6051921 33482915 35587932 40258437 startTexFig
 120 641 a
%%BeginDocument: figures/rubber.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
[ 0.8 0 0 1 79.25 0 ] concat

Begin %I Pict
[ 1 0 0 1 -158 160 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 239 568 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 568 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 394.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 10.5 12.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 6.5 -2.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 597 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 106 14 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
264 325 301 296 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 223 676 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 258 676 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 132 505.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 132 502.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 -4.5 173.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 -13.5 49.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 132 505.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 132 505.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 288 651 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 132 505.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 93 175 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 132 505.5 ] concat
264 325 301 296 Line
End

Begin %I Pict
[ 1 0 0 1 135 162 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 239 568 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 568 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 394.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 10.5 12.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 6.5 -2.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 597 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 106 14 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
264 325 301 296 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 520 678 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 555 678 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 429 507.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 429 504.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 288.5 175.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 282.5 51.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 429 507.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 429 507.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 585 657 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 429 507.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 389 175 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 429 507.5 ] concat
264 325 301 296 Line
End

Begin %I Pict
[ 1 0 0 1 428 164 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 239 568 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 568 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 394.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 10.5 12.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 6.5 -2.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 597 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 106 14 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0.5 0 0 0.5 148 397.5 ] concat
264 325 301 296 Line
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 5 261.5 ] concat
155 441 182 441 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 153 263.5 ] concat
155 441 182 441 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 298 262.5 ] concat
155 441 182 441 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 448 263.5 ] concat
155 441 182 441 Line
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 505 1099 a Fj(Figure)c(7:)20 b(Natural)15 b(rubb)q(er)h(\(all-cis)h(p)q
(olyisoprene\).)75 1286 y Fo(7.1)26 b(Domains)75 1368 y Fh(7.1.1)f(Chemical)
16 b(Compound)i(Anal)m(ysis)75 1449 y Fj(Chemical)i(comp)q(ounds)f(are)f(ric)
o(h)h(in)h(structure.)30 b(Iden)o(ti\014cation)20 b(of)e(the)g(common)h(and)f
(in)o(teresting)75 1506 y(substructures)12 b(can)h(b)q(ene\014t)g(scien)o
(tists)g(b)o(y)f(iden)o(tifying)j(recurring)e(comp)q(onen)o(ts,)f(simplying)i
(the)f(data)75 1562 y(description,)j(and)g(fo)q(cusing)g(on)f(substructures)g
(that)g(stand)g(out)f(and)i(merit)f(additional)i(atten)o(tion.)146
1620 y(Chemical)e(comp)q(ounds)f(are)g(represen)o(ted)g(graphically)h(b)o(y)f
(mapping)h(individual)i(atoms,)12 b(suc)o(h)i(as)75 1676 y(carb)q(on)k(and)g
(o)o(xygen,)g(to)f(lab)q(eled)j(v)o(ertices)e(in)g(the)g(graph,)g(and)g(b)o
(y)g(mapping)g(b)q(onds)h(b)q(et)o(w)o(een)f(the)75 1732 y(atoms)e(on)o(to)h
(lab)q(eled)j(edges)e(in)g(the)g(graph.)26 b(Figures)18 b(6,)f(7,)g(and)h(8)f
(sho)o(w)g(the)h(graphs)f(represen)o(ting)75 1789 y(the)d(c)o(hemical)h(comp)
q(ound)g(databases)f(for)f(cortisone,)h(rubb)q(er,)h(and)f(a)f(p)q(ortion)i
(of)e(a)h Fh(DNA)g Fj(molecule.)75 1900 y Fh(7.1.2)25 b(Scene)17
b(Anal)m(ysis)75 1982 y Fj(Images)22 b(and)f(scene)i(descriptions)g(pro)o
(vide)f(a)g(ric)o(h)g(source)g(of)f(structure.)39 b(Images)22
b(that)f(h)o(umans)75 2038 y(encoun)o(ter,)16 b(b)q(oth)g(natural)g(and)g
(syn)o(thesized,)g(ha)o(v)o(e)g(man)o(y)f(structured)h(sub)q(comp)q(onen)o
(ts)h(that)e(dra)o(w)75 2095 y(our)g(atten)o(tion)g(and)g(that)g(help)h(us)f
(to)g(in)o(terpret)g(the)h(data)e(or)h(the)g(scene.)146 2152
y(Disco)o(v)o(ering)k(common)g(structures)h(in)g(scenes)g(can)g(b)q(e)g
(useful)h(to)d(a)i(computer)f(vision)i(system.)75 2208 y(First,)c(automatic)g
(substructure)h(disco)o(v)o(ery)g(can)f(help)i(a)e(system)g(in)o(terpret)h
(an)g(image.)26 b(Instead)18 b(of)75 2265 y(w)o(orking)f(from)g(lo)o(w-lev)o
(el)i(v)o(ertices)f(and)g(edges,)h Fh(Subdue)f Fj(can)g(pro)o(vide)g(more)f
(abstract)g(structured)75 2321 y(comp)q(onen)o(ts,)f(resulting)g(in)h(a)e
(hierarc)o(hical)j(view)e(of)f(the)h(image)g(that)f(the)h(mac)o(hine)g(can)g
(analyze)h(at)75 2378 y(man)o(y)12 b(lev)o(els)j(of)d(detail)i(and)f(fo)q
(cus,)g(dep)q(ending)i(on)e(the)g(goal)g(of)f(the)h(analysis.)20
b(Second,)14 b(substructure)75 2434 y(disco)o(v)o(ery)f(that)g(mak)o(es)f
(use)i(of)f(an)g(inexact)g(graph)g(matc)o(h)g(can)g(help)i(iden)o(tify)f(ob)s
(jects)e(in)i(a)f(2D)g(image)75 2491 y(of)k(a)h(3D)f(scene)i(where)f(noise)g
(and)g(orien)o(tation)g(di\013erences)h(are)e(lik)o(ely)j(to)d(exist.)28
b(If)18 b(an)g(ob)s(ject)f(ap-)75 2547 y(p)q(ears)d(often)h(in)g(the)f
(scene,)h(the)g(inexact)f(graph)h(matc)o(h)e(driving)j(the)e
Fh(Subdue)h Fj(system)f(ma)o(y)g(capture)75 2604 y(sligh)o(tly)j(di\013eren)o
(t)e(views)h(of)f(the)h(same)f(ob)s(ject.)21 b(Although)16
b(an)f(ob)s(ject)g(ma)o(y)g(b)q(e)h(di\016cult)h(to)e(iden)o(tify)944
2728 y Fk(243)p eop
%%Page: 244 14
244 13 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)304 111 y
 21181727 17366384 10196172 23023616 31377899 40390000 startTexFig
 304
111 a
%%BeginDocument: figures/dna.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 265 410 ] concat
366 195 377 180 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 265 410 ] concat
406 189 388 178 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 249.629 462.6 ] concat
161 429 198 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 249.629 462.6 ] concat
198 429 214 465 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 267.155 462.6 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .228571 0 0 .342857 266.086 462.6 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 249.629 462.6 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 307.5 638.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 243.629 509.286 ] concat
144 466 160 429 Line
End

Begin %I Pict
[ 1 0 0 1 -47 -37.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 680.5 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 342.5 675.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 275.5 664 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 276.655 451.6 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 144.5 422.5 ] concat
320 375 307 357 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 403 718.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 176 516 ] concat
301 397 287 393 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 176 516 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 176 516 ] concat
275 363 292 355 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 323 697.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 177.5 518 ] concat
275 363 292 355 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ -.329143 -0.096 0.096 -.329143 338.565 871.248 ] concat
144 466 160 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .618996 0.0864237 -0.0864237 .618996 294.14 495.56 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 176 516 ] concat
338 417 348 405 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 349 718.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 176 516 ] concat
344 379 350 392 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 176 516 ] concat
320 417 338 417 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 176 516 ] concat
309 411 303 397 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 728 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ -.329143 -0.096 0.096 -.329143 360.065 862.248 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 356 696 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 176 516 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 356 676.5 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 0 -.5 .5 0 201.25 874.75 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 375 696 ] concat
[
(H)
] Text
End

Begin %I Line
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 253.5 487.5 ] concat
205 454 259 454 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 383 718.5 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 0 -.5 .5 0 228.75 897.25 ] concat
365 344 365 323 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 357.156 563.1 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 359.156 564.6 ] concat
213 465 178 495 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 397.5 743 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .6 0 0 .6 344.9 512.9 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .6 0 0 .6 344.9 512.9 ] concat
141 336 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252 487.5 ] concat
319 471 313 463 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252 487.5 ] concat
312 447 319 436 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252 487.5 ] concat
320 472 338 472 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252 487.5 ] concat
346 468 355 454 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 419.5 727 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 251.5 488 ] concat
352 455 342 440 Line
End

Begin %I Line
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 0 -.5 .727273 0 146.841 874.75 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 399 696.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252 487.5 ] concat
318 438 303 420 Line
End

Begin %I Line
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252.5 486.5 ] concat
320 436 305 419 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252 487.5 ] concat
345 436 361 416 Line
End

Begin %I Pict
[ 1 0 0 1 -1.5 1.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 427.5 693 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 440.5 689 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252 487.5 ] concat
348 475 362 486 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 383.629 571.1 ] concat
198 429 214 465 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 383.629 571.1 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 383.629 571.1 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252 487.5 ] concat
362 487 370 469 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 252 486.5 ] concat
380 463 399 463 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 435.5 722 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .33887 0.0521339 -0.0380978 .247636 406.98 613.763 ] concat
198 429 214 465 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 460 749 ] concat
[
(O)
] Text
End

Begin %I Pict

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 231.629 563.6 ] concat
161 429 198 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 231.629 563.6 ] concat
198 429 214 465 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 249.155 563.6 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .228571 0 0 .342857 248.086 563.6 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 231.629 563.6 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 289.5 739.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 225.629 610.286 ] concat
144 466 160 429 Line
End

Begin %I Pict
[ 1 0 0 1 -65 63.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 680.5 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 342.5 675.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 213.629 631.286 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 257.5 765 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 258.655 552.6 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 176 516 ] concat
275 364 276 383 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 312.5 714 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 126.5 523.5 ] concat
320 375 307 357 Line
End

End %I eop

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 704 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 114.5 507.5 ] concat
320 375 307 357 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 264.5 684.5 ] concat
[
(P)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 242 684 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 227.5 499.5 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 227.5 497.5 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 227.5 501 ] concat
88 360 110 360 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 284 684 ] concat
[
(OH)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 -.5 116.5 852.5 ] concat
320 375 307 357 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 295 562 ] concat
[
(O)
] Text
End

Begin %I Pict
[ 1 0 0 1 19 -102.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 704 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 114.5 507.5 ] concat
320 375 307 357 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 283.5 582 ] concat
[
(P)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 261 581.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 246.5 397 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 246.5 394.5 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 246.5 398.5 ] concat
88 360 110 360 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 303 581.5 ] concat
[
(OH)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 -.5 135.5 750 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .495614 -0.0660819 -0.0660819 -.495614 154.061 852.611 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 268.629 360.6 ] concat
161 429 198 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 286.155 360.6 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .228571 0 0 .342857 285.086 360.6 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 268.629 360.6 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 326.5 536.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 262.629 407.286 ] concat
144 466 160 429 Line
End

Begin %I Pict
[ 1 0 0 1 -28 -139.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 680.5 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 342.5 675.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 163.5 320.5 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .495614 -0.0660819 -0.0660819 -.495614 173.061 750.611 ] concat
320 375 307 357 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 314 459 ] concat
[
(O)
] Text
End

Begin %I Pict
[ 1 0 0 1 38 -205.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 704 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 114.5 507.5 ] concat
320 375 307 357 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 302.5 479 ] concat
[
(P)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 280 478.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 265.5 294 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 265.5 292 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 265.5 295.5 ] concat
88 360 110 360 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 322 478.5 ] concat
[
(OH)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 -.5 154.5 647 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 279.5 500 ] concat
345 436 361 416 Line
End

Begin %I Pict
[ 1 0 0 1 1.5 3.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 456.5 704 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 468.5 699.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 296 478.5 ] concat
345 436 361 416 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 477 688 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 310.5 462 ] concat
345 436 361 416 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 491.5 668 ] concat
[
(P)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 369 552.5 ] concat
257 224 278 224 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 369 550.5 ] concat
257 224 278 224 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 509 668 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 0 -.5 .5 0 317.25 846.25 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 464.5 667.5 ] concat
[
(HO)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .33887 0.0521339 -0.0380978 .247636 436.48 533.263 ] concat
198 429 214 465 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 402 598 ] concat
[
(H)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 391.5 620 ] concat
[
(H)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 418.5 640.5 ] concat
[
(O)
] Text
End

Begin %I Pict
[ 1 0 0 1 21.5 -97.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 427.5 693 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 440.5 689 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 406.629 472.1 ] concat
198 429 214 465 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 406.629 472.1 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 406.629 472.1 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 275 387.5 ] concat
380 463 399 463 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .33887 0.0521339 -0.0380978 .247636 429.98 514.763 ] concat
198 429 214 465 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 483 650 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 302.5 401 ] concat
345 436 361 416 Line
End

Begin %I Pict
[ 1 0 0 1 24.5 -95.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 456.5 704 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 468.5 699.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 319 379.5 ] concat
345 436 361 416 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 500 589 ] concat
[
(O)
] Text
End

Begin %I Line
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .619565 0 0 .5 355.37 552 ] concat
70 127 113 127 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 0 -.5 .5 0 216.75 798.75 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 421.5 597 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 0 -.5 .470588 0 257.868 775.75 ] concat
365 344 365 323 Line
End

Begin %I Line
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .378377 0 0 .5 356.719 530 ] concat
70 127 113 127 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 375.5 598 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ -.329143 -0.096 0.096 -.329143 360.065 773.248 ] concat
144 466 160 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 197.5 418 ] concat
301 397 287 393 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 197.5 418 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 197.5 418 ] concat
275 363 292 355 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 199.5 419.5 ] concat
275 363 292 355 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .618996 0.0864237 -0.0864237 .618996 315.64 397.56 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 197.5 418 ] concat
338 417 348 405 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 370.5 620.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 197.5 418 ] concat
344 379 350 392 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 197.5 418 ] concat
320 417 338 417 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 197.5 418 ] concat
309 411 303 397 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 352.5 630 ] concat
[
(N)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 332 613.5 ] concat
[
(N)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 332 613.5 ] concat
[
(N)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 344.5 599.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 278 539 ] concat
114 135 114 123 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 278 539 ] concat
184 139 200 118 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 277 538.5 ] concat
182 136 197 118 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 513.5 569 ] concat
[
(P)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 391 454 ] concat
257 224 278 224 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 391 451.5 ] concat
257 224 278 224 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 531 569 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 0 -.5 .5 0 339.25 747.25 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 486.5 568.5 ] concat
[
(HO)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .33887 0.0521339 -0.0380978 .247636 458.48 434.263 ] concat
198 429 214 465 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 428.629 373.1 ] concat
198 429 214 465 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 428.629 373.1 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 428.629 373.1 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 297 289.5 ] concat
362 487 370 469 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 297 288.5 ] concat
380 463 399 463 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 480.5 524 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .33887 0.0521339 -0.0380978 .247636 451.98 415.763 ] concat
198 429 214 465 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 505 551 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 324.5 302 ] concat
345 436 361 416 Line
End

Begin %I Pict
[ 1 0 0 1 46.5 -194.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 456.5 704 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 468.5 699.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 341 280.5 ] concat
345 436 361 416 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 522 489.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 333 361.5 ] concat
345 436 361 416 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 371.5 639.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 304 449 ] concat
126 355 135 371 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 390.5 639.5 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 304 449 ] concat
148 374 170 374 Line
End

Begin %I Line
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 304 449 ] concat
185 375 228 375 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 426 619.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .6 0 0 .6 367.9 413.9 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .6 0 0 .6 367.9 413.9 ] concat
141 336 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 275 388.5 ] concat
319 471 313 463 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 275 388.5 ] concat
312 447 319 436 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 275 388.5 ] concat
320 472 338 472 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 275 388.5 ] concat
346 468 355 454 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 442.5 628 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 274 389 ] concat
352 455 342 440 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 275 388.5 ] concat
345 436 361 416 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 275 388.5 ] concat
348 475 362 486 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 275 388.5 ] concat
362 487 370 469 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 458.5 623 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 370 552.5 ] concat
125 125 133 112 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 304 449 ] concat
241 372 264 353 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 303.5 448.5 ] concat
239 369 261 351 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 242 416 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 422 576.5 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 356 262 ] concat
345 436 361 416 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 537 468 ] concat
[
(P)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 414.5 353 ] concat
257 224 278 224 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 414.5 350.5 ] concat
257 224 278 224 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 554.5 468 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 0 -.5 .5 0 362.75 646.25 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 510 467.5 ] concat
[
(HO)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .33887 0.0521339 -0.0380978 .247636 481.98 333.263 ] concat
198 429 214 465 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 528.5 450 ] concat
[
(O)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 376 543 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 269.5 401 ] concat
206 224 198 211 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 269.5 401 ] concat
202 246 207 234 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 269.5 401 ] concat
181 246 200 246 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .295388 -0.0523983 -0.0523983 -.295388 429.334 652.848 ] concat
144 466 160 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 269.129 360.6 ] concat
198 429 214 465 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 354 527.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .6 0 0 .6 289.4 313.4 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .6 0 0 -.6 270.9 708.6 ] concat
141 336 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 269.5 401 ] concat
161 230 169 243 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 371.5 520 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 270.5 402 ] concat
164 229 173 216 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 269.5 401 ] concat
211 264 200 247 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 270.5 400.5 ] concat
214 263 203 245 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 378 491.5 ] concat
[
(O)
] Text
End

Begin %I Pict
[ 1 0 0 1 -92 -201.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 427.5 693 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 440.5 689 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 265 403 ] concat
183 205 161 179 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 265.5 403.5 ] concat
208 207 227 181 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 265 403 ] concat
206 205 225 178 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 0 -.5 .5 0 215.75 698.75 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 389.5 520 ] concat
[
(H)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 402 491.5 ] concat
[
(H)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 420 491.5 ] concat
[
(N)
] Text
End

Begin %I Line
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .382979 0 0 .5 292.617 403 ] concat
237 169 281 169 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 427 520.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .6 0 0 .6 368.9 314.9 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 276 289.5 ] concat
319 471 313 463 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 276 289.5 ] concat
312 447 319 436 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 276 289.5 ] concat
320 472 338 472 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 276 289.5 ] concat
346 468 355 454 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 443.5 530 ] concat
[
(N)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 277 386 ] concat
330 261 14 13 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 278 371.5 ] concat
129 296 150 304 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 278 371.5 ] concat
399 322 379 297 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 462.5 520.5 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 278 371.5 ] concat
352 292 369 290 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 278 371.5 ] concat
376 283 381 266 Line
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 200 526 ] concat
280 378 14 14 Elli
End

Begin %I Line
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 356.5 422.5 ] concat
79 188 139 188 Line
End

Begin %I Line
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 356 423 ] concat
159 169 140 143 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 356 423 ] concat
104 130 128 130 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 265.5 411 ] concat
171 413 186 396 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 265.5 409.5 ] concat
186 429 202 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 240 310.5 ] concat
365 344 365 323 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 420 471 ] concat
[
(H)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 453 502 ] concat
[
(N)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .5 0 0 .5 265 410.5 ] concat
389 184 402 192 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 304 526.5 ] concat
261 160 245 141 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ .952381 0 0 .952381 197 715.81 ] concat
[
(adenine)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ .952381 0 0 .952381 199 622.81 ] concat
[
(guanine)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ .952381 0 0 .952381 201 506.81 ] concat
[
(thymine)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ .952381 0 0 .952381 543 500.81 ] concat
[
(adenine)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ .952381 0 0 .952381 541.143 616.81 ] concat
[
(cytosine)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ .952381 0 0 .952381 537 710.81 ] concat
[
(thymine)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 598 1309 a Fj(Figure)f(8:)20 b(P)o(ortion)14 b(of)h(a)g(DNA)g(molecule.)488
1465 y
 15392931 15392931 8748974 14669332 31443681 37364039 startTexFig
 488 1465 a
%%BeginDocument: figures/pencils.ps
/picstr 256 string def
gsave
133.2 223.2 translate
345.6 345.6 scale
360 360 8
[ 360 0 0 -360 0 360 ]
{ currentfile picstr readhexstring pop }
image
b3b3b6b7b7b7b7b7b7b7b7b6b3b3b0aeaba8a7a4a3a09f9e9e9e9fa1a3a4
a7a8abadb0b1b4b6b7b8bababab9b7b7b7b6b3b3b3b0afafafaeabababab
ababababacadafafb0b2b5b7b8babcbebec0c1c1c1c1c1c1c1c1c1c0bebe
bebbbabab9b7b7b7b7b6b3b3b3b3b3b3b3b3b5b7b7b7b8bababcbebec1c1
c2c5c5c5c6c7c7c7c7c7c7c6c5c5c1c1bfbebcbabab9b7b7b7b7b7b7b9ba
bababdbebec0c1c1c2c5c5c5c5c5c5c5c3c1c1c1bebebebcbabababababa
babbbebebebebebfc0c1c1c1c1c1c1c0bfbebebebbbabab8b7b7b4b3b3b3
b3b1b0b0b0b1b1b3b3b3b3b3b3b4b6b7b7b8babbbdbfc0c1c3c5c6c7c8c8
c8c8c8c8c7c7c7c7c5c5c5c5c2c1c1c1c1c1c1c1c1c2c5c5c5c5c5c5c5c5
c5c5c5c5c5c6c6c6c6c6c6c6c6c6c5c5c5c2c1c0bebcbab8b7b5b3b1afaf
afafafafafafafb1b3b4b7b8bababebec0c1c2c5c5c5c5c5c5c5c5c5c2c1
c1c1c1bfbebebdbababab8b7b7b7b5b4b3b3b3b3b3b3b5b6b7b7b7b7b7b5
b3b3b4b7b7b7b7b7b8b7b7b7b7b4b2b0adaba9a6a3a3a09e9e9e9e9e9fa2
a3a5a7a9acaeb0b2b4b6b7b7b7b7b7b6b6b3b3b2b0afafadababababaaaa
a9a8a9aaaaababacaeb0b1b3b5b7b9babcbebec0c0c1c1c1c1c1c0bebebe
bdbababab8b7b7b7b5b3b3b3b3b3b3b3b3b3b3b5b7b7b7b8bababdbebfc0
c1c2c4c5c5c5c5c5c5c5c5c5c5c3c1c0bebebbbab9b7b7b7b7b7b7b7b7b8
b9bababdbebec0c1c1c2c4c5c5c5c5c3c1c1c1c0bebebdbababababababa
babdbebebebfc0c1c1c1c2c2c3c2c2c2c1c1c0bebebcbabab8b7b7b4b3b3
b3b3b3b2b3b3b3b3b3b3b3b3b4b7b7b7b9babcbec0c1c4c5c6c8c9cacccc
cccccccccac8c7c7c6c5c5c5c1c1c1c1c1c1c1c1c1c1c4c5c5c5c5c5c6c7
c7c7c7c7c7c7c7c7c7c7c7c7c7c7c7c5c5c4c1c0bebbb9b7b6b3b1afafad
acababacaeafafb0b3b4b7b8babcbec0c1c2c5c5c5c5c5c5c5c5c5c5c5c1
c1c1c1c0bebebebdbababab9b7b7b7b7b7b7b7b7b7b7b7b7b7b6b5b3b3b3
b3b3b3b7b7b7b7b8bab9b8b7b7b6b3b3b0adaba8a6a3a2a09e9e9e9e9e9f
a3a3a4a7a9abadafb0b2b4b4b6b6b4b3b3b2b0afafafacababababa9a8a8
a8a8a8a8a8a9abababaeafb1b3b6b7b8babbbebebebfc0c0c0bfbebebebe
bbbabab8b7b7b7b5b3b3b3b3b3b3b3b3b3b3b3b3b4b6b7b7b9bababcbebe
c0c1c1c2c3c4c5c5c5c5c5c4c2c1c1bebebbbabab7b7b7b7b7b6b7b7b7b7
b7b9babbbebebec0c1c1c1c3c4c4c3c1c1c1c1bfbebebdbababababababa
bcbebebec0c1c1c1c2c4c5c5c5c5c5c5c3c1c1c0bebebcbab9b7b7b5b3b3
b3b3b0afb0b0b2b3b3b3b3b3b6b7b7b8babbbec0c1c4c5c7c8cccccccccc
ccccccccccccc8c7c7c5c5c3c1c1c1c0c0c0c0c1c1c1c2c4c5c5c5c5c7c7
c7c7c7c7c7c7c8c8c8cbcbcbcac8c7c7c5c5c1bfbebab8b6b3b1afaeacab
abababababadafb0b3b3b7b8babcbec0c1c4c5c5c5c5c5c5c5c5c5c5c5c2
c1c1c1c1bfbebebebcbababab9b8b7b7b7b7b7b7b7b7b7b7b5b3b3b3b2b0
b3b3b3b4b7b7b7b7b8b8b8b7b7b7b6b4b3b0adaba9a6a5a3a2a1a09e9fa1
a3a3a3a6a7a8abacaeafb0b1b3b3b3b3b1b0afafafacababababaaa8a8a8
a8a8a8a8a9aaabababacafafb3b3b5b7b8babbbcbdbebebebebebebebcbb
babab8b7b7b7b4b3b3b3b2b1b0b0b0b0b0b1b1b3b3b3b5b6b7b8b9babbbe
bebfc0c1c1c1c2c2c2c2c2c1c1c1c0bebebbbabab7b7b7b7b5b3b4b5b7b7
b7b7b9babbbcbebfc0c1c1c1c1c1c1c1c1c1c1c0bebebebdbcbbbabcbcbd
bebebec0c1c1c1c2c5c5c5c5c5c5c5c5c5c3c1c1c0bebebabab8b7b5b3b3
b3b0afafafafb0b1b3b3b3b3b5b7b7b8babdbec0c3c5c7c8cccccccccccc
cccccccccccbc8c7c5c5c3c1c1c0bfbebebebebfc0c1c1c1c3c5c5c5c5c7
c7c7c7c7c7cbcccccccccccccccbc7c7c5c4c1bfbdbab7b5b2afaeababa9
a9a8a9ababacaeafb1b3b6b8babcbec0c1c3c5c5c5c5c5c5c5c5c5c5c5c2
c1c1c1c1bfbebebebdbababababab8b7b7b7b7b7b7b6b5b4b3b3b1b0b0ad
b0b2b3b3b3b6b7b7b7b7b7b7b7b7b7b6b3b3b0afabaaa8a7a5a3a3a3a3a3
a3a3a3a6a7a8a9ababaeafafafafafafafafafaeacababababababaaa9a9
a9ababababababababaeafafb2b3b4b7b7b7b9bababababcbcbbbabababa
bab8b7b7b6b3b3b3b0b0afafafafafafafafafafb0b1b3b3b5b7b7b8baba
bdbebebfc0c1c1c1c1c1c1c1c1c1c0bebebdbabab8b7b7b7b7b4b3b3b4b6
b7b7b7b8bababdbebebfc1c1c1c1c1c1c1c1c1c1bfbebebebebebebebebe
bebec0c1c1c1c1c2c5c5c5c5c5c5c5c5c5c2c1c1c0bebebabab8b7b6b3b3
b3afafafafafafb0b3b3b3b3b4b7b7bababdbec1c4c5c7cacccccccccccc
cccccccccccac7c5c5c2c1c0bebebcbbbababcbebebebfc1c1c1c4c5c5c5
c7c7c7c7c8ccccccccccccccccccc9c7c5c3c0bebbb8b7b3b0aeababa8a8
a8a8a8a9ababacafb0b3b4b7b9babebfc1c1c4c5c5c5c5c5c5c5c4c3c1c1
c1c1c1c1bfbebebebdbababababab8b7b7b7b7b6b4b3b3b1b0afaeacabab
afafb1b2b3b3b4b6b6b7b7b7b7b7b7b7b5b3b3b0afadacaaa9a8a8a8a7a6
a7a7a8a8a8a9ababababafafafafafafafafaeababababababababababab
ababacacadadadaeafafb0b0b3b3b3b5b7b7b7b8b8b8b9b9b9b9b9b8b8b8
b7b7b6b4b3b3b2b0afafaeaeadadababadadadaeafafb0b1b3b4b6b7b8b9
babbbdbebebfc1c1c1c1c1c1c1c1c1c0bfbebdbbbab9b8b7b7b7b4b3b3b3
b4b6b7b7b8b9babbbdbebec0c0c1c1c1c1c1c1c1c1c0c0bfbfbfbfbfbfc0
c0c1c1c1c1c1c1c1c3c4c4c4c5c5c4c4c2c1c1c1bfbebebabab8b7b7b3b3
b3b2b0b0b0b0b1b2b3b3b3b3b6b7b7bababdbec1c3c5c7c8cccccccccccc
cccccccbc8c7c5c4c2c0bebdbcbab9b9b8b9b9babbbdbebec0c1c1c2c4c5
c5c7c7c7c7cbccccccccccccccccc8c7c5c3c0bebbb8b5b2afadaba8a8a8
a8a8a8a8a9ababaeafb1b3b6b8b9bbbebfc0c1c1c3c3c3c2c1c1c1c1c1c1
c1c1c0bfbebebebdbbbababab9b8b7b7b6b5b4b3b2b0afaeadacaaa9a8a7
afafafafb1b2b3b3b3b4b6b6b7b7b7b7b6b3b3b3b2b0afaeadacacacabaa
aaaaabacacacacacaeaeafafafafafafafafaeababababababababacacad
aeaeafb0b0b0b0b2b2b2b3b3b3b3b3b5b7b7b7b7b7b7b7b7b7b7b7b7b7b7
b6b5b3b3b3b2afafafaeababababababababababadaeafafb1b3b3b5b7b7
b9bababdbebebfc1c1c1c1c1c1c1c1c1c1c0bfbebdbabab8b7b7b7b4b3b3
b3b3b5b7b7b7b8bababcbdbebebfc0c0c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c2c2c1c1c1c1c1bfbebebebabab9b7b7b6b4
b3b3b3b3b3b3b3b3b3b3b3b4b7b7b7b9babcbec0c1c4c5c7c8cbcccccccc
cccbcac8c7c5c3c1c0bebbbab9b8b7b7b7b7b7b8b9babbbdbebfc0c1c1c3
c5c5c5c7c7c7cacccccccccccccbc7c7c5c3c0bdbab7b4b0afacaaa8a8a8
a8a8a8a8a8aaababaeafb2b3b6b7b9bbbcbebfbfc0c0c0c0c0c0c0c0c0c0
c0bfbebebebebdbabababab8b7b7b7b5b3b3b1b0afaeacabaaa8a8a7a7a7
aeafafafafafb0b1b2b3b3b3b4b4b4b4b4b3b3b3b3b3b2b0b0b0b0afafb0
b0b0b0b0b0b0b0b0b0b0afafafafafafafafafaeadacacacadaeaeafafaf
b0b1b2b3b4b4b4b4b4b5b6b6b6b6b6b7b7b7b7b7b7b7b6b6b6b4b4b4b4b4
b3b3b3b3b2afafafafabababababababababababababaeafafb0b3b3b6b7
b7b9bababdbebec0c1c1c1c1c2c2c2c2c1c1c1c0bebdbbbab9b7b7b6b3b3
b3b3b3b4b5b6b7b8b8bababbbdbebebec0c1c1c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c0c0c0c0c0c0bfbebebebebababab8b8b7b7
b6b6b5b4b4b4b4b4b6b6b6b7b7b7b7b8bababdbec0c1c4c5c6c7c8c9cac9
c8c7c7c5c4c2c1bfbdbbbab8b7b6b5b4b4b6b7b7b7b8bababbbdbebfc0c1
c2c4c5c5c7c7c8c9cbccccccccc8c7c6c5c1c0bdb9b7b3b0aeaba9a8a8a8
a8a8a8a8a8a8ababacaeafb1b3b6b7b8b9bbbbbdbdbdbdbdbebebebebebe
bebebebebebcbababab9b8b7b7b6b4b3b1b0afadacabaaa8a8a8a7a7a7a7
abababadadafafafafafb0b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3
b3b5b5b5b5b5b5b5b3b3b3b3b3b2b0b0afafafafafafafafafafb0b0b3b3
b4b5b6b7b7b8b8b8b8b8b8b8b8b8b7b7b7b7b7b7b7b3b3b3b3b3b3b3b3b3
b3b3b3b3b0afafafaeababababababaaaaabababababadafafafb3b3b3b6
b7b7b9babbbebebec1c1c1c2c5c5c5c5c5c3c2c1c1bfbebdbab9b7b7b3b3
b3b3b3b3b3b3b4b5b7b7b8b9bababdbebec0c1c1c1c1c4c5c5c5c5c5c5c4
c2c1c1c1c1c1c1c0c0bebebebebebebebebebebebebebebcbabababababa
b8b8b8b8b8b8b8b8b8b7b7b7b7b7b7b9babababdbebfc1c1c3c5c5c6c6c6
c5c5c4c2c1c0bebdbab9b7b7b5b3b3b3b3b3b4b6b7b7b7b8babababdbebe
c0c1c2c4c5c5c7c7c7c8c9c8c8c7c7c5c4c1bfbbb9b7b3b0aeaba9a8a8a8
a8a8a8a8a8a8a8a9ababadafb0b2b3b5b6b7b8b8b8b9bababababcbcbdbe
bebebcbcbababab9b8b7b7b6b4b3b1afafacababa9a8a8a8a8a7a7a8a8a8
ababababababacadaeafafafafafb0b0b1b2b3b3b3b3b3b3b3b5b5b7b7b7
b7b7b7b8b8b8b8b7b7b7b7b6b5b3b3b3b3b1b1b0b0b0b0b1b1b2b3b3b4b5
b7b7b8bababbbcbcbcbcbcbbbababab8b8b7b7b7b7b4b3b3b3b3b3b3b3b3
b3b3b3b3b3b0afafafaeababababababababababababaeafafafb2b3b3b4
b7b7b8bababdbebec0c1c1c2c5c5c5c5c5c5c5c4c1c1c0bebdbab8b7b5b3
b3b0b0b0b0b2b2b2b3b4b6b7b8b9babbbebec0c1c1c1c5c5c5c5c5c5c5c5
c5c2c1c1c1c1c0bebebebebcbcbcbcbcbdbebebebebebebebebebebebdbc
bdbdbdbdbdbcbcbcbabababab9b8b8babababababbbdbec0c0c1c3c3c3c3
c3c1c1c0bfbebbbab9b7b7b5b3b3b3b3b3b3b3b3b6b7b7b7b7b8bababbbd
bebec0c1c2c4c5c5c7c7c7c7c7c7c5c5c3c1bebbb9b6b3afaeaba9a8a8a8
a8a7a7a7a7a7a7a8a8aaababaeafb0b0b2b3b5b5b5b7b7b8b8bababababa
babababababab8b7b7b6b4b3b2b0afadababaaa8a8a8a8a8a8a8a8a9abab
a8a8a8aaaaababababababacadaeafafafafb0b1b3b3b3b3b5b7b7b7b7b9
b9bababababbbbbbbabab9b9b8b8b7b6b5b3b3b3b3b3b3b3b3b3b5b6b7b8
b9bababdbebebfc0c0c0bfbfbebdbbbabab9b7b7b7b7b5b3b3b3b3b3b3b3
b3b3b3b3b3b3b2b0afafafadacabababababababacaeafafafb0b3b3b3b3
b6b7b7b8bababcbebec0c1c1c4c5c5c5c5c5c5c5c5c2c1c0bebbb9b7b5b3
b1afafafafafafafb0b1b2b3b4b6b8b9bbbcbec0c1c1c5c5c5c5c5c5c5c5
c5c4c1c1c1c0bebebebcbababababababababbbdbebebebebfc0c0c0c0c0
c2c2c2c2c2c0c0c0bfbebdbbbabababab8b8b9babababbbdbebfc0c0c0c0
c0c0bfbebebbbabab7b7b7b3b3b3b3b3b3b3b3b3b3b4b6b7b7b7b7b8b9b9
babbbdbec0c1c2c4c5c5c5c7c7c5c5c5c2c0bebbb8b5b3afadababa8a8a8
a8a7a7a6a6a6a6a6a7a7a8a8aaabacaeafb0b0b1b3b3b4b6b7b7b8b9baba
babababab9b7b7b7b5b3b3b1afaeacababa8a8a8a8a8a8a9aaacacaeb0b1
a8a8a8a8a8a8a9aaababababababacadaeafafafb0b2b3b3b4b7b7b7b8ba
babababcbdbebebebdbdbcbababab8b7b7b6b5b3b3b3b3b3b4b6b7b7b7b9
bababdbebfc0c1c1c1c1c1c1c0bebebcbabab9b8b7b7b7b6b5b4b4b4b4b4
b6b6b6b6b5b4b3b3b2b1b0afafaeaeacacacacaeafafafb0b2b3b3b3b3b3
b6b7b7b7b9bababdbebec0c1c1c4c5c5c5c5c5c5c5c3c1c0bebbbab7b5b3
b0afafaeaeaeaeaeaeaeafb0b1b3b6b7b8babdbec0c1c2c5c5c5c5c5c5c5
c5c4c1c1c1c0bebebebbbababababababababbbebebebfc0c1c2c3c4c4c4
c5c5c5c5c5c5c4c4c2c0bfbebcbababab8b7b7b8b8babababcbebebebebe
bebebebebdbababab7b7b7b5b3b3b3b3b4b4b4b4b4b3b3b4b6b7b7b7b7b7
b8bababdbebfc1c1c4c5c5c5c5c5c5c3c1c0bdbab8b5b2afacababa9a8a8
a7a7a6a3a3a3a3a3a4a5a7a7a8a9aaabacadaeafb0b2b3b4b7b7b7b7baba
bababab8b7b7b7b6b3b3b1afafacababaaa8a8a8a8aaabacaeb0b1b3b5b6
a7a7a7a7a8a8a8a8a8a9aaababababababacafafafafb3b3b3b5b7b7b8ba
bababbbebebebebebebebebdbcbabab9b8b7b7b6b4b3b3b3b4b7b7b7b7b8
bababcbebec0c1c1c1c1c1c1c1bfbebebababab9b7b7b7b7b7b7b7b7b7b7
b7b7b7b7b7b7b6b6b5b4b3b2b0b0afafafafafafafb0b2b3b3b3b3b3b3b4
b7b7b7b7b7b8b9babbbdbec0c0c1c2c3c5c5c5c5c5c2c1c0bebbb9b7b4b1
afaeacabababababababacadafb0b3b4b7b8babdbec0c1c2c3c4c5c5c5c5
c5c3c1c1c1c1c0bebebdbbbababababababcbebec0c0c1c2c4c5c5c6c7c7
c7c7c7c7c7c7c7c5c5c2c1c0bebdbababab8b8b7b8babababbbebebebebe
bebebebebdbababab8b7b7b7b6b6b6b6b7b7b7b7b7b6b5b5b3b4b6b7b7b7
b7b8bababebec0c1c2c5c5c5c5c5c5c2c0bebbb8b6b3b0afacababa8a8a7
a7a4a3a3a3a3a3a3a3a3a4a6a7a8a8aaabababafafb0b3b3b6b7b7b8baba
bababab8b7b7b7b5b3b3b0afaeababababaaaaaaabadaeb0b2b4b6b8b9b9
a7a7a7a7a8a8a8a8a8a9ababababababababafafafafb1b3b3b3b6b7b7b8
babababbbebebebebebebebebcbababab8b7b7b7b4b3b3b3b3b3b5b6b7b7
b8b9bababcbebebfc0c0c0c0bebebdbbbabababab7b7b7b7b7b7b7b8b8b8
babababababab9b8b7b7b7b5b3b3b3b2b1b1b1b1b3b3b3b4b5b5b6b7b7b7
b7b7b7b7b7b7b7b8b9bababcbec0c0c1c1c1c2c1c1c1c0bebdbab7b5b3b0
adabaaa9a9a9a8a8a8a9aaababaeb0b3b4b7b8babdbec0c1c1c1c1c2c3c3
c3c2c1c1c1c1c1c0c0bebebdbcbcbcbebebfc0c0c2c3c5c5c6c7c7c8caca
cccccccccccbc8c7c6c5c2c1bfbebdbabababababababababcbebebebebe
bebebebebebdbbbabab9b8b8b7b7b8b8b8b8b8b7b7b7b7b7b7b7b7b7b7b7
b7b9babbbebec0c1c4c5c5c5c5c5c2c1c0bdbab8b5b2afacababa9a8a8a7
a5a3a3a3a3a3a3a3a3a3a3a6a7a8a8aaababacafb0b2b3b4b7b7b8bababa
babababab8b7b7b7b3b3b1afafadababababacadafb0b1b4b6b8b9bbbcbd
a7a7a8a8a8a8a9abababacacacacadadadafafafafafb0b3b3b3b3b6b7b7
b8b9b9bababbbcbcbdbdbcbcbababab8b7b7b7b5b3b3b3b3b3b3b3b3b3b5
b5b6b6b8b8b9b9bbbcbcbcbcbcb9b9b9b9b8b8b7b7b7b7b8b8bababababb
bcbcbdbebdbcbcbbbab9b8b8b7b6b5b5b4b4b4b4b5b5b7b8b8b8b8b8b8b7
b7b7b7b7b7b7b7b7b7b7b8b9babcbdbec0c0c0c0c0bfbdbcb9b7b5b1aeac
a9a7a6a5a4a4a4a4a5a5a6a7a9abadb0b2b5b8babbbebec0c1c1c1c1c1c1
c1c1c1c1c2c2c2c2c1c1c1c0c0c0c0c2c2c3c4c5c5c6c8c8cacbcccccccc
cccccccccccccccac7c6c5c2c0bebebabababab9b9b9babababdbebebebe
bebebebebebebebebcbcbcbbbbbbbcbcbcbcbbbbbbb9b8b8b8b8b7b7b8b8
b9bababdbec0c1c2c5c5c5c5c5c4c1c0bebbb9b6b3b0afabababaaa8a8a7
a6a4a3a3a3a3a3a4a4a5a6a7a8a9ababacadafb0b2b3b6b7b7b8babababa
babababab8b7b7b7b3b3b2b0afafafaeaeafb0b0b2b4b6b8b9bcbdbfbfbf
a7a8a8a8a8abababacaeafafafafb0b0b0b0b0b0b0b2b3b3b3b3b3b3b4b7
b7b7b7b8b9b9bababababababab9b8b7b7b7b5b3b3b3b3b3b2b2b2b2b2b2
b3b3b3b4b4b6b6b7b8b8b8b8b8b7b7b7b7b7b7b7b7b7b8bababababcbdbe
bebfc0c0c0bfbebebdbbbabab9b8b7b7b7b7b7b7b7b8b9babababababab9
b8b7b7b7b7b4b4b4b4b4b6b6b8b9b9bbbcbdbdbdbdbbbab8b7b4b1aeaba8
a5a29f9e9d9d9d9d9e9fa2a3a5a8abaeb0b4b7b9babebebebfc0c1c1c1c1
c1c1c1c1c3c5c5c5c4c4c4c4c4c4c5c5c7c7c8c8cacbcccccccccccccccc
cccccccccccccccccac7c5c4c1bfbebbbabab8b7b7b7b8b9bababdbebebe
bebec0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0bfbfbebdbcbbbabab9b9baba
babbbdbec0c1c2c5c5c5c5c5c5c3c1c0bebab8b6b3b0afadacababaaa9a8
a8a7a6a6a6a6a6a7a7a8a9aaabacadaeafb0b2b3b4b6b7b8b9bababababa
babababab8b7b7b7b4b3b3b3b0b0b0b0b0b2b3b4b6b8b9bcbdbfc0c1c1c1
a7a7a8a8a9ababacafafb0b2b2b2b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b4
b5b6b7b7b7b7b8b8b8b8b8b8b8b7b7b7b6b4b3b3b3b2b0b0afafafafafaf
b0b0b0b1b1b3b3b4b4b4b4b4b4b4b4b4b4b4b5b6b7b7b8babababcbebec0
c0c1c1c1c1c1c0bebebebbbabab9b8b7b7b7b7b8b9bababbbdbdbdbdbbba
bab9b7b7b7b3b3b3b3b3b3b3b5b6b7b8b9babababab9b8b7b4b1aeaba7a4
a09d9b9898989898999b9d9ea3a6a9adafb4b7b9babebebebebebfc0c0c0
c1c1c1c1c1c3c5c5c5c5c5c6c7c7c7c8cacbcccccccccccccccccccccccc
ccccccccccccccccccc8c6c4c1bfbebabab8b7b7b7b7b7b7b8bababcbebe
bec0c1c1c1c1c2c2c2c2c4c4c4c4c4c4c4c4c2c2c0c0bebebdbbbbbababa
bbbebebec1c1c3c5c5c5c5c5c5c2c1bfbcbab8b6b3b3b0afafaeadacacab
aaaaaaa9a9aaaaaaaaacacaeaeb0b0b1b2b3b4b6b7b7b8b9babababababa
bababab9b7b7b7b7b6b3b3b3b3b3b3b3b3b4b6b7b8bbbdbec0c1c1c1c1c1
a4a5a7a8a8aaabacafafb3b3b3b4b5b5b5b5b5b5b5b5b5b5b4b3b3b3b3b3
b3b3b3b4b5b5b6b7b7b7b7b7b5b5b4b3b3b3b3b2b0afafafafafafafafaf
afafafafafafafb0b1b2b3b3b2b1b1b1b1b3b3b3b6b7b7b9babbbebebfc1
c1c1c1c1c1c1c1bfbebebbbabab9b7b7b7b7b7bababababebebebebebebc
babab8b7b6b3b3b1afafafafb0b2b3b5b6b7b7b7b7b7b5b3b2afaba8a4a0
9c999595939393939596999ca0a4a8adafb4b7b9bbbebebebebebebebebe
bebec0c0c1c1c1c3c5c5c5c7c7c7c9cccccccccccccccccccccccccccccc
cccccccccccccccccccac7c4c1bfbcbab8b7b5b3b3b3b4b6b7b7bababbbe
bec0c1c1c3c5c5c5c5c6c7c7c7c7c7c7c7c7c5c5c4c2c1c0bebebebebebe
bebebec0c1c1c4c5c5c5c5c5c2c1c0bebdbab9b8b6b5b3b3b3b2b0b0b0af
afafaeadadaeafafafb0b0b1b3b3b4b5b6b7b7b7b8b9babababababababa
b9b8b7b7b7b7b7b7b7b5b3b3b3b3b4b5b7b7b8babbbec0c1c1c1c3c2c1c1
a3a3a4a6a7a8aaabaeafb1b3b3b7b7b7b7b7b7b7b7b7b7b7b7b7b6b5b4b3
b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b2b2b0b0afafafafafafafadadadad
afafafafafafafafafafafb0b0afafafafb0b3b3b3b7b7b9babcbebebfc1
c1c1c1c1c1c1c0bebebbbab9b8b7b7b7b7b7b7b7babababdbebebebebebd
babab8b7b5b3b1afafadadadadafb0b0b2b4b5b5b5b4b3b2afadaaa7a3a0
9b989591909090909395979c9ea4a8adb1b5b8babdbebebebebebebebebc
bcbcbebebebfc0c1c2c4c5c6c7c7c8cbcccccccccccccccccccccccccccc
ccccccccccccccccccc8c6c3c0bebab8b7b3b3b2b0b1b2b3b4b7b8bababd
bec0c1c2c5c5c5c7c7c7c8cacbcccccac8c7c7c5c5c4c1c1c0bebebebebe
bebebec0c1c1c1c3c5c5c5c2c1c1c1bfbebdbabab8b8b8b7b7b7b6b5b5b3
b3b3b3b2b1b2b3b3b3b3b4b5b6b7b7b7b8b8bababababababab8b8b8b7b7
b7b7b7b7b7b7b7b7b7b7b6b5b5b6b7b7b7b8babbbebec0c1c1c5c5c2c1c1
a3a3a3a3a4a5a7a8aaacaeb0b2b4b5b6b7b7b7b7b7b7b7b7b7b7b7b7b7b6
b4b3b3b3b3b3b3b3b3b3b3b3b2b0b0afafafafafafafafadabababababab
abadafafafafafafb0b0b2b3b3b2b1b0b1b2b3b3b4b7b7b9bababebebec0
c1c1c1c1c0c0bebdbbb9b8b7b5b4b3b3b3b4b4b6b7b8b9babcbdbebebdbb
bab9b7b7b4b2afaeababaaa9a9aaacadafb0b2b3b3b3b3b0afacaaa7a4a0
9c989593919090919295989ca1a5aaaeb1b6b8bbbebebebebebebcbababa
b9b9b9b9b9bbbcbdbfc0c1c3c4c5c6c7c8c9c9cacbcbcbcbcbcccccccccc
cccccccccccccccccac7c5c1bfbbb9b7b3b3b0afafafb0b2b3b4b7b8babb
bec0c1c2c5c5c7c7c7c8ccccccccccccc8c7c7c5c5c4c1c1c0bebebebebd
bdbebebebfc0c1c1c1c1c1c1c1c1c1c1bfbfbebdbdbdbdbdbcbbbbb9b9b8
b8b7b7b6b6b6b6b6b7b7b7b8b9b9bababababababab8b8b7b7b7b7b7b6b6
b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b8bababdbebfc1c1c1c3c3c1c1c1
a3a3a3a3a3a3a4a5a7a8aaadafb0b1b3b4b5b6b6b7b7b7b7b7b7b7b7b7b7
b7b6b5b3b3b3b3b3b3b3b3b0afafafafafafafafafaeacababababababab
abacafafafafb0b2b3b3b3b3b4b4b4b3b3b3b4b5b6b7b8babababebebebe
bfbfbfbfbebebcbab8b7b6b3b1b0b0b0b0b0b0b1b3b5b7b8b9babbbbbaba
b9b8b7b4b2b0aeabaaa8a7a6a6a6a8aaacaeafb0b0b0b0afafadaba8a6a3
9e9b98959492929395969a9da3a6abafb3b8babdbebebebebebcbabab8b8
b7b6b6b6b6b8b8b9bbbcbec0c0c2c3c4c4c5c5c5c7c7c7c7c7c8c8c8c8c9
cbcbcccccccccccac7c5c3c0bdbab8b5b3b0afafafafafb0b3b3b6b7b9bb
bebec1c1c4c5c6c7c7c7c8cacbcac8c8c7c7c5c5c4c1c1c0bebebdbcbbba
babbbdbebebec0c0c1c1c1c1c1c1c1c1c1c1c0c0c0c0c0c0c0bfbebdbdbb
bab9b9b8b8b7b7b7b7b8b9babababababababab9b8b7b7b6b6b4b4b4b3b3
b4b6b7b7b7b7b7b7b7b7b7b7b7b7b7b7b8bababcbebfc1c1c1c1c1c1c1c0
a3a3a2a0a0a0a0a1a1a4a5a8a9abadafb0b1b1b3b4b4b5b5b7b7b7b7b7b7
b7b7b7b6b6b5b5b3b3b3b3b2b0afafafafafafafafadabababababababab
abaeafafafb0b2b3b3b4b6b6b7b7b7b6b6b6b7b7b8b8babababcbebebebe
bebebebdbcbbb9b8b6b4b1b0adacacabaaacacadaeb0b3b5b6b8b8b8b8b8
b7b6b4b2b0aeaba9a7a5a4a3a1a2a4a5a8aaacadafafafafafafadaba9a6
a39f9d9a97979797989a9da1a5a9adb0b5b8babdbebebebebdbabab8b7b5
b4b3b3b3b3b4b4b5b7b8b9bbbcbfbfc0c0c0c2c2c2c2c3c3c3c3c3c5c5c5
c6c6c8c8cac8c8c6c5c3c0bebbb9b7b3b3b0afafafafafb1b3b3b7b7b8ba
bcbebfc1c2c3c5c5c5c6c6c6c6c6c6c5c5c4c3c2c0c0bfbdbcbbbabababa
babababbbcbdbebebfc0c1c1c1c1c1c2c3c4c4c4c4c4c4c4c2c1c1c0bebe
bcbababab9b7b7b7b8babababababababab8b8b7b7b5b4b3b3b3b3b3b3b3
b3b3b4b5b5b5b5b5b4b4b5b6b7b7b7b7b8bababcbebfc1c1c1c1c1c1c1bf
a3a3a29f9e9e9e9e9e9e9ea1a2a5a5a8a9aaacadaeb0b0b2b3b4b5b7b7b7
b7b7b7b7b7b7b7b7b6b5b4b3b3b2b1afafafafafafafaeadabababababab
acafafafb0b3b3b3b6b7b7b8b9bababababababababababbbdbebebebebe
bebdbabababab8b7b4b1afadaba8a8a7a7a7a7a8aaacadafb1b3b5b5b5b5
b4b3b1b0aeabaaa7a3a29f9e9d9d9ea1a3a6a8abadafafafafafafaeabaa
a8a5a29f9d9c9a9c9c9ea1a4a7abaeb2b5b8babcbebebebdbabab8b6b3b3
b0afafafafafb0b0b3b4b6b8b8bababbbcbdbebebebebfc0c0c0c1c1c1c2
c4c5c5c6c6c6c5c5c3c1bfbdbab8b7b4b3b2b0afb0b1b3b3b3b6b7b7baba
bbbebebec0c1c1c1c2c3c3c3c3c3c2c1c1c0c0bebdbcbbbab9b8b8b7b7b7
b7b7b9babababcbebebec0c1c1c1c3c5c5c5c5c5c5c5c5c5c5c2c1c0bebe
bbbabab9b7b7b7b7b7b7b8bababab8b8b7b7b7b5b3b3b3b0b0afafafb3b3
b3b3b3b3b3b3b3b3b3b3b3b3b5b7b7b7b7bababcbebfc1c1c1c1c1c1c0be
a7a5a4a2a09f9e9c9b9a9a9c9d9e9fa2a4a5a6a7a9aaadaeafb0b2b3b5b6
b6b7b7b7b7b7b7b7b7b7b7b6b4b3b3b3b1afafafafafaeadacababababab
acadaeafb0b2b3b5b7b7b9babbbcbcbcbcbcbcbcbcbebebebebebebebebe
bebabababab8b7b6b3b0aeaba8a6a5a3a2a2a2a4a5a7aaabaeb0b1b2b3b3
b2b0afaeabaaa7a4a29e9e9a9a9a9a9d9fa3a6a9abaeafafb0b1b0b0afad
aba9a7a4a2a19f9fa1a2a4a7aaacafb2b5b7b9babcbcbcbab9b8b6b4b1b0
afaeadadadadadaeaeb0b1b3b5b6b6b8b8b9b9b9bcbcbcbdbdbebebfc0c1
c1c2c5c5c5c5c5c4c1c1bfbebbbab8b8b6b5b4b4b4b5b5b7b8b8b8bababa
babbbcbdbdbdbdbdbdbfbfbfbfbfbdbdbbbbbab9b8b8b7b6b6b5b5b5b5b5
b5b6b7b7b8bababcbdbebfc1c1c1c3c5c5c5c5c5c5c5c5c5c3c1c0bfbdbb
b9b8b7b6b5b5b5b5b5b5b6b6b6b6b6b6b5b4b3b3b3b2b0afafafafafb2b3
b3b3b3b3b3b3b3b3b3b3b4b4b6b7b7b8b9bbbcbebfc0c1c1c1c1c1c1bfbe
abaaa8a7a6a4a3a09f9e9d9d9d9e9e9fa2a3a3a6a7a8a9abacaeafb0b1b2
b3b4b4b6b6b6b6b6b6b6b6b5b3b3b3b3b0afafafaeadabababaaaaa8a8a8
a9aaaaacaeafb2b4b7b8bababebec0c0c0c0c0c0c0c0c0c0c0c0c0c0bfbe
bebdbbbabab7b7b6b3b0aeaaa8a5a3a09e9e9e9fa0a3a5a7aaacaeafb0b0
afafafaeababa8a6a3a19e9c9b9a9b9d9fa3a6a9abaeafb0b3b3b3b3b0af
afacaba9a7a6a4a4a4a6a7a8abacafb1b3b5b7b8b9b9b9b8b7b5b3b1afae
acabaaa9a8a8a8aaaaabacaeafb0b1b2b3b4b6b6b8b8b9b9babbbdbebebf
c1c1c2c5c5c5c5c5c4c2c1c0bfbfbdbbbabababababababbbbbbbbbbbaba
bababab9b9b9b8b8b8b8b8b8b7b7b7b7b6b5b3b3b3b2b1b0b0b0b0b0b0b2
b3b3b4b6b7b8b9babbbebebfc0c1c1c3c5c5c5c5c5c5c4c3c1c0bebcbab8
b7b5b4b2b0b0b0b0b0b2b3b3b3b3b3b3b3b3b3b3b2afafafafafafafb0b2
b2b3b3b3b3b3b3b3b4b5b7b7b8b8b9bbbcbec0c0c1c2c3c4c4c1c1c1bfbe
b0b0afadacaaa8a8a5a4a4a4a2a2a2a3a4a4a5a7a7a8a9abababadafafaf
b0b0b0b1b1b1b1b1b1b1b1b1b1b1b1b0afafafaeabababa9a8a7a6a5a4a4
a4a5a6a7a9acaeb0b4b7b9babebfc1c1c3c4c3c2c2c2c2c2c2c2c2c1c1c0
c0bebebbbab9b7b7b4b1aeaaa7a3a19e9e9b9b9b9d9ea2a4a7a9abadafaf
afafafafaeacaba9a7a5a4a2a09f9fa0a3a6a8abadb0b2b3b3b3b3b3b3b2
b1afaeacaaaaa8a8a8a8aaababadafafb3b3b5b6b7b7b7b7b5b3b2afafac
aba9a8a7a6a6a6a6a6a6a7a8aaaaabadaeafb0b1b2b4b6b7b8b9babbbdbe
bfc0c1c2c4c5c5c5c5c5c4c4c2c2c2c1c0bfbfbfbfbfbfbfbfbebebebbba
bab8b8b6b6b4b3b2b2b2b2b2b1b1b0b0afafaeaeacacacacacacadaeafaf
b0b1b3b3b5b7b7b9babbbcbebec0c1c1c2c4c4c5c4c3c1c1c0bebcb9b8b6
b3b0b0aeadacacaeafafb0b2b3b3b3b3b3b3b3b3b0afafafafafafafafaf
afb0b0b1b3b3b3b4b7b7b8b9babbbdbec0c0c1c3c4c5c5c5c5c3c1c1bfbe
b7b6b5b4b3b0b0afacacaca9a8a8a8a8a9a9aaababadadadadadabababab
abababababacadadadadadadadafafafafaeacababaaa8a7a6a3a2a09e9d
9d9d9da1a3a6a8acafb3b6b9bcc0c1c4c5c5c5c5c5c5c5c5c5c5c5c5c3c2
c1c1bfbebdbab9b7b6b3b0aca8a4a19e9b9a9a9a9a9d9ea2a4a7aaabafaf
b0b2b3b3b2b0b0b0adacaca8a8a8a8a8a9acaeb0b0b3b4b5b7b7b7b7b5b3
b3b3b0b0afaeadadadacadadaeafafafb1b3b3b3b3b3b3b3b3b3b0afaeab
aba8a7a5a3a3a3a2a1a1a2a3a3a5a6a7a9aaabadafb0b1b3b4b7b7b9babc
bebec0c1c1c4c5c5c5c6c6c6c6c6c6c5c5c5c5c5c5c4c3c2c1c1bebebcba
b8b7b4b3b0afafadadadadababababaaa9a9a8a8a8a8a8a8a9aaababacaf
afafb1b3b3b4b6b7b8b8bababcbdbebfc0c1c1c1c1c0c0bebcbab8b6b4b1
afaeababababababafafb0b3b3b3b3b3b3b3b3b3b0afafafadababacadad
aeafafafb2b3b4b7b7b9bbbdbec0c1c1c3c4c5c5c5c5c5c5c5c3c1c1bfbe
bcbabab9b8b8b7b6b5b3b1b1b1b1b1b0b0b1b1b1b1b1b1b1b0b0b0aeabab
aaa9a7a7a7a5a5a5a7a7a8a8a9ababababababababa9a8a7a3a39e9d9a98
979797979b9d9fa4a8acb0b6b9bec1c4c5c5c7c6c5c5c5c5c5c5c5c5c5c5
c4c2c1c0bebebbbab8b6b1aea9a6a29e9c9a9a9a9a9b9ea1a4a7a9abafb0
b3b3b5b6b7b7b7b6b6b6b6b3b1b1b1b1b1b2b5b6b6b7b7b7b7b7b7b7b7b7
b6b3b3b3b3b1b1b0b0b0b0b0afafafb0b1b3b3b3b3b3b3b3b3b3b3b0afac
aba8a7a5a3a3a09e9e9e9e9e9fa1a3a4a5a7a8a9abadafafb1b3b6b7b8ba
babcbebfc1c1c4c5c5c7c7c8c8cacacac8c8c7c7c6c5c5c5c3c1bfbebab8
b7b5b3b0afaeabababababaaa8a8a7a7a6a5a5a5a5a6a7a7a8a8abababaf
afafb0b3b3b3b4b6b7b7b7b8b8bababbbcbebebebebebcbbb9b7b6b2b0af
acababababababadafb1b3b3b4b6b7b7b7b4b3b3b0afafacabababababab
abadafafb1b3b7b7b9bbbebfc1c1c3c5c5c5c5c5c5c5c5c5c5c2c1c0bebe
bfbfbfbebdbdbbbab9b9b8b8b6b6b6b6b6b6b6b6b6b6b6b6b6b4b2b0aeab
a9a7a5a3a1a09f9f9fa0a1a2a4a5a6a8a9ababababaaa8a7a3a29e9b9995
949291929296989ba0a5aab0b5b9bdc0c3c5c5c5c5c5c5c5c5c5c5c5c5c5
c5c5c3c1c1c0bebcbab8b5b1ada8a5a29e9b9a9a9a9c9ea1a4a7abacafb1
b3b6b8b9bbbcbdbdbdbdbdbcb9b9b9b9b9b9b9babbbabababab9b9b8b7b7
b7b7b7b6b6b6b4b4b4b4b3b2b1b1b2b3b3b3b3b3b4b5b6b7b7b6b5b4b2b0
aeaca9a7a5a3a19e9e9e9e9e9e9ea0a3a3a4a7a8a8aaabadafb0b2b4b5b7
b8b9bbbdbec0c2c5c5c7c7cbccccccccccccc9c7c7c7c5c5c1c0bebcbab7
b6b3b3afafaeacababababaaa8a8a7a7a4a3a3a3a3a5a7a8a8aaabadaeaf
b0b0b3b3b3b3b3b3b3b4b4b4b5b6b6b7b8b9b9bab9b9b8b7b6b4b2b0afae
ababababacadafb0b2b5b6b8b8b8b8b8b7b7b4b3b0afacabaaa8a8a8a8a9
ababaeafb2b4b7b9bbbec0c1c1c5c5c5c5c5c5c5c5c5c4c3c2c1c0bfbebe
c1c1c1c0bfbebebdbbbababab9b9b9b9b9b9b9b9b9b9b9b9b8b8b6b3b0ad
aaa7a3a09e9c9b9b9b9b9b9d9ea1a3a5a7a8ababababa9a8a6a3a09d9a95
93908f8d8d8f9194989da3a8aeb3b8bcc0c2c4c5c5c4c5c5c5c5c5c5c5c5
c5c5c5c4c2c1c0bebdbab8b4b0aba7a39f9e9b9a9a9e9ea3a4a7abaeb0b3
b6b8babcbec0c0c1c2c2c2c1c0c0c0bfbfbfbfbebebdbdbbbabababab9b9
b8b8b8b8b8b8b8b8b7b7b6b6b6b4b4b4b4b4b6b6b7b8b8b9b9b9b9b8b7b4
b2b0acaaa7a5a3a09e9e9e9e9e9ea0a3a3a3a4a7a8a8aaabacaeafb0b1b3
b5b6b8babcbec1c4c5c7c7cbccccccccccccc8c7c7c5c5c2c0bebdbab8b7
b6b3b3b2b0b0b0b0afaeadacabaaa8a7a7a6a6a6a6a7a8a9abacaeb0b1b2
b3b3b3b3b3b3b3b1b1b0b0b0b1b1b1b4b5b6b7b8b7b7b6b5b3b3b0afafaf
acacacaeb0b1b3b5b7b8b9babbbbbabab8b7b5b3afadaba9a8a7a7a7a7a8
aaabadb0b3b6b8babdbfc1c1c1c3c4c4c4c4c4c4c2c2c1c1c0c0bebebebe
c1c1c1c0bfbebebebdbabababababababababababababababab9b7b6b2af
aba8a4a09d9a99969696979a9b9e9fa3a6a8aaababababaaa9a6a4a29d99
9592908e8c8c8d9093969ba1a6acb1b7babec0c2c2c1c2c2c2c3c3c4c5c5
c5c5c5c5c4c2c1c0bfbdbab7b2aea9a6a29e9e9d9d9ea0a3a6a8abafb1b4
b7b9bbbec0c1c2c4c5c5c5c5c4c4c2c1c1c1c1c0c0bebebebdbbbabababa
babababababababab9b9b9b9b8b8b8b8b8b8b8b9b9bcbcbebfbfbfbebcba
b8b5b2afaba9a6a3a29f9e9e9fa1a3a3a3a3a4a7a7a8a8a8a9abacadadb0
b1b2b5b7b9bbbfc1c3c5c7c8cacbcccacac8c7c5c5c3c1c0bebcbab9b7b7
b7b6b5b5b5b5b5b5b4b4b2b0afaeadaaaaa9a9a9a9aaabadaeb0b1b3b5b5
b5b5b4b3b3b3b0afafafaeadadaeafb0b3b3b4b4b4b4b3b3b3b3b0afafaf
afb0b0b1b4b6b8b9bbbcbdbdbebebcbab9b7b4b1aeaba9a8a7a6a5a5a7a7
a8abadb0b3b6b8babdbfc0c1c1c1c1c1c1c1c0c0c0bfbfbfbebcbcbcbbbb
bebebebebebebdbbbababab8b8b8b7b7b7b7b7b7b7b7b7b7b7b7b7b5b2af
aca9a5a29e9a9996959595989a9c9ea3a5a8aaabadafafaeadaca9a6a49f
9b979493919090909194979ca1a7abb1b6b8bcbebebebebec0c0c1c1c2c4
c5c5c5c5c5c5c2c1c0bebcb9b5b0aba8a4a19e9e9e9ea0a3a6a8abafb1b4
b7b8bbbebfc1c1c4c5c5c5c5c4c2c1c1c1c1c0c0bfbebebebebebabababb
bcbcbcbebebebebebebebebcbcbcbcbcbcbcbdbebfc0c0c3c3c3c3c3c1c0
bdbab7b4b0ada9a7a4a3a3a3a3a3a3a4a5a6a7a7a7a7a7a7a8a8a8a9abab
adafb0b4b7b9bbc0c1c4c5c6c7c7c7c7c7c5c4c3c1bfbebcbabab8b7b7b7
b7b7b7b8b8b8b8bab9b8b7b6b4b3b0afaeadadadadaeafb0b2b3b5b7b7b7
b7b7b7b4b3b2afafafacababababaeafb0b3b3b3b3b3b3b3b3b3b3b3b3b3
b3b3b5b6b8babbbdbec0c0c0bfbebdbab8b6b3afacaaa8a7a6a3a3a3a6a7
a8abadb0b3b5b8babbbdbebebebebebebebebdbcbcbcbbbababababababa
bdbdbdbdbcbbbababab9b7b7b7b7b5b5b5b3b3b3b3b2b2b2b2b2b2b0afae
aba8a5a29e9d9a9a9a9a9a9b9d9fa2a4a7a9acaeb0b1b1b1b1b0aeadaaa7
a4a09d9a9897969696979a9ca0a4a9aeb2b6b8bbbcbcbcbdbdbebfc0c1c1
c2c4c5c5c5c4c2c1c1bebdb9b6b2ada9a5a29e9e9e9ea1a3a6a9acafb1b3
b7b8babdbec0c1c1c1c1c1c0c0c0c0bdbdbdbcbcbcbcbcbcbabababbbdbe
bebebebec0c0c1c1c1c0c0c0c0c0c0c0c0c0c1c2c3c4c5c6c8c8c8c7c6c3
c0bfbab8b3b0aca9a7a5a3a3a4a6a7a7a7a7a7a7a7a7a6a6a6a6a6a7a7a9
a9abaeb0b4b6b9bcbec0c3c4c4c4c4c4c3c2c0bfbdbbb9b9b8b7b7b7b7b7
b8b9babbbcbcbebebdbcbbb9b8b6b5b4b1b1b0b0b1b1b2b4b5b7b8b9baba
b8b7b7b5b3b2afafaeabababababafafb0b3b3b3b3b3b3b4b4b4b4b4b5b5
b6b8b8babcbfc0c0c1c1c1c1bfbebbb9b6b3b0adaaa8a7a5a3a3a3a3a5a7
a8aaadafb1b4b7b8b9bababababab9b9b9b9b9b9b8b8b8b8b7b7b7b7b7b7
bababababababababab9b7b7b7b7b3b3b3b3b2b0b0afafafafaeaeadacab
a9a7a4a3a09e9d9d9d9d9ea0a3a4a6a8aaadafb1b3b4b6b6b6b5b4b2b0ae
aba8a7a3a29e9e9e9d9e9ea1a3a6a9adb0b3b6b8babababababdbebec0c1
c1c1c2c2c2c1c1c1c1bebdbab8b3afaba8a5a2a2a2a2a4a6a9abaeb1b4b6
b7b9bbbebebfc1c1c1c0bfbebdbbbbb9b8b8b8b8b8b8b8b8b8b9b9bababb
bebebebec1c1c1c1c1c1c1c1c1c1c2c3c4c4c5c7c7c8cbcbcccccccccac7
c4c1bdb9b5b2aeaba8a7a6a6a7a7a8a8a8a8a7a7a7a7a5a3a3a3a3a4a5a7
a7a8abaeb0b3b7b8bbbdbfc0c0c0c0c0bfbdbbbab8b7b6b6b4b4b6b7b7b7
b9babcbebfc0c0c0c0c0bfbdbbbab8b8b6b6b5b4b4b6b6b7b8b9babababa
b9b7b7b3b3afafadababababababafafb0b3b3b3b4b6b6b7b7b7b8b8b8b9
babcbdbfc0c1c2c2c2c1c1c0bebcb9b7b3b0aca9a7a5a4a3a3a3a3a3a5a7
a8abadafb1b3b6b7b7b8b8b8b8b8b7b7b7b7b7b7b7b7b7b7b7b7b7b7b6b6
babababababababababab9b8b7b7b6b3b3b3b1afafafaeacacababaaaaa8
a7a6a3a3a3a09fa0a1a2a3a4a7a9abacaeb0b2b3b5b7b7b7b7b7b7b6b4b2
b0adacaaa8a6a5a4a4a4a4a5a6a8aaadafb1b4b7b8bababababbbebebec1
c1c1c1c1c1c1c1c1bfbebbbab7b4b1aeaba8a7a6a6a8a8abadb0b2b5b7b8
b9bbbebebec0c1c0bfbebebdbab9b8b6b5b4b4b2b2b2b3b4b4b6b6b8b8ba
bbbdbebebfc0c0c1c1c1c1c1c1c4c5c5c6c7c8cacbccccccccccccccccc8
c5c2bfbbb7b2aeaba8a7a7a7a7a8a8a8a8a8a8a8a7a7a7a6a5a4a4a4a4a6
a7a8a9abaeb0b4b6b8b9bbbbbdbdbcbbbab8b7b6b4b2b1b1b1b2b3b4b6b7
b9babebec1c1c1c2c1c1c1c0bebdbbbbb9b9b8b8b8b8b8b9babababababa
b8b7b5b3b0afaeababababababacafb0b2b3b3b5b7b7b8b8b9b9bbbbbdbd
bfc0c0c2c4c4c5c5c4c1c1bebdb9b7b2aeaba8a6a4a3a2a2a2a3a3a3a6a7
a9abadafb2b3b3b5b6b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b3b3
babababbbdbebdbcbbbabababab8b7b7b5b3b3b1afafaeabababa9a8a8a7
a6a3a3a3a3a3a3a3a3a5a7a9abadafb0b3b3b5b7b7b7b7b7b7b7b7b7b7b4
b3b2afafadabababa9a9a9a9aaababadafb0b3b4b7b7b8babababcbebec0
c1c1c1c1c1c1c0bebebcbab9b7b5b3b0afadacacacadb0b0b4b6b8b9bbbd
bebebec0c1c1c1bfbebebebab9b7b7b3b3b0afafafafafafafb0b2b3b5b7
b8bababcbdbebebebebfc0c1c1c4c5c5c7c7cacccccccccccccccccccbc7
c5c1bdb8b5b0adaba8a7a6a6a7a7a8a8a8a8a9a9a9a9a9a9a9a8a8a8a8a8
a8a8aaabacafb1b3b5b7b7b8b8b8b7b7b6b3b3b1afafafafafafb0b3b4b7
b8babebfc1c1c3c5c5c3c1c1c1c0bebebebcbbbabababababcbebdbabab9
b7b6b3b2afafacabababababadafb0b2b4b5b7b7b9bababcbdbebec0c0c1
c2c4c5c5c5c5c5c5c3c1bfbcb8b5b1ada9a6a3a2a09e9e9f9fa2a3a4a7a9
abadafb0b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3
babababdbebebebebebebcbababab9b8b7b6b4b3b2b0afadababaaa8a8a7
a5a3a3a3a3a3a3a3a4a7a8abacafb1b3b4b7b7b7b7b7b7b7b7b7b7b7b6b3
b3b1afafafafaeadabababababababadafafb0b2b3b6b7b8b9babbbebebe
c1c1c1c1c1c1bfbebebabab8b7b6b3b3b2b1b1b1b2b4b5b7b8babcbebec0
c0c1c1c1c1c1c1bfbebebebab9b7b7b3b2afafadabababababadafb0b0b3
b6b7b8b9babababbbcbdbebfc0c1c4c5c6c7c9cbcccccccccccccccac7c5
c2bebab6b2afaca9a7a6a3a3a6a7a8a8aaabababadadadaeaeadadadabab
abababadafafb1b3b3b4b5b7b7b5b5b3b3b0afafadacabababadafb0b2b5
b7b9bbbec0c1c1c2c3c2c1c1c1c1c1c0bfbebebebebebebebebebdbabab8
b7b4b3b1afafaeacabadadb0b1b2b4b6b7b8b9babcbdbebec0c1c1c1c1c4
c5c5c5c5c5c5c5c3c1bfbcb8b5b0aca8a5a19e9e9e9e9e9ea0a3a4a7a8ab
adafb0b3b3b3b3b2b0b0b0b1b3b3b3b3b3b3b4b5b7b7b7b7b4b3b3b3b3b4
bababbbebebebebebebebebebcbababab8b7b7b6b3b3b0afafacabaaa8a7
a7a4a3a3a3a3a3a3a6a7a9abaeafb3b3b6b7b7b7b7b7b7b7b7b6b4b3b2b0
b0aeadacacacacacababababababababacadaeb0b1b2b4b6b7b8babbbebe
bfc1c1c1c1c0bebebebabab8b7b7b6b5b4b5b6b6b7b8b9bbbcbebfc0c1c1
c1c1c1c1c0c0bfbebebebebcbab8b8b6b4b1b0aeacababababababacaeb0
b2b3b5b7b7b8b8b8b8b9babcbebfc0c2c4c5c6c7c9c9c9c9c9c9c6c5c2c0
bdb9b6b1afabaaa8a6a3a3a3a5a7a8aaabaeb0b0b1b2b2b4b4b2b2b2b2b2
b1b1b1b1b1b2b3b3b3b3b3b3b3b3b3b3b0afafacabababaaaaababadafb1
b4b7b8bbbdbfc0c0c1c1c1c1c1c1c1c1c1c1c0bfbebebebebebebbbabab7
b7b4b3b2b0b0b0b0b0b1b2b5b6b8b9babcbdbebfc0c0c1c1c1c1c1c2c5c5
c5c5c5c5c5c5c3c0bebab8b4b0aca7a3a09e9d9b9e9e9ea1a3a4a7a9abad
afb0b3b3b3b2b0afafafafafb3b3b3b3b4b6b7b7b7b7b7b7b7b6b6b6b7b7
babababdbebebebebebebebebebabababab8b7b7b5b3b3b0afafadababa8
a8a7a5a3a3a3a3a3a6a7a8abacafb0b3b5b7b7b7b7b7b7b7b4b3b0b0aeac
aaa9a8a8a8a8a8aaaaaaaaaaaaaaaaaaaaababacaeafb0b2b4b6b8babcbe
bebfc0c1c1c0bebebebababab8b7b7b7b7b7b7b8b9bababebebec0c1c1c0
c0bfbfbfbebebebebebebebebcbabab8b7b5b3b1b0adacabababababaeaf
afb2b3b4b7b7b7b7b7b7b9babbbdbec0c0c1c2c4c4c5c5c5c3c1c0bebbb9
b7b2b0aeaba9a7a7a4a3a3a3a5a7a9abafb1b3b6b7b8b9bababab9b9b8b8
b7b6b6b6b6b6b6b6b4b4b3b3b3b3b3b1afafaeababaaa8a8a8a8a9aaacae
b0b3b6b8b9bbbdbebfc0c1c1c1c1c1c1c1c1c1c1c0bebebebebebbbab9b7
b7b6b4b4b4b4b4b4b6b7b9babcbebec0c0c0c1c1c1c1c1c1c1c1c1c2c5c5
c5c5c5c5c5c2c0bebbb8b5b0aca8a49f9e9d9a9c9e9ea0a3a4a7a8abadaf
b0b3b3b2b0afafafafafafb0b3b3b3b5b7b7b7b8b8b7b7b7b7b7b7b7b7b7
bababababcbcbebebebebdbcbbbabab9b8b7b7b7b4b3b3b1afafafababab
a8a8a7a4a3a3a3a3a3a6a7a9abacafb0b3b5b7b7b7b7b7b6b3b2afadaba8
a6a4a4a3a2a2a4a5a5a6a7a7a7a7a7a7a7a8a8a8a9abacaeb0b3b5b7b9bb
bcbebebfc0bfbebebebdbbbabab8b8b8b7b8b9bababababcbdbebebfbfbe
bcbcbcbbbbbbbcbcbcbebebebebdbdbbb9b8b7b5b3b1b0aeaeadadaeafb0
b1b3b4b6b7b7b7b7b7b8b9babababbbebebfbfbfbfbfbfbdbdbbb9b8b6b3
b0afacaba8a8a7a7a5a5a5a6a7a9acafb2b5b8b9bcbdbdbec0bebdbdbdbc
bbb9b9b9b8b8b7b7b7b7b6b3b3b3b3b0afafadababa8a8a7a7a7a7a8a9ab
adb0b2b5b7b8babbbdbec0c1c1c1c3c3c2c1c1c1c1c0c0bebebebbbabab8
b7b7b7b7b7b8b8babcbdbfc0c1c3c3c4c4c4c4c4c4c2c1c1c1c1c1c1c4c5
c5c5c5c4c2c0bebbb8b5b0aca9a5a29e9e9e9d9e9ea0a3a4a7a9abacafaf
afb0b0afafaeaeafafafafb0b3b3b5b7b7b7b9bab9b7b7b7b7b7b7b7b7b7
b7b8b8b9babababababababab8b8b8b7b6b5b4b3b2b0b0afafaeacababab
a8a8a7a6a3a3a3a3a3a3a7a7a8abacafb0b2b4b5b7b7b7b4b3b2afacaaa7
a4a3a09e9e9e9e9ea1a2a3a3a3a3a3a3a3a3a3a4a5a5a7a9abadafb1b5b8
b8babcbebebebebebebebcbabababab9b8b8b8b8b8b8bababababab9b8b8
b8b8b7b7b8b8b8b9bababbbebebebebebebcbab8b8b6b5b3b3b1b2b3b3b5
b6b7b8b8b9babababababababababababababababab8b8b8b7b5b5b2b0af
adabaaa8a8a8a8a8a8a8a8a9aaacb0b2b5b9babdbec0c1c1c1c1c1c0bebe
bebebcbababab9b7b7b7b7b3b3b3b2afafaeababa8a8a7a6a5a5a7a7a8aa
acafb0b3b5b7b8babdbec0c1c1c3c5c5c5c5c3c1c1c1c1c0bfbebebbbaba
babababababbbdbec0c1c3c5c5c5c5c5c5c5c5c5c3c2c1c1c1c1c1c1c1c3
c3c3c3c1c0bdbbb8b5b0aea9a6a3a19f9e9e9e9fa1a3a3a7a8aaababaeaf
afaeadacababababaeafafb0b3b3b6b7b7b7b9b8b7b7b7b7b5b5b5b5b5b5
b5b5b5b6b6b6b6b6b6b6b6b6b5b4b3b1b0b0aeadadacacabaaaaabababab
ababa9a9a8a8a8a6a7a8a8a8a9ababacafb0b0b2b2b3b3b3b1b0aeaba8a6
a3a09e9c9a9a9a9b9c9d9ea0a1a1a1a1a1a1a1a1a1a2a2a5a5a7a9abaeb0
b3b5b8b8b9b9babab9b9b9b8b8b8b7b7b7b7b7b7b7b7b7b6b6b6b6b5b5b5
b2b2b1b1b2b3b5b6b8b9babdbebec0c0c0c0c0bfbdbcb9b9b8b8b8b8b8b9
bbbbbcbcbebfbfbfbebebebebbbabab9b8b8b6b5b4b3b0b0b0afadacaaa9
a9a8a7a7a7a7a8a8a8a9abacadb0b2b5b8babdbfc1c1c1c1c1c1c1c1c1c0
bfbebebdbbbabab8b7b7b4b3b1b0afadadabaaa8a7a6a4a3a3a3a4a7a8aa
acafb1b3b4b7b8babdbec0c2c4c5c5c5c5c5c5c5c5c4c3c2c1c0bfbebdbc
bbbababbbdbebec0c1c1c5c5c5c5c5c5c4c4c3c1c0c0bebdbcbcbcbdbebf
bfbebbbbb9b8b4b1afaba9a6a4a3a09f9fa0a0a2a3a3a6a7a8aaabababab
abaaaaaaaaabababaeafafb2b3b4b7b7b7b7b7b7b7b6b5b3b3b2b2b0b0b0
b2b2b2b2b2b2b2b2b2b2b1b0b0aeadababa8a7a7a7a6a6a6a6a6a8a8a9ab
ababacadadacacacacacacacacacacacafafafafafb0b0b0aeaeaba9a7a4
a29e9c9a999999999a9a9d9e9f9f9f9f9f9f9f9f9f9f9fa0a3a3a4a6a8aa
acafafb2b3b3b3b3b3b3b3b3b3b3b3b3b4b4b4b4b4b4b4b3b3b3b3b3b0b0
afaeaeadaeafb1b3b6b7babcbec0c1c3c4c4c4c4c2c1c0bfbebdbdbdbdbe
bebebec0c0c1c1c1c0bfbebebabab8b7b5b3b0afacabaaa8a8a7a7a6a5a4
a4a4a4a4a4a7a7a8a9abacafafb2b5b8babdbec0c1c1c1c1c1c1c1c1c1c1
c1c0bebebdbabab8b7b4b3b0afacacaaa9a8a7a5a4a3a3a3a3a3a6a7a9ac
aeb0b3b4b7b7b9bbbec0c1c4c5c5c7c7c7c7c7c7c7c7c5c5c4c2c1bfbebe
bebdbdbebebebec0c1c1c2c2c2c2c2c1c0c0bebdbabab8b7b7b7b7b7b7b7
b6b4b3b2afafababa8a6a4a3a3a3a0a0a2a3a3a3a4a6a7a8a8a8aaaaaaa9
a8a8a8a8a8aaababaeafb0b3b3b4b7b7b7b7b7b6b4b3b3b1b0afaeadacab
afafafafafafafafafaeaeacabaaa8a7a5a3a29f9e9d9d9d9fa1a2a4a6a8
aaabadafafb0b0b0b0b0b0b0b0afafafafafafadacacacacababa9a7a5a3
a19e9c9a999999999a9b9e9ea0a2a2a2a2a2a2a2a2a2a2a2a3a3a3a3a6a7
a8a9aaaaacacacaeaeaeaeaeaeaeaeaeb0b0b0b1b3b3b3b3b3b3b3b3b0af
afadabababadafb2b4b7babcbec0c2c5c5c7c7c7c5c5c4c2c1c0c0bfbebe
bebebebfc0c0c0c0c0bebdbbb9b8b5b3b0aeaba9a8a6a5a4a4a3a3a3a3a3
a3a3a3a3a3a6a7a8ababaeafb1b3b7b8babebec1c1c1c1c1c1c1c1c1c1c1
c1c1c0bebebabab7b6b3b0aeaca9a8a6a6a4a4a3a3a3a3a3a4a6a8aaacb0
b1b4b5b7b8b9babdbfc1c3c5c5c7c7c7c7c7c7c7c7c7c7c6c5c4c1c1bfbe
bebebbbbbcbdbebebfc0c0c0c0c0bfbebdbbb9b8b6b3b1b0afafafafafae
aaaaaaa8a6a6a6a4a4a3a3a3a3a3a3a3a3a4a4a6a7a7a8a8a8a8a8a8a7a7
a7a7a7a8a8aaababafafb0b3b3b3b4b4b4b4b4b3b1b0b0afadacaaa9a7a6
afafafafafafaeacabababa9a8a7a4a3a19e9d9b9a989797999a9c9ea1a4
a6a9abaeafb2b3b3b3b3b3b3b3b3b3b0b0afafacababaaa9a8a8a7a6a3a3
a09e9e9d9c9b9c9c9e9fa1a3a5a5a7a7a8a8a8a8a8a8a7a7a7a7a7a7a7a8
a8a8a8a8a7a7a6a6a6a6a6a6a7a7a9aaabacaeafb2b3b3b4b5b5b5b5b3b2
b0afaeadadafafb2b4b7b9bcbec0c3c5c7c7c7c7c7c7c5c5c3c1c0bebebc
bcbbbababababcbcb9b9b8b7b5b2b0aeacaaa8a6a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a5a7a8a8ababafb0b3b4b7b9babebebec1c1c1c1c1c1c1c1c1c1
c1c1c0bebebab9b7b4b1aeaba8a6a4a3a3a3a3a3a3a3a4a6a8aaadb0b2b4
b6b8b9bababdbebfc1c2c5c5c6c7c7c7c7c9cbcbc7c7c7c7c5c5c1c1bfbe
bebbbabababababbbcbcbcbcbcbcbab9b8b7b5b3b0afacabaaa9a9a7a6a6
a3a2a2a1a09e9f9fa1a3a3a3a4a5a6a7a7a8a8a8a8a8a8a8a7a7a5a5a4a3
a3a5a7a7a8a9ababacaeafafb0b1b1b1b1b0afafafaeadababa8a7a5a3a1
b0b0afafafafaeacabababa8a8a7a3a3a09e9d9a99969595959597999b9e
a1a5a7aaadafb0b2b3b3b4b7b6b5b3b3b3b1afaeababa8a8a8a7a7a4a3a3
a29f9e9e9e9e9ea1a2a4a5a7a9aaabadadaeaeaeaeaeaeaeaeaeadadadad
ababa9a8a7a5a3a3a3a2a1a3a3a3a5a7a8abadafb2b3b6b7b8b8b8b8b8b7
b6b5b3b1b1b1b2b3b7b7babcbec0c2c5c5c7c7c7c7c6c5c4c1c0bdbbb8b7
b4b4b2b0b0b0b0b0b0b0b0aeacacaaa9a8a7a7a6a3a3a3a5a5a6a6a6a6a6
a6a6a7a7a7a8a8ababacafb0b3b5b7b9babbbebebebfc0c0c0c0c0c1c1c1
c1c1c0bebdbab8b6b3b0ada9a7a4a3a3a0a0a3a3a3a5a7a9acb0b2b5b8b9
bbbcbdbebebfc0c1c1c4c5c5c5c7c7c7c7c7c7c7c7c7c7c6c5c4c1c0bebe
bbbababababababababababababab9b8b7b4b3b0afacabaaa8a7a6a3a29f
9e9e9d9c9e9e9e9fa3a4a6a7a8a9aaabababababa8a8a7a7a5a3a3a3a3a3
a3a3a5a7a7a7a8a9aaabababacacacacacadacababababaaa8a7a5a3a19e
b3b3b1b1b0b0afafafadacaba9a8a6a5a4a29f9d9b9b9896959595959699
9b9ea2a4a7a9acaeb0b1b2b3b4b4b4b3b3b3b0afaeabaaa8a8a7a7a4a3a3
a3a3a2a2a2a2a3a4a6a8aaabadafb0b1b1b4b4b6b6b6b6b6b4b4b3b2b2b2
b1b0afadaaa8a6a4a3a2a0a0a2a3a3a6a8abaeb0b3b6b8babcbdbdbdbdbd
bdbab9b9b8b8b8b8b9bababdbec0c0c2c3c4c4c4c4c3c1c0bebab8b4b0ae
aba8a8a5a5a5a5a5a5a5a4a4a4a4a4a4a4a6a7a7a8a8aaaaaaacacacacaa
aaaaaaaaaaabababacafafb2b3b6b7b8bababbbdbebebebebebebebebfc0
c1c0bebebdbab8b6b3b0aca9a7a4a3a3a2a3a3a5a7a9acafb1b5b8babcbe
c0c0c0c0c1c1c1c1c2c5c5c5c5c5c5c5c5c7c7c7c6c5c5c5c3c1c0bebebe
babababababababababababababab9b8b7b5b3b1afaeababa8a7a4a3a19e
9e9d9d9d9e9fa2a4a7aaabadafafafafaeadababa8a7a4a3a2a1a0a0a1a2
a2a3a3a3a3a4a4a4a4a4a6a6a6a6a6a6a7a8a8a8aaaaa8a8a8a6a3a39e9c
b4b4b4b4b3b3b2b2b1b0b0aeadacaaa9a7a5a4a2a09e9d9b999696959595
96989b9d9fa3a5a7aaabadafb0b0b1b1b2b3b0afafacaba9a8a7a7a7a5a3
a3a3a3a3a3a3a5a7a8aaabaeafb0b3b3b4b7b7b7b8b8b9b9b9b8b8b8b7b7
b6b6b4b2b0adaba8a7a6a4a4a4a6a6a9abadb0b3b6b8bbbebfc0c1c1c1c1
c0c0bebdbdbcbbbababababdbebebebfc0c0c0c0c0bfbebbb8b5b0aca8a5
a29e9e9b9a9a9a9a9b9b9c9d9e9fa0a3a3a6a8aaacadafb0b2b2b2b2b0b0
b0aeaeadacacadaeafafb2b3b5b7b8babababababcbdbdbdbdbdbdbebebe
bfbebebebcbab8b6b3b0adaaa8a6a4a4a4a5a6a8aaadb0b2b5b8babdbec0
c1c1c1c1c1c1c1c1c1c3c4c4c4c4c4c4c4c4c4c4c4c3c2c2c0c0c0bebebe
bdbdbdbbbbbbbdbdbdbdbdbdbdbbbabab8b7b6b3b2afaeadaba8a6a4a3a1
9f9fa0a1a3a5a8abaeb0b2b3b3b3b3b1afaeaba9a7a4a3a09e9e9e9e9e9e
9e9f9f9f9f9f9f9f9f9f9f9f9fa0a2a3a4a5a7a7a8a8a8a7a7a3a3a09e9b
b7b7b7b7b6b6b6b6b6b5b5b4b3b1b0aeadaca9a8a6a5a3a19f9d9b989795
959596989a9c9fa2a4a6a8a9abacaeafb0b0b0b0afafaeadaaaaa9a9a7a6
a6a5a5a5a5a5a7a7a9abacafafb2b3b3b6b7b7b8babababababababab9b9
b9b8b7b6b3b1afaeacaaa9a9a9aaaaacaeafb3b4b7b9bbbebfc1c1c1c1c1
c1c1c0bebebebebcbababababbbbbab9b9b9b9b9b9b8b6b4b0ada9a5a19e
9b999696959595959696989a9b9ea0a3a6a8acafb0b3b5b8b8b8b8b8b6b6
b5b3b2b0b0b0b0b0b1b2b4b6b7b8bababababababab9b8b8b8b8b8b9babc
bcbcbcbbbabab8b7b4b3b0aeacaaa9a9a9aaabadaeb0b2b4b7b8babbbcbf
bfbfbfbfbfbfbfc0c0c0c0c0bebdbdbdbdbdbdbcbbbbbbbcbcbcbcbcbcbe
bebebebebebebebebebebebebebdbabab8b7b7b4b3b0afaeababa8a7a6a5
a5a5a6a7a9acaeb0b4b5b6b7b7b5b3b1afacaaa8a5a3a09e9e9e9e9e9e9e
9e9e9e9e9e9e9e9e9e9e9e9e9ea0a1a3a4a5a7a7a8a7a7a5a4a29f9d9b99
b8babababababababababab8b8b8b7b5b4b1b0aeadaaa9a7a5a3a19e9c9a
999898999a9b9e9ea2a3a6a7a8ababafafb0b3b3b3b3b2b1b0afadacabab
a9a8a8a7a7a8a8a8ababaeafb1b3b3b4b7b7b7b7babababababababababa
b9b8b7b7b5b3b2b0afadabababababacafafb2b3b6b8b9babcbebebfc0c0
bebebebdbcbcbabababab8b8b7b6b5b5b4b1b0b0b0aeadaaa9a5a39f9d9a
98959595959595959597999b9da1a4a8aaadb1b5b8b8bbbcbdbebcbcbaba
b8b8b7b7b5b5b5b5b5b7b7b8b9babababab8b8b7b5b5b5b2b0b0b0b1b5b5
b5b7b7b8b7b7b7b7b6b4b3b3b1b0afafafafb0b1b2b3b3b4b5b7b7b8b8b8
b8b8b8b8b8b8b8b7b7b7b6b5b5b5b5b2b2b0b0b0afafb0b0b1b5b5b7b8ba
bbbdbebebebebebebebebcbcbabab8b8b6b5b3b2b0afafaeabababa9a8a8
a9a9abacafb0b3b4b7b7b7b7b6b3b3b0aeaba8a7a4a3a3a1a1a3a3a3a3a3
a3a3a3a3a3a1a1a1a1a1a1a4a5a5a6a7a8a8a8a8a8a7a4a3a19e9c9a9995
b7b8b9babcbebebebebebebcbcbcbbbab8b8b6b5b2b0afadaba9a7a4a29f
9e9c9c9c9c9e9fa1a3a4a7a8a8ababafafb2b3b4b5b5b5b5b5b4b2b1b0ae
adacaba9a9a9aaababadafb0b3b3b5b7b7b7b7b7b8b9b9b9b9b9b8b8b8b7
b7b7b7b6b4b3b3b0afafadababababacadaeafb0b2b3b5b6b7b8b8b8b9b9
b9b9b9b9b9b8b8b8b7b7b6b5b4b2b0aeadadaaa9a8a7a5a5a2a09e9d9a9a
9b9a9b9b9b9c9d9d9d9d9fa2a4a6aaadb0b3b7b9bbbdbfc0c0c0bfbebebd
bbbabab9b8b8b8b8b8b8b9babababab8b7b6b5b2b0aeacacaaa9a9aaacac
afb0b1b3b5b5b7b7b7b7b7b6b5b5b5b4b4b4b4b3b3b3b3b3b2b1b0b0b0b0
afaeacacacacacacacacacacaaaaa8a8a6a4a4a4a4a4a4a6a8abadb0b4b6
b8babcbcbcbcbcbbb9b8b8b7b6b4b4b1b0b0afafafafafadabababababab
abababadafb0b2b3b5b5b4b2b1b0aeadababa8a8a7a5a5a6a8a8a9a9a9a9
a9a9a9a9a9a9a9aaaaaaaaadaeaeadadacabaaa8a6a4a29e9d9b99989595
b4b5b7b8babbbdbebebebebebebebebdbbbab9b9b7b6b4b2afadaba9a7a4
a3a2a09fa1a2a3a4a6a7a9abababadafb0b3b3b6b7b7b8b9b9b8b8b6b5b3
b1b0aeacababababacafafb2b3b6b7b7b7b7b7b7b7b7b7b7b7b7b7b7b6b6
b4b4b4b3b3b2b0afafafadabababababababacacadaeafafafb0b2b3b3b3
b3b4b4b4b5b6b6b6b4b4b3b3b0afafabaaa8a7a4a3a19f9f9e9e9e9e9d9d
9fa0a3a3a4a6a7a7a7a7a9abacafb1b3b7b8babdbebec1c1c1c0bebebebe
bebdbbbababababababababababab8b7b5b3b0aeaba8a7a5a4a4a4a4a4a7
a9abadafb2b3b5b7b7b7b7b8b8b7b7b7b7b7b7b4b3b3b1afaeacaba8a7a5
a3a3a3a3a2a2a2a2a3a3a3a2a09f9e9e9c9a9999999a9b9da1a4a8acafb3
b7b8babab9b9b8b7b5b3b2b0afaeadacacacacacacaeafadabababababab
ababababacadaeafafafaeaeadacabaaaaa8a8a8a8aaaaacadaeafafafaf
afafafafafafb0b3b3b4b6b7b6b5b2b1afaca9a7a3a09d9b989796959595
afafb1b3b6b8b9bbbdbdbdbdbdbdbcbbbbbabababab8b7b6b3b1afacaaa8
a6a4a3a3a3a3a5a7a8aaababadaeafafb0b3b3b6b7b8bababababab9b8b7
b5b3b1afaeacabacafafb0b3b4b7b7b8b9b9b9b9b9b8b7b7b7b7b7b5b3b3
b3b1b0b0b0afafafafaeabababababababababaaaaaaaaaaaaaaaaabacad
aeafb0b0b0b1b1b2b3b3b1b0afafacaba8a7a5a3a29e9e9e9e9e9e9fa1a3
a6a8acadb0b0b3b3b3b3b3b3b6b8b8b9bbbcbebebebebfbfbfbebebdbdbd
bdbcbbbababbbbbbbbbabababab8b7b5b2b0adaaa7a5a3a3a1a0a0a2a3a3
a7a9abaeafb3b3b7b7b7b8babab8b7b7b7b7b7b4b3b1afadaba8a6a39f9d
9a999898989898999b9b9b9b9b9b9a99969595949595979a9ea2a6aaaeb3
b5b7b8b8b7b6b5b2b0afadabaaa8a8a8a8a9ababacaeafafaeabababaaa9
a8a8a6a6a6a8a8a9aaa8a8a8a8a8a8a7a7a8a8ababadaeb0b1b2b3b4b4b4
b5b6b6b6b8b8b8babbbbbbbbb9b8b5b2aeaaa7a49e9c9896959595959595
a7a9aaadafb1b3b6b8b8b8b8b8b8b8b8b8b8b9bababab7b7b6b3b2b0adaa
a8a7a5a3a3a3a6a7a8aaababadafaeaeafb0b2b4b6b8babababdbebdbbba
b8b7b4b1b0afafafafafb2b3b6b7bababababababababab8b7b7b7b4b3b3
b1afafafafafafafafafadadadababababababaaa8a8a8a8a7a7a7a8a8a8
a9ababacafafafafafafafafafafacaba9a8a6a3a3a09e9e9e9ea1a3a6a9
acafb1b6b8b9bbbbbbbbbbbbbcbdbebebebebebebebebebdbbbababababa
bababababababbbbbabababab9b7b5b3b0aeaba8a7a4a3a3a2a1a2a3a3a5
a7aaabaeafb3b3b6b7b7b7b7b7b7b7b7b7b7b4b3b3b0afaba9a6a39e9c98
959595959595959598999a9a9a9a9a97959595949595979b9fa4a9adb1b5
b7b8b8b8b7b4b3b0afabaaa8a8a8a8a8a8aaacaeafafafafafacabaaa7a5
a3a2a1a1a1a2a3a3a3a3a3a3a3a3a3a3a5a7a8abacafafb3b3b3b6b7b7b7
b8b9babababdbec0c0c0bebebab8b4afaaa5a19d98959595959595959595
a3a3a5a7a8aaadafb0b3b5b5b5b5b5b5b5b6b7b7b7b7b7b7b7b6b3b3b0ad
aaa8a7a4a3a3a3a3a5a6a7a9a9aaabababacacb0b0b4b7b8bababcbcbcba
bab8b6b3b1afafafafafb2b3b7b8babcbebebebebdbcbcbabab8b8b7b5b4
b3b3b1b0b0b0b0b0b0b0b0b0b0b0afafafadadadababa9a9a8a8a8a8a8a8
a9ababacafafafb0b0b1b1b0b0afafacaba9a7a5a3a29f9e9ea0a3a5a7ab
aeb2b5b8babdbebebebebebebebebebebebebebebebebcbababababababa
bababababababababababab9b7b7b5b3b0afacaba9a7a6a6a6a6a6a7a9aa
abacaeb0b1b3b3b4b7b7b7b7b7b6b5b5b5b4b3b3b3b0afacaba8a5a29e9c
9a98989898999a9b9d9d9e9e9e9e9c9a98979697989a9da1a6aaafb2b7b9
bcbcbcbab9b7b4b2b0aeacabaaaaabacaeb0b1b2b3b3b3b1afadaba7a5a2
9f9e9e9e9e9e9e9e9e9e9e9e9e9e9ea0a1a3a5a7a9abadafb0b0b2b5b6b7
b7b8bababdbec0c1c1bfbdbbb8b2afaaa6a19c9895959495959595969797
a3a3a3a3a4a5a7a9acacafb0b0b0b0b0b0b0b2b2b4b5b6b7b7b7b7b5b3b0
afadaba9a6a6a4a4a4a4a3a4a5a6a6a6a4a5a7a8abadb0b2b3b6b8b8b9b9
b8b7b5b2b0afaeaeafafb2b4b7babdbec0c0c1c0c0c0c0bfbebdbbbab8b7
b6b3b3b3b3b3b2b2b2b2b2b2b2b2b1b0afafafafafafaeaeacacacabacac
acadaeafafafb0b2b3b3b3b3b2b0afafacaba9a7a5a3a3a09fa0a3a3a6a9
acafb3b5b8babbbdbdbdbdbdbdbdbdbdbdbdbdbdbdbbbabababababababa
babababbbbbbbbbabababab8b7b7b6b3b3b1b1b0afafafafb0b1b1b1b2b2
b2b1b1b3b3b2b2b2b1b0b0b0b0b0b0b0b0b0b0b0b0afafaeababa8a6a4a2
a09f9e9e9fa2a2a2a4a6a6a6a6a4a29f9d9d9d9da0a2a5a9adb0b6b9bcbe
bebebebcbab8b6b3b3b0afafafb0b0b1b3b6b7b7b7b5b3b0adaaa5a39f9b
9a97979899999999999898989898999a9b9d9fa1a4a5a8a9abaeb0b1b3b6
b7b9babcbebfc1c0bebdbab7b3afaaa7a39e9b989898999a9b9d9d9d9d9d
a5a3a3a3a3a3a3a5a6a8a8aaabacacacacacadaeb0b1b3b4b6b7b7b7b6b4
b3b1b0aeacabaaa9a8a8a7a6a5a4a3a3a3a2a2a3a4a7a7abacafafb2b2b2
b2b2b0afaeacababacadb0b2b7b9bdc0c1c3c4c4c4c4c4c2c1c0bfbdbbb9
b7b6b3b3b0b0afafafafafafafaeaeaeaeafafafafafafafafafafaeafaf
afafafafafb0b1b1b1b1b1b1b1b0afafaeababa8a7a5a3a3a2a0a2a3a4a5
a8aaadb0b2b5b7b8b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b8b8b9bababa
bbbdbdbebebebebbbabab9b7b7b7b7b6b6b6b6b7b7b9bababbbbbbbabab9
b8b6b4b2b0afaeacababaaaaaaaaaaacacadaeafafafafafadababa9a7a6
a6a6a6a7a7a8aaabababababaaaaa7a6a4a4a4a6a7a9abafb2b5b8babcbd
bdbdbab9b7b6b4b3b1b0afb1b2b3b4b5b7b7b7b7b6b2afaca8a49f9a9695
9292929494959595949494949494959596989a9b9ea1a3a7a9acb0b2b5b8
b9bbbdbec0c0c0bebcb9b7b4b0aca9a6a3a19f9e9fa2a3a3a3a6a7a7a7a7
a7a6a6a5a3a3a3a3a3a4a4a5a5a7a8a8a8a8a9abacaeb0b1b3b4b4b5b5b5
b3b3b3b2b1b0b0b0aeaeacaca9a9a6a5a3a19e9e9f9fa1a2a5a6a8aaaaab
adadacaaa9a8a8a8a8a9acaeb3b6b9bdc0c3c5c5c6c7c6c5c5c3c2c0beba
b8b6b3b1afafafaeadacacabaaa9a9a9a9aaaaaaaaaaabacacadaeafafaf
afafafafafafafafafafafafafafafafafabababa9a8a6a5a3a3a1a0a0a1
a2a4a6a8aaadaeb2b2b2b2b4b4b4b4b5b5b4b4b4b4b4b5b5b5b5b7b8baba
bdbebebebebebcbab9b8b7b5b4b4b4b5b7b7b9babdc0c0c2c3c4c3c0c0bc
bab7b3b0adaba8a8a5a5a4a4a4a4a6a8a8ababacaeafafafafaeadadabaa
abacacadaeb0b0b0b0b0b0afaeadabaaa9a9a9aaaaabafb0b3b4b5b7b8b6
b6b6b3b2b1b0b0b0afafafb2b3b3b7b7b7b7b5b4b1aeaaa6a29d98949290
8e9091919393939393939393939394959595989a9da1a4a8acaeb3b5b8bb
bdbec0c0c0bfbdbbb9b7b4b0aeabaaa8a6a6a7a8a8aaacacacb0b0b0b0b0
a8a8a8a7a7a5a4a3a3a3a3a3a3a3a4a6a7a8a8aaababafafb0b1b3b3b3b3
b3b3b3b3b3b3b3b3b3b3b3b2b0afada9a7a3a09e9e9d9c9c9e9ea0a1a3a5
a5a6a7a7a5a3a3a3a3a4a6a9acb0b4b8bcc0c2c5c5c7c7c7c5c5c4c1c0bc
bab7b4b1afafacababaaa7a6a5a4a3a1a1a1a1a1a2a5a5a5a7a9aaabadae
afafafafadadabaaa9a9a9a9a9aaababababababababa9a8a6a4a29f9e9e
9d9c9d9fa1a4a5a9a9aaadadadadadadacababababacadadadb0b1b4b7b9
babcbebebcbbb9b8b6b4b1b0afafb0b1b4b7b9bcbec0c2c5c5c5c4c1bfbc
b8b4b0adaaa7a5a3a3a3a3a3a3a3a6a7a8ababacafafafb1b1b1b1b1b0b0
b0b1b2b3b3b3b3b3b3b3b3b0afadababababababababacadafafb0b0afad
adaba9a9a9a9a9aaabadafb0b3b3b4b5b5b3b0afaca8a5a19d9a95949291
9393959797979797979797979797979797999c9ea2a6a9adb1b4b7babcbe
bfc1c0bfbebcbab8b6b4b0afafacababacadadafb0b1b2b5b5b5b7b7b7b7
a5a6a6a7a6a6a6a3a3a3a3a3a3a3a3a6a7a8a8abababafafafafafb0b0b0
b0b0b0b0b1b2b3b3b6b7b7b7b6b5b3b0aca9a5a29e9c9a9a9a9a9c9c9d9e
a0a1a2a3a3a2a09e9e9fa1a3a5a8acb0b6b9bdc0c2c4c5c6c5c5c5c2c0be
bab8b5b2b0afacababa8a6a3a29e9c9c9a9999999a9b9c9da0a3a5a6a9aa
aaaaaaaaa9a7a5a4a1a0a0a1a2a4a5a8aaababadadadacaca8a7a4a29e9c
9a9999999a9c9c9fa1a3a5a5a4a4a4a4a1a0a0a0a0a0a2a4a4a8aaaeb0b4
b7b8b9b9b8b8b5b3b0adaaa8a8a9aaacafb1b6b8bbbec0c0c1c0c0bcb9b6
b3afaca9a7a6a3a4a4a4a5a5a7a8a8aaacadafb0b1b3b4b4b5b5b5b5b5b5
b5b7b7b7b7b7b7b4b3b1b0aeadaaa9a9a7a7a7a7a9a9a9a9a9a9a8a7a5a4
a3a1a1a1a2a3a4a7a8abaeafb2b3b3b2b0afadaba9a6a3a19e9c9b99999a
9d9d9fa1a2a2a2a2a2a2a1a1a09d9d9da0a2a4a6abaeb1b4b7b9bbbebebe
c0bfbebcbab8b6b3b1b0afaeafafafafafb0b2b3b4b6b7b7b8b8b8b7b7b6
9e9fa2a2a3a3a3a3a3a3a3a3a3a3a3a7a7a8a9ababacafafafafafaeaeae
aeacacacaeaeafb1b2b4b6b6b7b7b5b3b0aca9a5a19e9b9a999999999a9b
9d9e9ea0a2a2a09e9e9e9e9e9fa2a5a9adb1b6b9bcbfc0c1c3c4c2c1c1be
bcbab8b5b2b0afaeadaba8a4a29e9c9996959595959596989b9d9fa3a4a6
a7a8a7a7a4a39f9d9b99999b9c9ea2a5a8ababafafafafafabaaa7a4a09e
9b9a999797999a9a9e9ea0a09f9e9e9c9b9a98979797989a9b9ea2a6aaad
b0b3b3b4b3b1afaca9a6a4a2a2a3a4a7aaadb0b4b7b9bbbcbdbbbab7b5b1
afaca9a8a7a7a6a7a8aaababadaeafb0b2b3b5b7b7b8b9b9babababababa
babab9b9b7b7b5b3b0aeaca9a7a6a4a4a4a4a4a4a4a6a6a7a6a4a3a3a09e
9e9e9e9e9fa2a4a6a9acafb0b3b3b3b0afafabaaa8a7a5a4a3a3a3a3a4a7
a7a9ababababababababaaa9a7a7a7a7a8abadafb2b4b7b9babcbebebebd
bdbbb9b7b6b3b0aeadacacabacacaeafafb1b3b3b5b6b7b7b7b6b6b4b3b2
95999c9e9fa0a0a2a3a3a3a3a3a3a3a4a7a7a8a9ababacacacacacabaaaa
a8a6a6a6a6a6a6aaabafafb1b2b4b3b3b0aeaba7a3a09c9a99989799999a
9b9e9ea0a3a3a3a2a09f9e9e9e9fa2a4a7aaaeb1b4b7b9bbbdbdc0c0bfbe
bebbbab8b6b5b3b3b2b0adaba7a39e9b9995959594949595989a9d9fa3a4
a7a8a7a7a5a4a19e9b9a999a9c9ea1a5a8aaadafafafafafadaba8a5a39e
9d9a9a9999999a9c9e9ea2a2a09e9e9c9a99979595959595979a9da2a6a9
acadafb0aeadaba8a5a39f9e9e9ea0a3a6a9acb0b3b6b8b9b9b8b7b4b2af
adabaaa8a8a8a9ababaeafafb1b2b3b5b6b7b9bababcbdbdbebebebebebe
bdbcbabab8b7b3b0aeaba8a5a3a2a09f9fa2a2a3a3a3a5a7a7a6a4a4a2a1
a0a0a2a4a4a7a8aaadafb0b3b3b3b1afafafabababaaaaaaaaacacacadaf
b0b0b0b2b2b2b2b2b0b0afaeadacacadaeb0b2b3b5b7b7b9b9b9b9b9b9b7
b6b4b2b0afabaaa9a8a8a8a8a9aaabacadaeafb0b1b1b2b2b1afafaeaaaa
9093979a9e9ea2a3a3a3a3a3a3a3a3a4a6a7a7a7a8a9abababa9a8a7a5a3
a29f9d9d9d9d9d9da1a4a6a9abaeaeafafafacaba7a4a19f9c9b9a999a9a
9a9d9ea1a3a3a5a5a5a5a3a3a3a1a2a3a3a4a6a9abaeb0b1b4b6b8b9b9ba
bababababab8b8b7b7b7b4b1ada9a5a19c9895929191919395989c9fa3a7
a9abacacacaca9a8a5a4a2a2a4a4a6a8aaabacafafafafadababa7a5a39f
9e9b9a9a9a9a9c9e9fa2a3a4a5a4a3a19f9f9d9b9b9a9a9a9b9c9ea2a5a8
ababababababa9a7a4a39f9e9e9e9ea2a3a7aaadb0b3b6b7b7b7b7b4b3b0
afaeacabababababacafafb0b2b3b3b4b6b7b8b8bababcbcbcbcbebebebe
bebebabab8b6b3afaba8a4a29e9e9e9e9e9e9ea2a3a4a7a8a8a9a9a9a8a8
a8a8a9acacadb0b0b0b3b3b3b2b0afafafafadadadadafafb0b0b0b3b3b3
b3b3b4b5b6b7b5b5b5b3b3b3b2b0b0b2b3b3b3b3b3b5b5b5b3b1b1b1afae
acaaa8a6a6a3a2a2a3a3a3a5a5a5a6a6a6a7a9a9a8a8a8a6a6a6a6a6a3a3
8c8f93989b9ea2a3a3a5a6a7a7a7a7a7a7a7a7a7a7a8a8a8a8a8a7a5a3a1
9e9b99969595939596989c9fa3a6a9abacafafadacaaa8a6a2a09e9c9c9b
9b9e9e9fa3a3a6a8a8a8a8a7a6a5a3a3a2a0a0a1a1a4a4a6a9acaeb0b1b4
b4b6b7b8b8b8babababab8b6b2b0aba7a29d98959291919295989da2a7ac
afb1b4b6b6b6b6b3b1b0aeaeaeaeaeadadacababacabababaaa8a6a3a29e
9e9d9a9a9c9e9fa2a3a6a7a9aaaaaaaaaaaaa9a6a6a6a5a4a5a6a6a8aaab
adadafafadacaba9a7a6a5a3a2a2a3a3a4a7a9acafb2b4b7b7b7b7b7b6b3
b2b0afaeababababababadaeafafb0b0b0b0b0b3b4b4b4b4b4b7b8b8babc
bcbbbabab8b6b3b0aca9a6a3a19e9e9e9e9e9ea1a3a5a7a9ababacadadb0
b1b1b2b5b6b5b5b5b3b3b2b0afafaeadacabaeafafafafb2b3b3b3b3b3b3
b3b3b3b5b7b7b7b7b7b7b7b4b3b3b3b3b3b2b1b0b0b0afadacaba9a8a5a4
a2a09f9e9e9c9e9e9e9e9e9f9f9f9f9e9b9b9b9b9b9c9c9e9e9e9fa1a3a3
8c8d9094979b9ea2a3a6a8a8a8aaaaaaaaa8a8a8a7a8a8a8a8a8a8a7a4a3
9f9c9996959291919195969a9da1a5a8aaabafafafafadabaaa7a4a2a09e
9e9e9e9e9fa2a3a6a8a9ababa8a8a6a3a19e9d9b9b9b9b9b9fa1a4a7a9ac
adb0b0b3b4b6b6b8b9babab8b7b3b0aca8a49f9b999696979a9ea4a8aeb2
b6b9bbbdbdbdbdbdbab9b9b8b6b5b3b1b0afadababa9a8a7a6a4a3a19e9e
9e9e9d9e9fa3a5a7aaacafb0b2b2b3b5b5b5b4b3b3b1b0afafafafafb0b1
b1b1b1b1b1b0b0afaeadaaaaa9a8a7a7a7a8ababaeb0b3b7b7b8b9b8b7b7
b5b3b1afaeababa9a8a8a9ababaaaaa9a8a8a8a7a7a7a7a8a9abaeb1b3b7
b8bababbbbb9b8b6b3b0aeaaa8a5a29f9e9e9ea0a3a4a7aaabadafb0b2b5
b7b8b9b9bab9b8b7b5b3b0afacabababababacafafafafb0b0b0b0b0b0b0
b0b1b2b3b3b5b7b7b7b7b7b5b3b3b3b3b1afafafafadababa8a7a4a3a09e
9e9b9a9a9a9a9a9a9a9a9998969696929292929495979a9b9e9fa2a3a5a6
9190919194969a9da0a2a5a6a7aaabababababaaa8a8a8a8a9aaaaa8a8a5
a4a19e9b98969494949596999b9fa3a7aaabaeafafafafafaeaba9a6a4a2
9e9e9e9d9d9e9fa2a4a6a8a8a8a8a7a3a19e9a96959392939596999d9fa3
a6a8abadafb0b2b4b6b8b8b8b7b6b3b0adaba7a4a3a0a0a3a4a8adb1b6ba
bdc0c1c2c2c2c1c0c0bebdbdbab8b7b4b2afadaba9a7a5a4a3a3a09e9e9e
9e9e9ea1a4a7aaaeb1b4b7b8babbbebebebebebebdbab9b8b7b6b6b6b6b6
b6b6b5b4b4b4b4b4b3b2b2b0aeadabaaa9a8aaabacafb1b4b7b7b9b9b8b7
b7b3b3b0afababa8a8a8a8aba9a8a6a4a09e9b9a989898999b9ea3a8adb2
b6b9bcbfbfbfbebebbbab8b5b0aca8a4a09e9e9e9fa2a4a7aaacafb1b5b7
bababdbdbcbab9b7b4b1afadabababababababacaeaeaeaeadacacabacac
aeafb0b3b3b4b7b7b7b7b7b4b3b3b3b3b2b0b0b0afaeacaba9a7a4a3a19e
9e9b9a9a9a999896969593908f8d8c8c8c8d8f93969a9da0a3a5a7a8aaac
9a96949192929395989b9da0a3a5a7a8a9ababababababababababadabaa
a9a7a5a29f9d9b9b9998999b9ea0a3a7aaabaeafafafafafafacaba8a6a3
a09e9c9a9a9b9b9c9fa1a4a5a5a5a4a29f9c9894918d8d8b8c8e9094979b
9ea1a4a7a9acaeb0b2b4b5b7b7b6b3b3b0afadabaaa9aaabadb0b5b8bcc0
c1c3c5c5c3c3c0c0bdbcbbb9b8b7b5b2b0aeacaaa8a7a4a3a3a19f9e9e9e
9e9fa2a4a8acb0b5b8bbbebfc1c2c4c4c4c4c3c1c0bebcbab8b7b7b7b7b6
b5b5b7b7b7b7b7b7b7b6b3b3b0afacaaa8a8a8a8a9acadb0b3b5b6b7b7b7
b5b3b3b0afaeadacacacadadaca9a6a39d9995928f8d8d8e91959ba2aab1
b7bbbfc2c4c4c4c4c2c1bfbbb7b0aaa5a19e9c9b9c9d9fa2a5a8abafb3b6
b9babcbcbbbab9b7b3b1afaeacabababababababababababa9a8a8a8abab
aeafb1b4b5b6b8b8b8b7b7b6b5b5b5b5b5b5b5b4b2b2b0aeadaba9a6a4a2
9f9e9a9a97969492908e8d8b8988888b8c8f93979ba0a4a6a8aaabacaeaf
a39d999492909090919395999c9ea2a4a7a9ababadadadadaeafafafafaf
adadaba8a6a5a2a09e9d9c9e9ea0a3a6a7abacaeafafafafafaeabaaa7a4
a19e9b9a999797989a9b9d9fa1a2a3a09e9c9996938f8e8b8a8c8e919497
9a9d9fa2a4a6a8abadaeb0b1b3b3b3b3b0afafafafafafafb2b4b7babcbf
c0c0c1c0c0bebcb9b8b5b5b3b1b1afadacaaa8a7a5a4a2a09e9d9c9c9c9c
9da0a3a7acb0b6b9bec0c2c4c5c5c5c5c5c5c3c1bfbebab8b7b6b4b3b3b3
b3b3b3b3b6b7b7b7b7b7b4b3b1afacaaa8a7a7a7a8aaabafb0b3b3b3b3b3
b3b3b3b3b3b2b1b1b3b5b5b5b3b0aba6a19b96908c8a88898c90979fa9b1
b7bdc2c5c7c8cacac7c6c3bfb9b3ada7a29e9b9a9a9a9b9e9fa3a7abafb4
b8babab0a3a8bab8b7b5b4b1b0afadabababa9a9a9a7a5a5a5a5a6a8abac
afb2b5b7b8bababababab9b8b8b7b7b7b7b7b7b7b7b6b3b3b0afabaaa7a4
a29e9c9a97959491908e8c8c8c8e8e9193979b9ea2a6a8a8ababababacad
a8a5a09c9895939191919395989b9ea2a6a9acaeb0b0b1b1b1b1b1b2b3b2
b1b0b0adaca9a7a4a29f9e9e9d9d9ea2a4a6a8aaacaeafafafafaeadaaa8
a4a19e9a989595959596979a9c9e9e9fa1a09f9d9d9b9a979797989a9b9d
9d9e9f9fa1a3a4a5a6a8a9acadaeaeafafafafafafafafafb1b3b5b6b8b9
bbbbbbbbb9b8b7b5b2b0afafafadababaaa8a6a3a29e9c9a969693939496
999da2a7acb2b6bbbfc1c2c3c4c4c4c4c3c2c0bfbdbab8b6b4b2b1b0b0b0
b1b2b3b3b3b7b7b7b7b7b6b3b2afaeabaaa9a9a9abacaeb0b2b4b4b5b5b4
b3b3b3b3b3b3b3b6b7b9babab8b5b0aaa49e97928d8a88888b8f969fa9b0
b7bec3c6c8cccccccbc7c5c0b9b4afa9a4a19e9c9b9b9b9c9ea2a6aaaeb3
b7b09788888895bcbcb9b8b5b3afadaaa8a5a4a1a09f9e9e9fa3a5a8acaf
b2b6b8b9bbbdbebdbbbabab9b8b7b7b6b6b6b6b6b6b5b3b3b1afaeaba8a6
a4a19f9c9b99989897959696989a9b9d9ea2a3a5a7a6a6a6a6a6a6a6a6a7
aba8a5a39e9c9996969696989b9da1a4a7abafb1b4b5b6b6b6b6b6b5b4b4
b4b3b3b0afadaaa7a4a39e9c9a9a9a9b9d9ea2a5a8abadafafb0b0b0afad
aaa7a39e9c989695959595959a9b9ea1a3a5a6a7a7aaaaaaaaa8a9aaaaa9
a7a7a5a4a2a2a1a1a2a3a4a6a8aaabadafafafafafafafafafb0b0b2b4b4
b4b6b6b5b4b4b3b3b0afafafafafaeadaca9a8a4a19d9995918e8c8c8d8f
94999fa5abb0b6babdbfbfbfbebebebebebbbabab8b6b4b2b0aeadacacad
aeafb0b2b3b5b7b7b7b7b7b4b3b0afaeadacaeaeb0b0b3b4b6b7b7b7b7b4
b3b2b2b0afafb0b3b4b7b7b8b6b4b0ada7a29c9793908e8d90949aa1a9b1
b7bdc1c5c7c8c8c8c6c4c0bcb8b4b0aca9a7a5a3a3a3a3a3a3a6a8acb0b4
ac8c8888888888a5bebcb9b6b1ada9a6a39f9c9b9a9a9a9d9fa4a7abafb2
b6b7bababbbcbbbab9b8b7b6b3b3b3b2b2b2b2b2b2b2b1b0afafacabaaa8
a7a5a4a3a3a3a3a3a3a4a4a6a6a7a7a7a6a7a7a4a4a2a19f9e9e9fa0a3a4
a9a8a6a3a29e9d9b9b9b9b9d9ea2a5a7aaaeb1b4b7b8b9b9b9b9b8b7b7b7
b7b6b4b3b1afadaaa7a4a19d9a97959696989a9da2a6aaadafb2b3b4b4b2
b0aeaaa6a29e9b98969595979a9b9ea2a5a8abaeb0b2b3b3b3b3b3b3b3b3
b1b0aca9a6a4a3a2a2a3a3a4a7a8abacafb0b0b0b0b0b0afafafafafb0b0
b0b0b1b2b3b3b3b3b3b2b2b3b3b3b3b2b0aeaca9a4a09b96918c89878a8d
92969ea4aaafb4b8babbbab9b8b6b6b6b3b2b2b2b0afafacaaa9a6a6a6a8
aaabaeafb2b4b7b7b7b7b7b4b3b3b0afafafb0b2b3b5b7b8b8b9b7b7b4b1
b0aeaaa9a6a6a7a7aaadafafb0b0afacaaa6a39f9c9a9796999ca1a6abb1
b6babec0c0c0c0c0bdbab8b6b5b3b2b0b0b0b0aeadadacacacacafb0b3b6
9a8888888888888cb2b8b5b0aca9a4a19e9b9a9a9b9b9fa3a5a9acb0b2b4
b7b7b8b8b8b6b6b5b2b0afaeaaaaaaaaaaaaaaabacacacacacacabababaa
a9a8a8a8a8aaabacacaeb0afaeaeababa8a6a3a09e9c9a98989a9b9ea3a7
a8a7a4a3a39f9e9e9e9e9e9ea2a3a6a9acafb2b5b7b9babababababab8b7
b7b7b7b6b3b3b0aeaba8a5a19d9a9795959595999ca2a5aaaeb0b3b6b7b7
b6b3b0aca9a5a29e9c9a9a9a9a9e9fa3a7a9acafb3b4b7b7b7b7b7b7b7b7
b6b3b0adaba8a6a4a3a3a5a7a8abadafb1b3b4b5b5b5b4b3b2b0b0b0b0b0
b0b0b0b3b3b3b4b5b7b7b7b8b8b8b8b7b7b4b2b0aba6a29c96928e8d8e90
949a9fa5aaaeb2b7b7b7b7b5b3b1afaeacabaaaaa9a7a6a6a3a19f9ea0a2
a4a6a9acafb2b4b7b7b7b6b3b3b2b0afafb0b2b3b4b7b7b8b8b8b6b4b0ad
a9a6a19e9c9998999d9fa3a6a9aaabababaaa9a7a4a4a1a1a4a5a8acafb2
b6b7b8b9b9b9b8b5b4b2b2b3b3b3b4b5b7b7b8b8b8b8b6b4b4b4b5b5b7b7
998888888888888897b3adaaa6a3a09e9e9e9fa0a2a4a7a9acafb0b3b3b3
b3b3b3b1b1b0aeadaaa9a6a5a3a3a3a3a3a5a7a8a8a9ababababa9a9a9a9
a9a9aaababadafafb2b3b3b2b0afaba8a6a39f9c99969595969a9ea3a9af
aaa8a6a5a3a3a09e9e9e9c9d9e9fa1a4a7a8acb0b1b4b7b8babababab9b7
b7b7b7b6b3b3b1afaeaba8a5a29e9c9a979598999c9fa4a8abafb2b4b7b7
b7b6b3b0ada9a6a39f9d9b9a9b9d9fa2a4a7aaadafb0b2b5b5b5b5b5b3b3
b3b2b0aeabaaa9a9a9aaaaaaadafb0b2b5b7b7b8b8b8b8b8b7b7b6b6b6b6
b6b6b6b7b7b8b8b8b9babababababababab8b7b4b2afaba7a39f9b99989b
9da1a4a8adb0b4b7b8bab8b7b5b3b0afacaba8a7a4a3a39f9e9b9a9a9b9d
9fa3a5a8abadb0b0b2b1b0b0afaeadadaeafafb0b2b3b5b6b6b5b1b0aba7
a29d9a969391919195989ca0a4a7abababacabababaaaaaaabacaeb0b3b3
b4b5b5b5b4b1b0afafafafafb3b3b7b8b9bbbcbebeb7a39488a6b7b5b2b1
9a88888888888888889fa7a4a3a3a3a3a3a5a5a7a9abadafb0b2b2b2b2b0
b0adacaca9a8a7a5a4a3a3a3a3a3a3a3a5a7a8a8a8a7a7a6a4a4a4a3a2a1
a1a3a4a4a7a9acaeafb0b0afafacaba8a5a39f9c9a9897979a9da3a8adb2
aeadaaaaa8a7a5a3a09e9d9b9a9b9b9ea0a3a5a8abafb1b4b7b8b9bab9b7
b7b7b3b3b3b1afaeaba9a7a4a39f9e9b9a9a9a9a9b9ea1a3a7aaadb0b2b3
b4b4b3b2afaca9a5a39e9d9a9a9a9b9c9ea2a5a8aaacafb1b3b3b3b4b4b4
b4b3b2b1b0b0afafafb0b1b2b3b6b6b8b8b9babababababababababababa
babbbbbcbdbdbdbdbcbababab9b9b9b9b9b8b7b7b6b4b1b0aeaba9a6a6a6
a6a8aaadb0b3b6b8bababbbbb9b9b6b4b1afaca9a7a3a19e9c9a99999999
9b9b9e9fa4a4a6a7a7a7a7a8a8a8a8aaabacafafb2b3b3b3b3b1afaba8a4
a09c999694949494969a9ea1a5a7abacafafafafafafafafafb0b2b3b3b3
b3b2b1b0afacabaaaaaaadafb1b4b7babcbfc0c09f8787888889a8b0aeac
a58a888888888888888a9fa3a3a3a4a5a7a8a8abababaeaeaeaeaeadacab
a8a7a4a4a2a0a0a09e9f9fa3a3a3a4a7a7a7a6a5a4a19e9c999796969696
96979b9ca2a4a7abacaeafafafaeacaba9a7a5a29f9d9d9d9ea1a4a7aaaf
afafafaeadacaaa8a5a39f9e9b9a9a9a9c9ea1a4a7aaaeb1b4b7b8babab9
b8b7b5b3b2afafabaaa7a5a3a19e9e9c9a9a9b9b9b9e9ea1a3a4a7a9abac
afafafafaeaca9a7a39f9e9a999897989a9b9ea2a5a8abaeb0b3b4b7b7b7
b7b6b6b6b6b6b6b6b7b7b7b8b9b9b9bababab9b9b9b8b8b8b8b8b9b9b9b9
babbbdbebebebebdbbbab8b7b6b3b2b2b2b2b2b2b2b1b3b3b2b1afaeadab
abababaeafb1b3b7b8babdbebdbdbbb9b7b4b1aea9a6a29e9d9a9a999896
969696969899999a9a9a9a9d9fa3a6a8abaeb0b2b3b3b3b3b3b0aeaba7a4
a39f9d9b9a9a9a9a9c9ea1a4a7a8abadafafb0b2b2b0afafafb0b1b1b0b0
b0aeadabaaa8a7a6a6a6a7aaadb0b4b8babdc08d47728388888892a9a5a2
9e94888888888888888890a6a4a6a7a7a8a8a8a8aaaaaaaaaaa9a8a7a4a3
a19e9d9d9b9c9e9e9e9e9fa2a2a2a2a3a29f9e9a9693908d8c8c8d8d8f90
9395989ca0a4a7abacafb0b0b2b2b0b0aeaca9a6a4a2a09e9fa1a3a4a7a8
acadafafafafaeaeaba8a5a29f9d9b9a9a9e9ea2a5a9acb0b4b8babcbdbc
bcb9b8b5b3b0afacaaa7a4a3a09e9e9e9d9d9e9fa0a0a0a1a0a0a1a1a2a2
a3a5a6a6a6a6a5a4a39f9e9a9a98969597999b9ea1a5a8abafb2b3b6b7b7
b9b8b8b8b9b9b9b9bababababababab9b8b8b5b5b2b2b2b2b2b2b2b2b2b5
b6b6b8b9b9b9b9b8b8b6b2b0adaaaaa8a8a8a8aaaaabaeaeaeaeadadacab
a9a9a9a9aaacafb2b5b8babbbdbebebcbab8b5b1ada8a49f9d9a9a999895
959392908f8f8f8f8f9093979ca1a5a9adb0b3b4b6b6b6b3b3b0aeaba9a7
a6a3a2a2a1a0a0a2a2a2a3a6a8a9abacaeafafb0b0afafafafafaeadadac
aba9a7a5a3a19d9d9d9d9ea1a5a8acb0b4b8a54133597f86888889999a96
94928d888888888888888898aaa9a8a8a8a8a8a8a8a8a8a7a6a4a3a19f9e
9c9a9a9a9a9a9d9e9e9e9d9c9c9c999895928f8b8a888887898b8e919396
989b9fa2a5a8abaeb0b1b4b5b6b6b6b5b2b0adaaa7a5a3a2a2a2a3a4a6a7
a0a4a8abadafafafafaca9a6a3a09e9e9e9e9fa3a6aaaeb1b6b9bec0c1c1
c0c0bdb9b7b4b1afaca9a7a5a2a1a1a1a1a2a3a4a5a5a5a5a3a3a09e9d9a
9a9a9b9c9c9ea09f9e9e9e9d9b9a9999999a9b9ea1a3a7aaadafb2b4b5b7
b7b7b7b7b7b8b8b8b8b8b8b8b8b8b7b6b5b3b0afacaaa9a9a9a9a9a9a9aa
adadb0b0b3b5b4b1b0adaaa7a4a19f9c9c9c9c9c9ea1a2a5a5a8a9a8a5a5
a4a2a1a2a3a6a8acafb3b7b8babbbcbabab8b5b0aca7a39e9a9999979595
9290908d8c8c8c8d8e9093989ea4a9adb0b3b5b7b7b7b6b3b2afacaba9a7
a5a3a3a3a3a3a2a1a1a2a3a4a6a7aaabacafafafafafafafacababaaa9a7
a5a29e9c9996939291909395999da2a8abaf8b36333871838888888c908e
8c8c8b898888888888888889afadadadadabababa9a9a8a7a6a3a3a09e9e
9d9c9c9c9c9d9c9c9a99979593918e8c898585838486898e9195999da0a1
a4a5a9a9acaeb0b2b3b5b7b7b8b8b7b7b3b0afacaaa8a7a5a5a5a7a9a8a7
94989ea3a8acafb0b1b1afaca9a6a3a19f9fa2a3a6a9adb0b4b8bbbec0c2
c1c0bfbdb9b7b3b2afacaba8a7a5a5a5a6a8a9aaabadadabaaa8a5a39f9c
9a97959596989a9c9c9d9d9d9c9b9a9a9b9d9e9ea2a3a7a9abadafb0b1b2
b2b2b3b3b3b3b4b5b5b6b6b5b5b4b3b2b0afadaba8a6a5a2a2a2a2a2a2a4
a5a7a9aaacacacaca8a7a49f9c989694929292939596999b9d9fa0a09f9d
9c9c9c9d9ea1a5a8acb0b3b5b8b8b8b8b7b5b1aea9a49e99959493939291
909091929293949496979a9ea2a6a9acafb1b2b3b4b2b0b0adaba8a5a4a1
9f9d9c9b9b9b9a9a9a9b9c9ea1a4a5a9aaacadaeaeaeadababaaa8a7a5a1
9e9b9794918e8c8a898a8c8f92979ca0a5a8a3513333517e86888888898b
8b8b8f90898888888888888892b4b1b1b1b1b1b1b0adacaba8a7a4a3a19e
9e9d9c9b9998969592908d8b8887858483828384888c92979ca1a4a6a9a9
abacadafafb0b2b2b3b5b6b6b6b6b5b3b1b0afadacacacadaeaeaeaeaead
92969ca1a6abafb2b6b6b7b5b2afaba8a7a4a3a3a3a5a7aaacb0b2b5b8b9
bababab8b7b4b0aeacaaaaa9a8a8aaaaabaeaeb0b2b2b2b2b0aeaca9a5a2
9d9b97959596999a9a9a9a9a9a9a989898999a9c9ea1a3a6a8aaacadaeaf
afafb0b3b3b3b3b5b6b6b6b5b4b3b3b0afafaba9a6a3a19e9d9d9b9c9d9d
9fa1a3a4a6a6a5a4a29f9b97938f8d8b8b8b8b8d8d919395999a9b9b9a9a
9a9a9a9c9ea2a5a9acafb2b3b4b4b4b4b3b0aeaba7a39e99969494929294
9495959698999b9b9b9b9e9ea0a3a4a7a7a9aaabababa8a7a6a3a19e9d9b
9996969595959492949496979a9c9fa3a4a7a8aaaaaaaaa9a8a8a7a4a39f
9d9b969593908f8d8c8d8d8f9295989b9d9f9f7f36333970828888888995
96989ba0918888888888888888a4b4b3b3b3b3b3b1afaeaba9a7a4a2a09e
9c9a989592908c8a8785848382828282828283868b90969ca1a4a7a8abab
abaeaeaeaeaeadadaeafafafafafafafaeafafafafb1b2b3b4b4b3b3b3b2
9b9ea1a5a9acb0b4b7b8bab9b8b6b3b0aca9a7a6a3a3a4a4a5a6a8aaadaf
afb0b0afafaeaaa9a6a6a5a4a6a6a8abacafb0b3b3b5b6b6b3b2afaba8a4
a09d9a9898989a9c9d9c9b9a99969595959596979a9c9fa3a5a7a8ababad
afafafb2b3b3b6b7b8b8b8b8b8b6b4b2b0afadaaa7a4a19e9a9896969698
999b9d9e9fa2a19f9e9b97948f8c8b878788898c8d9094969a9b9d9d9d9b
9b9d9ea0a3a6a9acafb1b3b3b3b3b1b0afafacaba8a8a4a3a09e9c9c9c9c
9c9e9f9e9d9d9e9e9e9c9b9b9b9b9c9d9d9d9d9e9e9e9e9d9d9d9c9a9a99
98969595959492919191949595999b9ea2a3a7a8a8a8a8a8a8a8a8a7a5a4
a19f9f9d9b9b9a9997979696989a9b9b9b9c9c9a4e3333527d8688888898
a7a7a8aba78d888888888888888bb2b3b3b3b3b3b0afacaaa7a4a29e9d9b
9794918e8b8886848382828282828282828283878b8f94999da0a3a6a6a6
a6a6a6a6a5a3a2a2a2a3a4a5a5a6a6a7aaabadafb0b3b3b5b6b4b2b1b0af
a8aaacadb0b2b4b7b7b7b8b8b7b6b5b2afadaba8a6a3a3a3a3a3a3a3a4a6
a6a7a7a7a7a6a5a3a19f9e9e9ea0a2a6a8abaeb0b2b3b3b3b3b1aeaba7a3
9f9c999797979a9b9e9e9e9a9a97959595959596999b9ea3a3a6a7a8aaab
abadafb0b2b3b6b8babababababab8b6b4b3b0afaba7a39d999592909090
929395989b9c9e9e9e9c9a9795938e8e8d8e8e9193969a9c9fa1a3a3a3a1
a2a3a4a6a9acafb0b3b4b4b3b3b1afafafafafafafaeadaeadacabaaa9a9
a9a7a5a5a3a29e9e9b9a979595949494949494959697979a9a9a9a9a9b9c
9c9b9a999997979595959595989a9d9ea2a5a7a9aaabadadadadadacaba9
a8a8a7a7a5a5a5a5a5a5a4a4a5a5a5a1a1a1a2a58833333968818888888b
afb0b0b0b09e888888888888888894b8b6b4b3b2afacaaa5a29e9c9a9794
928f8c8b89898989898989898885858483838384878a8e9295999c9d9ea0
a09e9d9c9897979797979797989b9c9ea2a5a7aaadafb0aeaeaca9a6a4a1
afb1b2b3b3b4b5b5b5b5b3b0b0b0acacaca9a8a7a6a3a3a3a3a3a4a6a6a6
a7a7a7a7a7a5a4a3a19e9d9a9a9c9ea1a4a7aaacaeafb0b0b0afaca9a5a1
9d98959493939496989a9a9a9a9998979797999c9da1a3a6a7a8a9a9abaa
a9a9a9abacafb0b3b5b8b9bababab8b7b6b2b2b0aea9a59f99948f8c8989
898a8d9094989b9d9e9e9e9d9d9b9898959697989a9c9ea2a3a3a7a7a6a3
a3a5a7a8abaeb0b2b2b3b3b2b1afafafafafafb1b3b3b5b5b6b5b4b2b1b1
b0aeabaaa7a4a19e9b9a9695929190909090919395959598999a9b9e9e9e
9e9e9e9e9c9a9a9a99999a9a9c9ea2a4a7aaadadb0b1b1b1b0b0afafafac
ababababababababacadadadadadabaaaaaaaaabab5433334a7c85888888
9db1b1b2b3b3958888888888888888a1b7b7b3b0aeaaa6a29e9b98969591
908f8f8f8f90939494969494928f8c8987868586878b8e9294979a9a9a9a
9a9896949291919190909090919395999c9fa4a7a9a9a7a49f9c9794908d
acacadafb0b0b0b0b0b0aeacaba9a7a6a4a4a4a3a3a3a5a7a7aaaaadafaf
afafafafadaaa9a7a4a39f9e9d9d9e9ea0a3a5a7a9abacadaeaeababa7a4
9f9a96918f8d8d8d90929495969697989a9a9b9d9fa2a4a6a7a8a8a7a6a6
a4a4a4a4a4a4a7a9abadafb0b0b0b0b0afacacaca9a7a39e9b96918e8b8a
8a8b8c8f93979b9ea1a3a5a6a6a6a4a3a3a3a3a3a3a5a6a6a7a8a8a8a7a6
a6a7a7a8a8aaacacacababa9a7a5a5a7a8aaadb0b2b5b8b9bab9b9b9b9b8
b6b6b4b2b0ada9a6a4a29d9b989694949494959698999b9b9c9d9e9e9e9e
9e9d9d9c9b9a9a9a9a9a9b9e9ea2a3a6a8aaacadaeb0b0b0aeacacaca9a8
a8a7a7a8a8a9aaabacafafafafb0b1b1b1b1b1b0b08e3533386881888888
8cabafafb0b1a789888888888888888eafb3b0ada9a5a19d9a9795959594
949497999b9d9fa1a2a29f9d9a9694908f8d8b8d8f929597999a9a9a9997
96959291919292929292929494989a9da2a6a9aaaaa7a49f9b95928e8b89
a7a5a4a3a5a6a7a7aaaaaaaaa8a8a7a5a3a3a1a1a2a3a4a7a8abaeafb2b3
b3b3b3b1afadaba8a6a3a29e9e9e9e9e9e9fa1a3a4a6a7a9aaabababaaa8
a49f9b95928e8c8c8c8d8e8f92939595969798999b9c9e9ea0a2a2a2a19f
9f9d9d9b9b9b9c9e9e9fa1a1a2a3a4a3a2a1a1a09f9f9e9e9c9b9a989797
979798999a9d9fa2a3a6a8a9abacaeaeb0b0b0b0b0b0b0b0b0b0afacabab
aaaaa8a8a8a7a5a3a29e9b98959496969c9fa5a9aeb2b6b9babbbdbdbdbd
bebebdbab9b7b4b1b0ada9a6a29e9c9a99999b9b9d9ea0a2a2a2a1a09e9e
9c9a9a99999a9a9b9b9b9d9e9e9e9f9ea0a2a3a4a4a4a4a4a2a1a19f9e9e
9e9e9fa1a3a4a6a8aaabaeafafb2b3b3b3b3b3b3b2ab553333487a858888
8893abacacabab99898888888888888897ada7a4a19d9a97969595979a9b
9ea2a4a6a9aaababababa7a5a29e9b98959594959597999a9a9998969595
959594959698999a9a9a9c9ea0a3a6a8abb0b0b0b0adaaa6a29d9a979493
a9a5a19e9d9d9e9fa1a4a5a7a8a8a7a7a5a3a2a1a0a1a2a4a5a7a9aaadae
aeaeaeacaaa8a6a4a2a09d9c9c9c9c9d9e9e9e9e9f9fa1a3a5a6a9ababab
aaa6a39d9994918e8c8c8c8c909192959595959596959494949498989999
9a9a9999999998969696969694949496969797979a9b9b9d9fa1a3a4a4a8
a8a8a8a7a4a4a5a5a6a7a7a9abadafb2b3b6b7b8b9bbbbbbb8b8b5b4b3b0
b0b0aeadaaa7a49e9a948f8c8988898b8f95999ea5aaafb3b6b8b9bbbdbe
c0c1c0c0c0bdbbb9b7b5b0aca8a5a29f9d9da0a2a3a5a6a7a6a6a5a3a19e
9d9b9a9b9c9d9fa0a1a0a09e9e9c9a979696969695949494949495969696
979a9b9b9c9fa0a3a5a7a9acaeb0b3b3b3b3b2b0afac943e333463818788
8889a2a7a6a5a4a18e8888888888888888979c999796959595979a9ea3a5
aaacb0b0b4b4b4b3b1afaca9a6a4a19e9c9c9b9c9d9c9b9a9a9996959797
989b9c9fa0a4a4a4a4a4a6a6a7aaabaeb2b4b6b8b8b7b4b2b0aeaaa9a5a5
afaaa6a29f9d9c9e9ea1a3a4a7a8a8a8a7a7a3a3a19e9e9e9fa0a0a1a1a3
a3a3a2a1a09c9c999797979797999a9a9a9a9a9a9a9c9c9d9ea1a3a5a9aa
abaaa7a39e9a95928e8c8c8c8d9091949595959595939391919192939595
97999a9a9a9a99979595959191919192959597999a9c9d9fa2a5a8aaabad
aeaeacababa8a7a6a3a3a4a5a8aaacb0b2b7b8babebec0c0bebebbb9b8b7
b7b5b4b2afaba6a29a948e8a87878787898c90959a9ea4a9adb0b1b5b8bb
bcbec0c0bfbebcbab8b6b1aea9a6a3a3a2a3a3a4a7a8abababa9a8a7a5a2
a1a0a0a1a4a5a9a9a9a8a5a3a09c99969593939291919191919193949596
989a9a9a9c9e9e9fa3a4a7aaacb0b3b3b3b2b0aeaba8a566333345798388
888891a3a3a3a1a19a89888888888888888a9f9491919194969b9fa4a9ad
b1b5b7b8b8b8b8b7b3b1afaba9a7a5a4a3a3a3a3a3a09e9d9a9a999a9c9e
a1a4a6a9a9a8a7a7a7a5a5a5a6a8abafb3b6b9babcbcbcbab9b8b6b5b3b0
afadaaa7a4a3a09e9ea1a2a3a5a6a6a6a5a3a19e9c9a999797979799999a
9c9c9a9a999795959391919293949597999a9a9a999999999a9b9c9e9fa4
a4a5a5a29f9b9894918e8d8c8c8d8f91939596999a9c9d9d9d9c9d9e9ea0
a0a0a09f9e9d9c9b9996959595959596989b9da0a2a2a5a6a9abadaeb0b0
b0b0afadaca9a7a5a3a3a1a1a2a4a6a9acafb3b6b8bbbdbdbebebebdbbbb
bbb9b8b7b5b0aca8a39c96918d8d8b8a8c8d8f92959a9ea3a7aaadb0b3b7
b8babcbbbab8b7b4b1b0aba7a4a09e9d9d9ea1a3a6a8aaababababa9a9a9
a9a9a9a9acadadafaeabaaa8a5a29e9b9a989897979797979899999c9d9d
9fa1a2a2a2a2a4a5a5a7a8abadafb0b0b0adaaa8a4a19f8f3e3335638087
8888889fa6a5a5a5a59788888888888888888993949495989ca0a5aaafb2
b6b8babababab8b7b3b1afadabaaa9a8a8a9a8a7a5a3a19e9e9e9e9ea1a4
a6a8a9a8a6a4a29f9d9b9b9b9ea1a6abb0b5b8bababcbbbabab8b6b5b2af
a7a7a6a3a29e9d9b9b9b9d9e9e9fa09f9f9e9c9a96959392929294959598
9a9b9b9d9d9c9a9997959595959495969699999a9a999998979797999a9b
9c9e9f9e9e9d9b989593908e8c8c8c8d8e9093969a9ea2a5a8abacaeaeae
aeaeacaba8a5a39f9c9a9896959595989b9ea1a4a7aaabadafb1b3b6b7b7
b7b6b4b3b0aeaba8a6a3a19f9e9fa1a4a4a8a9acafb2b5b7babbbdbdbebe
bebebdbdbab8b5afaaa49e99949492908f909294979ca0a5a9acb0b2b5b7
b7b8b8b5b3b0aca8a6a3a09d9a989697989a9c9fa3a5a7a9ababadaeaeae
aeadababacababaaa9a6a4a29f9e9d9b9a9a9a9b9d9d9d9d9e9fa2a3a5a6
a7a9aaaaabababaaaaaaababababaaa7a5a29e9b99959596633333457583
88888890a8a7a7a7a6a58e8888888888888888909d9e9fa3a5a8abb0b3b6
b7b9b9b9b8b7b6b4b2b0aeadababaaaaaaaaa8a7a5a3a3a2a0a0a2a3a5a7
a8a7a4a29d9a959591919293989da4abb0b6b8babbbababab8b5b2aeaba7
9e9d9d9c9a989796949494969798999b9a9a98969593919090909195969a
9ea1a4a6a8a8a7a6a5a3a19f9f9c9b9b9b9c9d9e9f9f9e9b9b9b9a999999
999a9b9c9e9e9e9d9b999693908d8c8c8b8b8c8f94999ea5aaafb3b5b6b8
b8b8b8b5b1afaba7a39f9d9a97959596989b9ea2a6a9abadb0b3b7b8baba
bab9b9b7b4b2aeaca8a5a3a2a2a2a2a4a4a7a8aaabadb0b0b2b5b7b9babd
bebfc0bebebbb8b3afa8a49e9b9896969696979a9da1a6aab0b3b6b8b9b9
b8b7b4afa9a49e9a989694939291919395979a9ea2a5a7aaacaeafafafaf
adaaa6a4a19e9c9895949493949496989a9a9a9b9d9e9e9e9fa3a3a4a7a8
aaabaeaeb0b0b0b0afadacabaaa7a4a09c989592929091938c3b33355c7e
878888889ea4a3a2a1a19a8a88888888888888889da8a9aaaaadafb0b1b2
b4b4b4b2b2b1afaeaaaaa7a6a5a4a2a2a2a2a2a3a3a3a4a4a6a8a8acabaa
a8a5a19c97948f8d8c8c8e949ca4abb0b6babcbdbebcbab8b3afa9a5a09d
96979795959594919191919295959598999998979595939290909193979b
a0a5a9acafb0b0b0b0aeacaaa8a7a5a4a4a4a4a5a5a5a5a4a3a19f9e9c9a
9a9a9a9a9d9e9fa0a09e9d9b96938f8c898787888b8f959da3abb0b5b8ba
babbbcbab8b5b1adaaa6a3a09d9a97959595989b9ea1a5a7aaafb2b5b8b8
bab8b8b6b3b0adaaa7a6a5a3a6a7a7a9acadaeafafafafafafafb0b1b3b6
b8babcbcbcbab8b5b0aca8a4a09e9c9c9b9a9c9ea1a4a9adb1b6b8b9bab8
b6b2ada69e98938f8e8c8c8c8c8c8d9094989da3a6a9acafb0b2b3b0afab
a69f9a948f898685848484878b8f9496989a9a9a9a9a9c9c9d9e9fa1a2a5
a8abafb2b3b5b5b5b4b2b0afaca9a5a09b97949391929395976433334374
848888888ba2a09e9e9ea093888888888888888892afabababababadadad
aeaeaeaba9a8a5a39f9c9a9695949494989a9d9fa4a8abaeb0b1b3b2b0ad
aaa59f99938e8c8b8c8e959ea7afb5babec0c1c1bebbb7b3ada8a29d9a95
9192959595959595959595959596999a9a9b9c9c9c9a9998989898989a9d
a1a4a8abaeafb0b1b1b0afafacabaaa9a8a8a8a8a9aaaba9a8a7a4a29f9e
9b9a9a9a9d9ea0a3a3a5a5a2a09d9995928f8c8b8c8f92969ea5acb0b4b7
b9babbbabab8b5b2adaaa7a3a19d9a9695959595989b9da1a4a7aaacb0b0
b1b0b0adaaa7a4a2a19fa0a2a4a7aaacafb2b3b3b3b3b2afafacaba9a9ac
aeb0b4b6b8b8b7b6b3b0aeabaaa8a6a4a29f9e9e9d9f9fa3a6aaadaeafaf
ada8a49e98938d8c8a888787898c8d92969ca2a7abaeafb2b2b1b0aca9a3
9d958f8b878382828386898e94989da0a2a2a19f9e9d9a9a9a9a9b9c9ea2
a6aaaeb1b3b7b7b7b7b5b3b2aeaba8a39f9b99979797989b9d973d33335c
7f8688888898a3a3a3a3a3a48d88888888888888889aa9a8a9a9a9a9a9a9
a9a7a5a3a09c9994918d8b8989898c91969da4a9afb3b8bbbcbdbbb8b5b0
a8a299918c8887878d939ba5acb2b8bbbebfbebbb8b5b1ada8a5a39f9c9c
98999a9b9d9d9b99999898969596969697989a9b9d9d9ea2a2a4a5a7a8aa
acadafafb0b0b0afafafafafafadacacabababababaaaaa8a7a6a3a29f9d
9d9c9d9d9ea0a3a6a9abaeafadacaaa8a5a29e9d9a9a9b9da0a5a9acb0b2
b4b6b8b8b8b7b6b3b0aca8a5a39e9a969591919195969a9d9ea2a3a4a7a8
a8a8a4a4a19f9e9b9b9a9b9c9ea2a5a8abaeb1b2b3b3b1afaba8a6a4a0a0
a2a4a8acb0b3b5b7b7b7b6b6b2b2b0adaaa5a19d9a969696979a9c9ea1a4
a3a3a19e9a979592908f8e8c8d8d8e92959a9fa4a7a8ababa9a7a49f9b95
908c88878786868a8d92969da3a7aaababaaa9a6a39f9c9a9999999a9ea2
a4a7a9acacafafafafafaeacaba8a4a19e9c999898989a9c9ea06a333341
74818888888ca4a6a6a7a7a7a18988888888888888889fa3a4a7a7a7a7a6
a4a19d9a96928d8c898888888b8f969ca5abb2b7bbbfc0c1c0c0bbb5aea6
9e958e87848383878b90979ca2a5a9acadaeadadacacaaa8a8a6a3a39f9d
9ea3a6a7a9a9a7a6a3a19d9a969593919090909193969a9ea3a8acb0b3b6
b7b7b7b7b7b7b4b2b0afafafafafafafaeacababa8a6a4a3a19e9d9a9998
98999b9e9fa3a5a9acb0b2b5b6b6b6b3b2b0aeaba8a7a6a6a6a7a8abadae
b0b0b2b4b5b6b4b3b2afaca8a4a19d9996949495979a9ea2a3a4a4a6a5a4
a4a3a3a1a09f9f9e9e9e9e9d9e9ea1a4a6a9abaeb0b0afaeaba6a29e9a97
979a9ea3a8acb0b3b6b7b7b7b7b6b3b0aca6a29d9a9595949495979a9ea1
a4a7a8a9a8a8a6a4a19f9c99959493939495979a9b9c9b9b9a9694908e8c
898788898b8d9195999da3a8acb0b2b2b0aeaba7a39f9d9a9a9a9c9ea1a3
a3a3a2a19f9d9d9d9d9ea0a19f9e9d9a97959494949496989a9b954a3333
557f8688888899abaaaaa8a6a290888888888888888890a4a7a8aaaaa8a7
a39e9b9693919090909294979ca2a9aeb3b8b9bdbebebebcb8b3aea59d96
8f8b878383848587888a8c8f9295989c9fa1a4a6a8a8aaa8a7a5a19e9997
a1a6aaadafb0b0afacaaa7a39e9a95918e8c8c8b8a8c8f92979da5aab0b5
b8b9bcbcbbbab9b7b5b3b1b0b0b2b2b2b0afaeaba8a49f9c989693918f8f
9093969b9ea3a6a8abafb1b4b6b7b7b7b6b4b2afacaba8a6a5a5a5a6a7a9
aaaaacafb1b3b3b5b5b3b0afaca8a5a19e9d9d9fa1a4a8abacaeadacacab
a9a8a7a6a5a5a6a7a8a7a5a4a4a4a4a5a5a8aaadb0b0b0afaca7a29c9692
9192959ba0a5a9adaeb1b2b2b2afaeaba7a4a09e9a9999999b9b9da1a4a8
acafb2b4b4b4b3b3b1afaba6a19c98969493929395959392918f8d8c8c8b
8c8d8e9093969a9da2a5a7abaeb0b1b1aeaba9a4a29e9d9a9b9da0a2a3a3
a29e9b9694918e8e9195969696969593918f8c89798e929495989b783633
3a74828888888eadaeaaa6a39d978b88888888888888889dafaeaeaeaba8
a39f9c9998979a9b9e9fa4a7abaeb2b6b7b8b8b8b8b5b3afa9a39c96928d
8b89898888898989898a8c8e92969b9ea3a6a9acacadaba8a59e9a96918e
a2a6a8acaeb0b3b3b3b0aeaba6a29a95908c8886858585878b8e949ba1a8
aeb1b5b8b9bababab9b8b7b5b4b3b3b3b2afacaaa5a19c97938e8d8b8a8a
8c8e92969c9fa3a6a8aaadb0b2b3b5b4b3b1aeaca9a5a29d9a999998999a
9d9e9fa4a8aeb1b4b7b8b8b8b7b5b3b0aeabababadadafb0b1b2b2b2b1af
afafadadadadaeb0b1b0adadacaaa9ababadafb2b4b5b5b3afaaa39c948e
8c8c8f959b9fa4a7a9abababaaa9a7a4a39f9e9d9a9a9b9e9e9fa1a4a8ab
afb2b5b7b8b9bab8b7b6b1ada8a49f9c9997979797979797979693949596
97979a9c9c9fa0a2a3a6a7a8a9abababaaa7a4a3a19e9e9ea0a3a5a7a7a5
a39e9b9792908c8e9194959797989795896f5f5a586a96999c9ea4a14d33
33507a86888888a0b1aca6a09a958d888888888888888889a6aaa8a7a4a1
9f9e9e9e9fa1a3a5a6a8aaabadadafafafaeacaaa8a6a3a09d9b9a989797
989899989896959595979a9c9fa3a6a9adaeafafafaea9a49e9894908d8a
a0a2a4a4a7a9abafb0b1b0afaba7a29b948c8682828282828285868c9299
a0a6abafb3b7b9babababab7b7b4b2b1afaca8a49f99948f8b8785858586
888c90959b9ea3a5a7a8abacafb0b2b1b0aeaba6a39d97928c8786858687
8a8e92969da4aab0b5b9bbbebebdbcbbb8b8b5b4b2b0afaeaeadacababab
acaeaeb1b2b4b5b7b7b4b3b0aeaeacabacadafb0b3b4b3b0ada7a29c9591
8f8f93979ca2a6a8a9ababa9a8a7a5a3a29e9e9b9a9a9a9b9c9d9ea1a3a5
a8acadb0b3b4b5b6b6b6b3b1aeaaa7a4a19f9c9c9c9c9c9c9c9c9e9fa0a1
a1a3a5a5a5a3a3a3a2a2a2a2a5a5a6a7a7a7a3a3a3a3a4a5a7a9abacaba9
a6a29d9893908d8e9295999da0a39f6e3f525858585a8ca1a3a6a8ac8135
333a6a8188888888a9aba49d9795928c88888888888888888d9796969697
9a9d9fa3a5a7a8a9a9a8a5a3a2a09d9c9997979797999b9da2a4a8aaadb0
b0b0b0adaaa6a4a1a1a1a1a3a4a7aaabaeafaeadaba7a29c9895908d8a87
9996969595999b9ea2a5a7a9a7a6a49f9b938c8683828282828283878d92
979da4a8acafb3b7b8b8b8b7b4b1aeabaaa6a29d98948f8c898786848587
8b8e93979da2a5a8aaabacadafafb0afafaca8a39d98938c868282828282
868c91959ca2a8adb3b7b8babcbdbabab9b7b6b2b0adaaa7a3a09d9a9a9a
9c9fa3a8abaeb0b3b3b0aeaba8a5a3a2a2a3a4a5a7a8a7a7a3a19e9a9897
97999b9fa4a7aaababababa8a6a4a2a29f9d9b9a9999999a9a9b9c9e9e9f
a0a3a5a7aaacafb0b3b3b3b3b0aeaba8a5a3a29f9f9f9f9f9f9fa2a2a2a3
a3a5a6a5a4a3a29f9d9d9d9e9fa2a3a4a4a4a3a3a3a3a5a7a9abadaeabaa
a7a49f9b96949294989da4a9adaf6b292e4b585858586e9f9e9fa3a5a34d
33334f7b8488888894a59f9a959595908888888888888888888c8d8f9295
9a9ea3a4a6a6a6a39f9c989593918f91929395989ca0a5a9adb0b2b5b6b6
b6b4b2aeaaa7a4a2a0a2a3a3a6a8aaababacaba8a6a29e9b9895918e8c8b
92908d8b898a8b8c8f9395989b9c9c9d9b9994928e8d8a8a8a8b8d8e9193
959a9da1a3a7aaadb0b1b2b2b0afaba9a6a39f9c9794928f8d8d8e8e8e90
93969a9ea3a5a9abadaeafafafb0b0afaeaba8a29c97928d878483838487
8c92999ea2a6aaaeb0b2b5b6b6b4b2b0afaeaca9a6a3a09c9894918d8b8c
8d91969b9fa3a6aaaaa8a7a4a19d9b9a9a9b9b9d9fa0a1a09e9e9c9a9a9b
9c9ea2a5a7aaabababaaa8a5a29f9d9b9b9a99999a9b9b9f9fa1a4a3a2a2
a2a2a4a5a8aaacafb2b3b3b1afaeaba8a5a29e9e9e9e9d9d9d9d9d9d9d9f
9fa1a2a19f9f9c9b9a9a9a9b9e9fa2a2a2a19f9d9d9d9fa2a4a6aaaaaaa9
a6a4a19d9b999b9da2a7abaeb1ac4426273f555858585a8b949496999c7e
33333b6a8088888889999894949293958f8888888888888888889496979a
9d9ea0a19f9d9b989694929396979b9da0a3a4a7a9aaabadaeafafafaeac
abaaa8a5a4a3a3a4a4a4a6a8aaabacaeadababa8a5a3a19e9b9896969595
9797969494918f8f8c8b8b8c8b8b8e8f8f9293939698999b9c9f9f9f9f9e
9c9c9b9a9a999a9b9da0a4a6a8a9a9a9a7a6a39e9b98959595969a9d9fa2
a5a6a9aaadadafafafaeadadadadadaaa9a7a4a29e9a96938f8e8d8d8e8f
93979b9fa1a3a5a6a8a8a8aaaaa9a9a7a7a6a3a29e9a9794918d8c8b8a8c
8d9094989b9ea3a3a5a5a3a3a3a1a1a0a1a2a3a5a5a6a5a5a3a09e9e9e9e
9e9fa3a5a8ababadacaaa8a5a29e9c9c9c9c9c9da0a2a5a6a8a8a9a8a8a7
a7a7a7a8a9abacadafaeaeadaaa7a5a29f9c9b9a9a9a9a99979796969798
999b9c9d9e9e9c9c9c9c9c9d9e9f9e9e9c9a9896949496989b9ea1a1a1a1
9f9d9c9a999a9b9da0a2a4a4a4a25c2626344e58585858748c8c8c8e8e8e
4a33334d7e8488888889908e90909396998d88888888888888888b9d9e9d
9a9997959493919295979ca0a4a8abacadafadadacababa9a9a8a8a9a9a9
a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8a8a7a6a5a5a4a4a5a6a7
a1a4a6a8a9aaabaaa7a49f9b96918d8b8b898a8a8d9093989c9fa3a4a7a6
a4a39f9c97938f8d8b8b8e9194979c9d9f9f9e9b9693908d8f92969aa2a6
aaaeafb2b2b2b0aeaba8a5a29f9f9d9d9d9d9c9b9c9a9a98979797979798
9899989796949492929495989ba0a4a7a9aaa8a5a09c96928d8b88888b8d
9295989b9e9ea0a2a3a3a3a4a7a8a9aaadaeb0b1b1b1b0aca8a49f9d9a9a
9b9d9fa4a7abaeafb0b0aeacaaa6a6a6a6a6a6a9aaaaacadadadacababaa
a9a9a9a9ababababa9a8a5a39f9c9a97969696969696959292908e8e8f91
94969a9d9ea1a2a3a5a5a3a3a3a29e9c9995928f8e8e8f929597999a9a98
9796959595959798999997979795852e262a4757585858658d8c8a878786
7134333a68808788888990929495989c9fa08a888888888888888897a39e
9a959491949495979b9ea0a3a4a5a5a5a5a2a4a4a5a6a8a9abadaeb0b2b3
b5b8b8b7b6b3b1afaca9a6a4a0a0a0a2a5a6a7a8abababadaeaeb1b1b1b1
a1a4a8adafb2b5b6b7b6b4b0aba49d9794908c89878485888c8f94989b9e
9f9f9e9c9a958f8a8584838485888c8e919292918e8a87848484868a8f95
9ea3a7aaabacaca9a6a29d99959291919192929496969798989899999a9a
9a999693908c88858585888d949ca3aaafb1b1aea9a39c948e8884848589
8d9195969899999999999a9c9fa3a7aaacafb0b0b0b0b0ada8a29d9a9695
96999ca0a5a9adafb3b3b3b0afacabaaababacaeafafb0b1b1b0afaeaeac
acababababababa8a7a4a09b97938f8d8b898c8d8d8d8d8b89888888898c
8e94979da2a4a7a8aaaaa9a8a7a5a09b96928e8b88898b8e919495959696
969696979899999b9c9b999999999a4426273c515858585888918e8b8987
84513333457c848888888e989d9d9fa3a6a8a18888888888888888889fa4
9e9d9d9c9b9b9a9a99979594918e8d8e8e9195999fa4a9acafb1b5b8bbbe
c0c0c0c0bebcb8b4ada7a29d9a999a9d9fa3a6a8abadafb1b3b3b5b5b5b3
9e9fa3a5a8abaeafb0b1b0afada8a49f9b9794918d88858482848487888b
8e929396989694928f8e8b8a8a8b8c8d8d8e8e8d8d8a8684838282828486
8c9095999b9f9fa09f9e9c99959392918f8e8f9090919091929292929495
95959492908e8c8a8a8c8f959ba3aab0b6b9bab8b3aea59b918883828282
848688898a8c8c8c8b898a8d8e9195999c9ea1a3a4a5a5a3a19e9b999797
999c9ea3a7aaaeb0b3b3b1afadaaa7a6a7a7a7a9abacaeafafafaeaeaead
abaaaaa8a7a7a7a6a5a3a19e9b989693908f8e8e8e8c8b898887878a8b8e
92969a9da1a3a4a6a6a5a3a3a39f9c96918c88858486898c9295979a9b9d
9d9d9da0a2a2a3a4a3a2a2a2a1a1a27927262e4c58585858759f9c9b9999
998a3c33355e8087898888969e9ea0a2a5a7a990888888888888888891ab
a6a7a7a5a3a29e9b96918c87848384868c91979da5a8abaeb0b3b7b9bdc0
c0c1c1c0bebbb5b0a9a49e9c9b9c9ea3a5a8abadaeafafafafaeaeafafaf
a1a4a5a8a9a9a9a9a8a8a8a6a4a29e9c9997959593908e8d8a8786858585
8587888c8f91939597999a9b9a9a9a98979696969492918f8d8d8a888889
8a8d8e9293969a9c9e9fa09f9f9f9d9c9b99979593928f8e8e8d8d8d8d8d
8d8d8d8d9090919295999ea4aab0b4b8bcbdbebdb9b4aca2978d85828282
8282828282848485858789898a8b8c8d8e8f91949496989899989797989a
9c9ea2a6a9acafb1b3b2b0aeaaa5a3a09e9d9c9b9c9c9c9ea0a2a4a4a4a3
a2a2a2a1a0a0a1a3a3a5a7a8a8a9a9a8a5a5a1a09d9b9796949496989b9d
a0a0a1a19f9f9e9d9b9b9b9b9b9a96918d8a8988898c9095999b9d9d9e9d
9c9c9c9d9fa1a2a2a1a09e9d9c9b99932c262843545858585aa5acacaca8
a8a76233334475828888888b9798999a9d9d9d9a8a88888888888888889b
abacadacaba9a59f99948e8c8b8e91969ca2a8acaeaeadadadaeb0b0b1b3
b3b3b0afaaa6a09b989697999ca1a5a9acaeafadadaaa7a4a2a2a3a6a8a8
a7acaeb0b1b1b0aeaca9a7a4a09c999592908e8e8e8e9091919393939291
908e8e8e8e8e909193939697989998989897979796949393939391919294
9597989c9ca0a1a3a5a5a7a7a7a7a7a7a6a5a3a09c9b9795939393939390
8e8e8e8f9193969a9ea3a9aeb3b7b8bab9b8b8b7b4b0a8a299928b868282
8282828283858a8d90939597979693928e8b89868587898b8d8e8e909293
96999da1a5a8acadafafadaba8a4a19e9a96938e8b8a8a8a8b8d8e919395
979a9b9e9fa1a4a5a9adb0b2b5b5b5b4b2afacaaa6a39f9e9e9e9fa3a6a8
a8a8a6a3a29e9d9c9c9c9ca09f9c9a979392929394989c9e9e9f9e9b9994
928f8e8f9394979799999996959595955a26263450585858588eafaeadad
adab953b33365e7e8688888890949596979897958e898888888888888889
a7afafafafaba8a39d989797999da2a6aaacaeadaca9a5a39f9e9c9a9a99
9895938f8c888685868a8e959ba1a5a9ababaaa8a6a3a19fa1a4a5a8a9aa
abaeb1b2b5b6b5b2b0afada9a8a5a19e9a9795949291929495989a9d9fa1
a1a1a1a09e9c9c9996959392908e8e8d8d8d8d8d8d8d8d8c8c8d8e909193
95989b9fa3a6a8aaabacadadadaeadadacabaaa8a6a39f9c9b9795959595
9494939495989c9fa4a8acafb1b3b4b0aeaaa5a19e9b97928e8c88878685
868686898d92979ca0a4a5a6a6a5a19c96918c898787888c8d8e8f8d8d8d
8d8e8f93969a9ea1a4a5a4a3a09d9b9a9795928e8c898888888a8c8e9094
979c9fa2a5a8aaadafb2b5b7b7b7b6b4b1aeaba8a6a4a1a0a0a2a4a6a8a8
a8a7a5a2a19e9d9d9d9fa1a2a2a29e9e9d9d9d9d9fa2a3a4a3a09c97928d
88858585888b8e92949699999897979a7f27262b485858585868a8a9a9a9
a9a9a86533334475828788888b9c9da0a19f9c9a978c8888888888888888
92aca7a6a5a19d9996949496979b9d9ea0a09d9c9795939291919090908e
8b88858484838485878c91969a9fa4a8a9acabaaaaaaabadadaeb0b0afaf
a7a8aaaaaaacacaaaaaaa7a7a7a6a6a6a6a6a6a4a3a3a2a1a0a2a3a6a8aa
acaeaeaeaeadaba9a7a5a29d9a96928d898784848486898c8f9295959596
9698999a9d9ea2a3a6a9acaeafb2b1b2b1afafadaba8a49f9c979491908f
8c8c8c8f9195989da3a7aaacaeacaba7a29c948f8b888684848484878a8d
909395989da0a5a8aaaaa9a9a6a5a29c9995949495989da1a3a3a29e9c97
938e8d8c8c8f9192929291908e8d8f909292929292918f8f8f8f90929598
9a9ea1a3a6a7a9abacafb1b3b4b4b3b3b0aeabaaa8a8a7a7a7aaaaababaa
a7a5a09d9a969594939595979b9da0a4a6a7a9aaabababaaa7a5a29d9793
8e8b888787898c8d909497999a9a9a9d9941262640545858585b97a8a8a7
a7a5a5983933365e7e8688888898a3a2a2a19e9d9b948888888888888888
88909d989696959292929293949492918e8d8a8888898b8e919596999896
9593939596989c9ea2a3a5a6a7a8aaabacaeafafb0b0b1b2b2b2b0aeaaa7
999c9d9e9e9d9c9a9a9a9a9a9a9a9c9ea0a4a6a9aaaaaaaaa9a7a7a7a9aa
aaaaacaeaeadaaaaaaa8a6a5a29e9a948f898482828285878c9297999a9a
999794939090909194979da3a6aaacaeaeaeadaaa8a6a19c95908c888684
84848485868b8e949ba0a5a6a8a8a7a5a19d98948f8d8b8989888a8d9094
9a9ea3a4a6a8a8a7a5a19c96938f8d8b8a8a8d91979fa5aaaeaeaeaca9a5
a09b9693939693918d898684838384878c8e91949494918f8f8f8f8f9395
989b9e9fa2a4a4a5a7a8abaeb0b0b1b0afafaeabababababababaaaaa8a5
a29e9b979492908f909192959a9fa5a9acb0b1b2b2b0b0b0b0adacaba8a5
a29e9b9793918e8d908f8d8f9696999a9b662626314d5858585876abaaaa
acacadaf6933334475828888888b9b9d9d9e9e9e9f9f9488888888888888
888a989b9c9c9b9b9b9b9b9b989693908d8a8b8d8e93979ca1a4a5a6a5a5
a6a8aaacaeb0b1b1b1afadacaaa9a6a6a6a9aaaaaaaaaaaaaaa7a49f9b97
878c8e92939393908e8e8e8e8d8d8e8f9092969a9c9f9fa0a09f9f9e9d9d
9d9c9d9d9d9c9b9b9a9b9b9c9c9b9a9895918c878584838383888c8f9192
908f8d8b8786868686878a8e93989c9f9fa0a09f9d9a97938e8a85838282
828282828283858a8f95999c9fa1a3a5a7a5a4a29e9c9a97949392939596
999c9fa2a3a5a5a4a29d9a958f8c89878686898e959ba3a9acafafaeaba9
a6a39f9c9c9e9c99948e898482828283868a8d909091908e8e8d8d8e9093
979a9d9fa2a3a3a3a4a5a5a7a8a9a9a9a9a9a9a9a9a8a8a8a8a8a7a7a5a3
a1a09c9c9c9c9b9b9d9ea1a4a7aaadb0b2b3b5b5b5b5b5b3b3b2b1afafad
abaaa7a39e9b91715e484343759c9e9ea08c2d2627465658585864a6adaf
b2b4b6b8a73a3334587e858888888f9da0a1a5a5a6a7a48d888888888888
88888da8a5a3a2a09f9c9c9b98979595939397989b9ea2a3a5a5a2a1a1a1
a3a4a6a8a8a8a8a8a5a4a29f9e9d9d9ea1a3a3a4a5a5a5a29f9c99969493
828282838485858585858585868787878787898a8b8d8e8f929394959595
9591908e8c8a8a89898a8d93979b9fa3a4a4a4a09d9a9694929191909090
8f8f8f8f8c8b8a86868382828385878c8f939699999895938f8b88858382
828282828282828284898e9394969a9ea2a5a7a7a6a3a19e9a9694918f8d
8d8e909093959b9fa3a5a6a6a4a39f9c9b9b9b9ca1a6aaafb1b3b0afaba8
a5a3a09e9ea0a09e9a958f8b86848484868c91959a9b9e9f9f9e9e9f9fa1
a4a5a6a6a7a7a7a5a3a09d9c9b9b9c9da0a3a3a6a8a8a9a9a9a9a9aaabab
aaaaa9a6a6a6a5a6a9aaacadaeafb0b0b2b2b4b6b7b6b3b0aca9a5a19e9f
a1a1a1a0985e29393c3c3c3c5ba9aaaaa8a24f26263950585858588aa6ac
aeb1b1b1af7c34333b6c808888888aa0a7a8a9a8a7a5a49d888888888888
8888889e9d96928f8d8c8e8e919496989c9d9e9e9e9d9b98969493929292
92959697989998979795959595989b9ea0a2a3a3a3a09e9b999796999b9e
8382828282828385868686878a8b8b8b8b8b8b8b8b8c8d8d909395989a9d
9d9c9b9895928f8d8b8b8e94989ea4a9acafafaeaeaba9a6a5a2a19f9e9d
9c9c9b9999999794918c8885838384878d93989ea2a5a5a3a09d9a958f8b
8684828282828283858a8f9497989b9d9ea1a2a19f9c9895918e8c898888
898c8d8d8d90959ba2a6a9aaaaaaa7a4a29f9fa1a3a6a9acafafaba9a5a1
9e9b9a99999b9b9a9a9895949090909394999da2a6aaaaadacababaaabab
abaeaeaeaeaeadaaa7a39e9b98989a9da2a6a8aaacacababaaaaaaabaeae
aeaeadaaaaaaa9aaacafafafafadacacacacacb0afaba79f97908b878687
8b8f9192501c1b333c3c3c3c46a1aeaba8a27c29262b4a585858586f9da3
a5a7a4a3a095463333527c8489888894a6a4a39e9c9896978c8888888888
888888888c878585878c90969c9fa4a6a6a6a49e99938f8d8c8b8a8b8d8d
8f9394989898969595959595989ca0a3a5a5a3a19e9c9999999c9ea3a6aa
8282828282828284878c8e8f939595979797979795949595969a9c9fa2a4
a6a6a6a3a19e9b98969495979b9fa5a9acafafafaeaba8a6a3a19e9e9e9e
a0a1a1a1a1a19e9d9b9794918e8c8c8f92969ba0a6a9ababaaaaa6a29c97
908b8785848687898c9094979a9d9d9d9d9d9d9b9895918e8c898988898a
8c8e9193949495999c9e9fa1a09f9e9b9b9a9a9b9c9e9fa0a19f9e9c9a98
9696959595969798989898999a9c9e9fa1a2a4a6a6a7a7a9a9aaaaaaaaaa
aaababababa9a9a7a7a4a3a2a2a3a3a5a8aaabacacabaaa8a7a4a4a5a7a6
a5a3a2a1a1a1a3a6a9ababacabaaa8a6a4a4a5a7a39f99948c8784848589
8d8f93944b1b1b2a3c3c3c3c3e86a5a39f9c9037262740535858585b95a5
a6a4a39e9c9a6c33333b6d818788888a9ea29d9996949292928a88888888
88888888888e8f959ba2a8aeb0b2b3b3b1aca69e9793908f8e8d90919396
999d9d9d9a9795929090909095979a9b9b9a9796959595989da4a9afb2b4
898888868685858485878c8f949a9ea3a5a8a8a6a4a19f9d9d9ea1a3a4a7
a8a8a8a6a39f9c979493929295979da2a8abadadaba9a6a29d97938f8e8d
8e8f939596979999989897959594969798999a9b9d9ea1a4a5a6a5a39e9b
96938f8d8e919292939495959694949697999a9a9b9b9a9a9a9a9a9a9897
9796969595959595969898999a9a9a9a9a9c9ea0a2a4a3a1a09c9a979795
959595959593928f8f9295989da2a4a6a7a6a4a19d9c9998979a9c9e9fa0
9f9f9d9c9a979797999d9fa3a6a7a9a9a9a8a6a6a7a7a8a7a8a8a8a5a4a0
9b969390909194989ca0a3a6a6a5a5a3a19f9d9d9a979594939497999d9f
a2a5a5a4711b1b213c3c3c3c3c6798989698995f2626344e5858585881a5
a5a4a19c99978f3f3333537b8488888893a4a19d9a979592908d89888888
88888888888a9b9ea5abafb3b6b8b8b7b4b0aba6a4a09e9b9b9897979899
9a9b9996938e8b888687888a8d8d8d8d8c8b8c8d8e92979fa6adb3b6b8b7
9e9fa2a2a19e9b97959595979b9ea3a7abafafafaca8a4a09e9e9ea1a3a6
a8a9abaaa8a49f9a95928f8c8c8d90959ba1a6a9a9a8a6a29d97918b8684
828384888b8c90919194959595959699999999979697999a9c9e9fa09e9d
9c99979797999b9c9c9c9a9797959595979b9da1a5a7a9abadaeb0b0afac
aaa7a4a29f9f9f9f9e9e9c9c9a9a999a9b9ea2a5a7a8a7a7a5a29e9c9a97
959493908e8b8785868a8f979fa6abadadaca8a19b938e8a8786898c8e93
939291908e8c8c8e93969ca0a4a6a8a8a5a4a3a3a4a7a9abacafaeaca9a4
9d96918d8c8c8f92969a9d9ea09f9c9b979593939394959a9ea4a8acadae
adaba8a587221b1d383c3c3c3c518f93959a9d882b262a46565858586196
9a9995939393957234333b6d8087888888989f9c989592918f8f8b888888
8888888888888d959a9ea4a9aeb0b3b3b3b0afacaba8a4a19e9b99999999
989594908d8b878787898c8c8c8c89888787898c8f969ea4aaacaeada9a5
a3a6a7a7a6a3a29e9d9c9d9ea2a4a7aaabacacababa9a7a4a2a1a1a2a3a5
a6a8a9a9a8a8a6a4a2a1a09f9f9f9fa0a0a2a3a3a4a4a3a2a09e9c989592
8f8e8d8e8e90929496999c9c9d9d9d9d9d9d9c9b999898999b9c9e9e9d9d
9b9a999a9a9a9e9e9e9e9e9d9c9c9c9d9ea0a2a5a7aaacaeb1b3b6b7b7b7
b6b5b2b0afafb0b0afadaaa7a4a19d9c9ea1a3a5a6a5a4a19f9b98969492
9190908f8f8f8e8e8e91959ba2a7acb0b2b0ada8a39b95908c8c8d909496
979895949290908f8f909093939697999b9c9c9ea2a4a7a9aaacadacaba8
a49f9b9694949495989b9e9f9e9b999692908e8f9194989ca1a5a7a5a49f
9c98948f88301b1c313c3c3c3c4488979c9fa2a04226263b525858585877
898a8b8d8f939596473333527c848888888da29f9e9e9c9c9c9d9d8a8888
888888888888898c8e91969fa5aaaeafb0afaeaba8a49f9b989694949596
96969593908e8d8c8c8a89878788888a8c8e9194989c9e9f9f9c9995908e
9b9fa2a09e99928d8a888a8d92979ca0a3a3a09e9b9b9997969797979a9c
9fa3a4a6a7a8a8a8a9aaabaeaeaeaeaeaba9a5a29d9a989797999a9b9b9a
9794908d8b8888898c90959a9fa2a4a5a5a39f9c97938f8d8c8a8a8b8c8c
8e909495989a9d9e9fa0a2a2a3a3a3a4a7a7a7a7a7a7a7a7a9acaeb2b3b3
b1afada9a8a7a7a9aaaaa8a7a4a29e9d9da1a2a3a3a29e9b9693908e8c8c
8d8f9295989b9c9d9e9e9d9fa3a4a6a7aaaba9a8a5a29f9d9c9d9ea1a3a5
a5a3a09c96918e8c8a8887878a8d92969a9ea0a3a4a5a7a8a8aaacaeaead
aaa7a49f9e9b9b9e9fa3a4a4a3a29e9b979494959698999a9a9795918d8a
8888898d8f4b1b1b293c3c3c3c3d81a8abaeaead7c26262f4a5858585867
8786848487888b9074333336667f878888889faaaaaaabababaaa99e8888
888888888888888c94959ba0a5aaacaeadaba7a39e9a969291919295989a
9d9e9e9d9b999693908e8d8f9295989b9e9ea1a2a2a09e9a95928d8b8a8b
94999b9d9a97938c87838383868a8e9396999a9a9794918d8a8785858587
8a8f959a9ea1a5a5a5a5a5a6a6a8a9a7a6a4a29d99959391919395969797
96938d8984828282828385878b9095989b9b9995938e8985848484848687
898d8f93969a9c9ea2a3a5a6a8aaaaaaabaeaeacaaa8a7a4a4a4a6a8aaaa
a8a6a29e9c9b9b9e9fa0a09f9c99959494979b9fa3a4a5a5a4a19e9d9c9a
9a9b9c9e9fa0a2a3a3a09fa1a3a3a3a3a5a6a6a4a2a3a3a2a4a4a8a9acac
aaa8a4a09b9592918f8d8d8e91959ba0a3a6a8aaa9a8a6a6a5a5a6a7a9a9
a8a6a6a5a4a5a6a8a9aba8a7a4a19b98949494949495979897969492908f
9192969b9e711d1b213a3c3c3c3c6babadb0b0b0a12e2627415558585859
868483828284868c8f4633334677838888888fa7aaaaaaa9a9a7a5a38f88
88888888888888889298989a9b9b9c9c9d9d9c9b9b9c9c9b9b9b9da0a4a5
a7a8a8a8a6a4a4a2a0a2a4a7a9acadadacaba9a6a29d9894908f8e90949a
90919192908f8c8a8787888a8c8e8e929497999ca0a09f9c99948e8b8785
85878a8e9093949492908d8d8e919296969798979595959596979b9d9fa0
a09e9b97928d888584828282828385888c8e919193929090919394979a9d
9d9d9d9d9d9fa0a2a5a7a9abacababaaa9a9a9a9a9a8a5a3a09d9c9c9fa0
9f9c9c9a9a9a9b9ea2a3a3a09d9a969393959ba1a7abafb1b3b4b4b4b1b0
afafafafadaaaaa8a6a5a5a5a5a5a4a3a29e9c9b9b9c9ea3a7abafafafaf
adaaa7a29d9b9a9995938f8d8d8e91969a9e9fa1a09e9b95918d8b8b8e92
969ca3a8adb0b0b4b4b0aea9a39b94908d8c8a8a8d8f9396999a9c9e9fa0
a3a2a3a09e89241b1d363c3c3c3c54989ca0a4a8aa572626364e58585858
78898787888b8c8e907e333334637f86888889999d9b9896969392918e89
8888888888888888898b86868686878b929aa1a6aaacaaa8a6a5a1a1a2a5
a5a7a7a7a7a8a8abacafb1b3b5b7b3b0aaa59f9994908b8a8a8b8d8e9196
90949697969593918f8f8e9091959597989a9da0a4a9abadadaca8a49d9a
9696989a9b9b9b9794918c8b8a8a8b8c8f9295959595959595979a9b9e9f
a0a09f9e9a96928d88868382828284888d92979b9d9d9d9d9a9a9b9b9d9f
a3a4a5a7a8a7a8a9acaeb0b0b0aeaaa5a19e9c9d9e9e9d9b979694939597
9797969596989a9c9fa3a3a39f9e9c9c9c9c9fa4a8acafb0b0b0aeacaaac
afb0b4b7b8b9b8b8b4b4b2b0aeaba7a4a09c9694929295989ea4a7aaa8a8
a5a29e9b97959696928d878482828284888e9395989795948f8d8b8a8b8e
92979ea5aaaeb0b1b0afa9a49c958f8c89878587888c90959a9da0a3a6a7
a7a5a29e9b95341b1b2e3c3c3c3c408b9b9fa4a8ab8f2826284758585858
668383838586888b8c8d5333334677838888888993908f8d8c8c8b8a8a88
8988888888888888888c8d8e8f91959ba1a4a6a6a5a19e9a9897989a9d9f
a3a3a3a3a4a6a7a8abacaeaeaea9a59f98928d8987858585858585858585
85888b8e92949597969593908d8b8a8989898b8e91969ba0a5a8a7a7a6a6
a5a3a3a3a5a6a5a5a3a09c98949494919191949595939291919295969a9b
9e9f9f9e9e9e9d9c9996938e8c8c8e91969ca1a5a8a9a5a29c9794929293
969ca1a6aaacaeafafafafadaaa69f98918b86878989898a8a8b8c909396
9a9ea1a4a6a6a6a5a6a5a3a39f9d9d9c9c9d9ea2a3a6a7a8a8a7a3a09c9b
9fa4acb1b8bbbcbbbab8b5b3b0ada9a5a19c958f8b8787888c9095989a9c
9e9e9fa1a0a1a4a5a3a09c97938e8c8c8e909496989a9c9d9ea0a0a09f9e
9d9a99979798999b9c9997938d878482828282848c949da3a8aaadadabaa
a7a49f9c9b97511b1b273c3c3c3c3c75a2a3a1a0a0973f26263d53585858
5a82919191919294949580363335627f868988888d919394959492909090
8988888888888888888896a4a5a6a5a29e9a96938f8d8b89898b8d919598
9b9b9b9a999796939394959798979693918d8a8784838282828384858587
8a868483838385878a8d8d8d8a858382828282828284898f959a9e9fa1a1
9f9e9c9a9a9a9c9c9c9c9b98969392909091939595969695959698999da0
a3a6a6a6a7aaaeb0b1b1afadaaa6a4a2a0a1a2a3a3a2a09c979390909095
9a9ea5aab0b5b7b7b7b5b3b0afaaa49c948e8a878787898a8c8f93979ca2
a7acb0b2b2b1afaba7a4a19d9894918d8d8e9092959b9fa4a7a8a9a7a4a0
9e9fa2a5a6a9a9a8a6a5a5a5a5a5a4a39f9b948e88848383858a8f949699
9c9d9e9e9fa1a3a6a8aaaaaaa9a7a5a5a3a29e9b98969596999c9ea0a1a1
9e9c999594949595969595918d8a8683828282868f9ba5aaadb0b1b2b2b0
adaba9a6a3a0711c1b213a3c3c3c3c65a7a7a5a29f9d662726304e585858
5878a4a3a2a2a2a2a1a19e5c333347778388888889969a9b9d9b9a9a9998
97888888888885786d74779ea8a7a4a09c969493928f8e8e8f93969a9ea0
9f9e9b97938e8b8b8d91959a9c9f9f9d9c9794908d8b8a8c8d9194959493
9e9a979492908e8e90908f8f8c8785828282828282828384878c8f939394
9494918e8c8b8b8b8b8b8e8f8f9090919394969798999997979696979899
9b9c9fa2a4a7acb1b5b8b9b7b6b2afaba6a19c989492908f8e8d8d8f9397
9ca2a6a9aeb1b4b7b8b8b6b5b3b0afadaba8a5a4a3a3a09d9b9897989a9d
a1a5a8a9a9a8a4a09c9a989694908e8b8b8b8b8d90949a9ea4a6a8a6a5a2
9e9c989494918e8e8a8a8c8e929496989795908c898686878a8c8f919190
908f8f8f8e8e9093999fa5a9acaeaeaeaba8a49e98938e8d8c8f92969a9c
9e9fa09e9d9d9d9d9c9a9795928d8b868686878b9096999c9ea3a6aaacad
adadadaaa7a4901f1b1c353c3c3c3c49adb1b3b3b0af9932262745555858
585f949d9ea0a09f9f9f9d88393337617f8588888894a8a6a6a4a2a2a19e
9e95888888733e61616b6e89a8a9a9a7a5a4a4a4a4a3a3a3a5a6a7a8a7a5
a2a19e9f9d9fa1a3a5a6a8aaaaaaaaaaa9a5a19b979494959a9da0a09f9c
9496989ca0a3a7a9a9a9a7a39d97918c8987878a8b8c8c8b8a8a89898a8c
8d8e909293919293959391908e8e8e909395979a9a9a9a96959291919090
909194989ba0a6adb1b6b7b7b5b0ada8a49e9994908c8c8c8c8d8e8f9091
919191929394979b9da1a3a7a7a7a7a8a9a9a9a9a9a9a6a29c97928e8e8f
9295979b9b9b9b9c9c9c9c9fa1a3a3a5a5a5a5a5a5a6a7a7a5a5a3a09d9b
98959493908f8c8a8786878b90959a9e9f9f9d9a9694908d8c8b89898989
8b8c8f939597999a9da1a5a8abababaaa8a39e99938c8785858585888c90
939595959595959393928e8d8a878687878b8d90919291919295979ca0a2
a4a4a2a09e9b9a311b1b2e3c3c3c3c3ca1b3b5b1b0a8a048262637515858
58587a99999794939294979c5e3333456f8188888888a5a7a6a3a3a3a2a2
a3a48f8860292d4661646f80acadafaeacababa8a7a5a39f9e9b97959594
989ea4aaadaeada9a5a29e9c9c9ea0a09e99948f8c8c8f959b9ea3a3a3a3
9797989b9da2a5a9aaabadacaaa6a19c969493939597999b9c9c99979594
9495959697969594939392908e8d8c8d8d909193949697999999999a9a99
979797989b9da1a6abafb4b6b6b6b3b0aca8a49f9b9797979a9c9c9c9995
908c87848485868b90969c9fa3a4a3a3a3a4a5a5a5a3a29e9c9793939394
96999c9ea1a2a5a6a6a6a4a4a4a5a6a8abaeafb2b5b5b4b3b1aeaaa6a19d
9c9c9c9d9d9d9d9b98969497999ea3a8abadadaba9a59e978f8683828284
888d93979c9d9d9d9e9e9ea0a1a2a4a3a19f9d99948e8a86848383828283
8585858586898d8f93949593908d8b8b8c8f929597989797989a9c9d9d9e
9e9c9a9a9b9d9f5c1b1b263c3c3c3c3c7daba8a39e99947029262d495658
585866949593929294979c9f92373333557d85888888929e9c9d9ea2a5a9
abaea881321f283256616b73a7acacaca9a9a8a8a4a19d9995928f90949a
a1aaaeb0ada8a29b95939193969a9a9895918e8c8d8e93969b9d9d9d9b9b
8a8b8e929495989c9ea2a5a8aaa9a8a5a09b96959496999ea2a3a3a19d99
95939292918f8c8a8785848585888d92969a9d9e9e9c9b9b9b9a9b9d9d9d
9b9a989797999a9c9ea2a7abafb0b0aeaca9a6a39f9d9d9da1a4a7a8a9a7
a49f9a95919092969b9ea3a6a7a7a5a3a2a09e9e9d9d9c9b989594929191
9395969a9ea3a8abadaeabaaa6a29f9f9fa3a8aeb3b5b7b7b4b0aba59f9b
99999a9d9d9d9d9a97948f8d8c8d91959ca0a3a5a6a6a49d958b85828283
868b909598999796929293969a9fa3a5a7aaabadaba9a5a09b97918c8a88
8888898a8c91979c9fa2a29f9c9795939294979ca0a2a2a2a19e9c979390
8d8c898b8d939b7f1b1b203b3c3c3c3c5f9e9a97959596943526273d5458
5858588388888a8d909396999a5a33333d6f818788888892999ea4a9adb0
b1b0ae902b1f1f283a60647195a0a2a5a8abafafaeaca7a29d9c9ca0a6ab
b0b2b1aca8a29e9d9da0a5aaacadaca7a19b969595959696969594918e8d
878686868686868586888b8e93959899999794918f8f9194979c9c9d9c97
938f8d8c8d8d8e8f8f9091919295989ea4a7abacacaaa7a29d9994939391
9191909294979b9fa3a6a9aaabaaa7a29d979592919294979ca0a4a7a6a6
a6a6a3a19e9d9d9fa1a3a6a6a5a4a39f9d9995908d8c8989888888888888
8a8d9094989ea3a7aaaaa9a7a4a09d9c9b9da0a5a9adaeadaaa49d938a87
86868788888c8f9292918f8c8c8c8c8d909395979b9fa09f9d98938e8d8d
8f93969a9c9c9a96949394979ea5a9acaeb1b3b3b3b2b0b0aeaba7a4a09d
9b9b9b9c9fa3a6a9aaa9a7a49f9c9a98989a9b9e9f9e9d9c9996938f8c89
86848384858b918d241b1b363c3c3c3c4791929295979ca05f2626334d58
5858587497979696969696999c92443333547f848888888da0a5a7a9a8a6
a39f9d9a6a291f212c48626d869ca0a5aaaeb0ada9a39d979494979ca0a3
a4a2a19e9c9b9c9ea4a9aeb1b1afaca8a3a2a09f9f9e9b9894908d8c8d8e
a4a1a1a09e9c98948f8b888586878a8d8f91919391909292939497979898
97959494949495959493918f8f8e91959ca1a7a8a6a09b948d8886858486
8a8d8e8e8e8e8f9092969a9ea3a5a5a3a19c97949495979c9fa3a5a4a3a0
9d9b98979696969696989c9da2a3a3a29f9c97938e8d8b8d909394928f8f
8e8e9094989ea2a3a39f9c989695959593939392939596989897948f8885
83828282848a959fa4a6a7a8a8a9a9a8a8a7a5a5a6a7a9aaaaa9a6a3a09f
9fa0a1a1a19f9b97949393979da4abadafafaeaeacacadb0b1b2b2b0afac
aaaaaaabaeafb0b0afaca8a4a2a0a0a0a0a2a19e9b9793918e8b8a878584
8282828282828483381b1b2b3c3c3c3c4085979798989999812726294357
58585862a5a6a29d999a9ca1a6a87533333d707f86888888969997938d8a
87868686866e301f222e56677e9fa5a7a8a5a39c958d87858486898e9295
979a9c9c9ea2a3a7a9aba9a9a7a5a5a3a3a6a7a7a7a4a29e9a989797989a
a8a8a4a4a19f9e9b9a98979693908f8d8c8d8d8f9194999ca0a2a3a3a3a2
a1a1a1a0a0a1a3a29e9a96938f8e9193989da0a2a09c948d868382838488
8d9295989593908d8c8c8c91969da3a6aaa9a7a49f9e9e9e9fa1a4a6a6a6
a4a4a09d99948f8b89888c90969a9ea1a19e9c9997979a9c9fa1a29f9c98
959595979ca2a3a5a39f9a94908f8f8d8c8a8988898b8c8e919596979693
8f8c8c8d949ca5aeb3b6b5b4b2afaeadaaaaa9abadafafafaeaca9a7a6a6
a7a7a7a5a3a09c979595989da4abb0b2b0afaba7a3a0a0a2a4a6a5a2a19e
9d9d9ea3a6aaaeb0b1b1b0aeaba8a4a19e9c9c9a9795928e8a8784848484
8382828282828285511b1b233c3c3c3c3d729d9d9d9c9b9a984426263a50
5858585881908f8f949aa1a6a9a99d463333547d83888888898c87848282
82828284888f8f4e21213b60759ea2a2a09e9b96908c8987888b8f929497
9a9b9b9d9fa2a3a4a4a4a1a09d9c9d9ea0a0a0a09f9c9896969595959695
9e9b98948f8c8a8a8d92989da2a4a29c948b86848485888d969b9e9e9a94
8e8b8b8d8e929494918c878686878c939ba1a5a5a39d968e868483848484
868789888786868687898e959ca2a7abaeadaaa6a29d9b979796989ca1a7
abaeb0adaaa49b9289848283858b9195999a9796969697999b9b9b97938f
8c8c8d91969c9e9e9d97928a8482828283868b8f939697999b9d9d9a9895
92909092979da4acb0b2b1ada6a09d9a9c9fa4a9ababa9a69f999594969b
9da1a2a39e9a95928e8d90959ca4a9abadaeaeadaba9a9a9a8a6a39d9793
8f8f93989ea4a9adb0b2b2aeaaa39e9a9a9b9c9e9e9e9d9b9998999b9d9a
97928d8a8a8b8f977d1d1b1d3a3c3c3c3c58929292908f8e8c6326262d49
5858585862858c949ba3a7a8a7a5a06e33333d677f878888888787868483
8485898f979fa49d6226285980939396999a9a999896949596989a9a9a99
96969696979b9d9e9e9d9d9a99999999989694908d8a89888b8c8c8f8e8c
92908d8c87858485878c92999ea2a3a09c96918e8c8b8b8b8b8d8e8d8c8c
898789898b8e9093938f8c898684848586898e90908e8b85848282828284
85888a8b8b8987868484878f959da3a5a8a8a9a8a7a6a6a7a6a3a09d9994
928f9193959493918f8b8a88898d92979ea2a5a7a8a8a7a5a4a19f9b9793
8f8f8f8f9194949493918e8c89878788898c8e9295979a9b9e9c9b989594
91919295979a9c9fa1a2a3a3a2a3a4a6a8abaeaeaeaba69e97908d8c9095
9a9ea1a3a19e9a979796979a9d9e9e9fa0a1a5a7a9acaeaeaeaca8a39d98
979797989b9b9c9c9d9d9e9e9e9e9e9da0a1a1a09e9b99979596979b9c9a
999694919091959b922a1b1b343c3c3c3c468e9897979797968d2e262741
535858585a858e909397999c9c9a968c4333344c78838888888b8f8e8c8c
8f94979ca2a3a29e98734882889d95989a9a9b9b9b9a9a9b9c9e9ea2a1a1
9f9d9d9d9d9c9a969492929396999c9c9c9a96928e8c8b8a8b8a8a878689
83838383838385878b8f959ca1a4a5a3a09d9b9b9c9b9b98958f8a858586
8a8f969b9e9f9f9e9d98948d8a898a8c90969c9fa19f9c97938e8b88868b
8e969ca1a3a3a09c969393959aa0a6a8a9a9a8a7a5a6a7aaaeb0b0ada8a1
978d898686858587898c8c8c8c8d8e91979ea5acb0b4b6b6b5b3afaba8a7
a7a8a9acacadacaaa5a2a19e9fa0a09f9d9c9c9d9da0a2a4a7a4a09b9793
9395999c9d9c9a979694969a9ea2a5a8a8a8a7a5a3a2a09e9e9f9fa0a2a4
a6a7aaaaa9a6a5a3a2a19f9c97938e8b898a8e939aa0a4a4a39f9b958f8b
898989888786868686878c8f9396969695928f8d8a878788898b8e8f9193
918f8d8b8886898d903e1b1b2b3c3c3c3c3e7d969a9d9f9f9e9a4d262632
50585858587398999ba0a5a9a9a9a7a578343338647f8788888986878d92
979da2a2a19d98938e8a8187888a8f959c9fa2a2a2a1a1a1a2a2a2a3a3a3
a29f9e9c9a96938e8e9094989da1a3a3a0a09e9d9f9fa1a09f9e9d9a9895
87878a8a888686858484868d949a9ea09f9e9d9c9b99958f8a8683828284
888e94989a9a96928d8c89888685878b90969ea5a8a9a7a39c958f8b8a8a
8d92999ea3a6a7a7a3a2a1a5a5a8ababadaaa6a39e9c9c9ca1a7abadaca9
a59e9c99989897969593908e8c8c87868585888d939aa0a4a7a8a6a3a09f
a0a4aaafb3b7b8b6b3afaca8a5a29e9c9b9b9b9ca3a8afb7b9b6b1a9a098
949294979794939190909497999b9b989695949397979796959493909295
989c9e9e9e9c999797979694918e8a8685878c92999fa3a29d99928b8483
828385898d91959a9c9d9c9995918c8986848382828284898f95989a9a96
938c868484868a9198601b1b223c3c3c3c3c648b8d8f929295957e29262a
4856585858629ea5a7abadadadadadaca745333348798188888888898c8e
90908f8d8986858282828486888b93959695939392929294979a9d9d9d9c
9c9b9b9a9b9c9c9b9996938f8e8e8d8c8c8f92969a9d9fa09e9d9a979596
8f8d8a8c8e8e8d8c8c8d8e93989d9f9f9d9c989796979896938f8b88898b
8e9497999795908a8684848486898d9093989fa6acaeaeada9a29b969191
93959a9ea2a3a3a19e9b9b9c9ea2a4a6a6a4a19d999696969a9ea3a4a39f
9a938d8a898b8d8f9393929291908d8b87868485878b8e92959593908c88
888b8f959a9da1a09d9b9794908d898585848486898f97a0a2a2a09a958f
8d8c8d92949595989a9ca0a5a5a5a29d96929093949594938f8c8987888d
9295989997938f8f9194989b9a97938e8c8c8e93979c9e9e9a958f8a8584
858a8f959ba0a4a7a7a5a39e9a9593918f8f8d8a89888b8e93999da1a2a1
9f9a9696969a9fa2a582201b1e383c3c3c3c579ea09e9d999691873b2626
3b5258585858829ba0a5aaafb1b4b4b1ae7e333338637f85888888878583
82828282838384868a8e9498999996938d8b8784848485898d8e90909192
94979b9ea19f9b938b8582828282838384868b8d919494949596999ca0a5
919192949595959593929191909090919296999c9fa1a2a19c958e888485
86888b8e9194949493908e8c8a8a8c8f949aa1aab0b3b3b1aca8a29a9490
8f91969ba1a4a5a29d958f8c8b8e9295999a9d9c98979596979899999692
8c878484878a8e93999da1a4a5a8a8a5a19a928d8884868b92989ca0a09d
999695939392908f8c88868484848384848483848484878a8b8b8c8d8d91
979da5aaacacaaaaa6a5a5a5a6a5a09a9088858585858585878b8f93999e
a4a5a49e9892909194989c9e9e9b96908b88888a8e93969694928e8c8d8e
93999ea4a7a9a9a9a8a39b938d8a898c8f939496949492909294999da2a3
a5a6a4a2a19e9d99968a2b1b1c323c3c3c3c4696a3a2a29f9d9994632626
2f4b57585858699aa1a6abb0b2b2afaca8a0513333487981888888878485
88898c8e929497999b9d9d9c9a96918d8c8c8c8e8f929392919193959a9e
a3a6a8a7a5a09a938c898a8d8f9397999c9c9a9795939295979da0a5a9ac
8b8e92979da1a2a3a29f9c999594939090919294949494969593908d8a8a
8a8988888a8c9092949693928e8c8c8d93999fa7adb0b4b2afaaa5a09b97
96979ca2a9adb0b2afaaa49d94928f8f90919394949290908e8d8d8c8a86
858484878b8f9293949696999b9da1a4a2a09c97928d8b8b8e959ba2a6a9
aaa8a6a29d97928d8886868686868b8d9090919394949594939390909092
969ba2a5a8aaaaaaabacadaeb1b0ada79f98949392908f8e8d8e9194989c
9fa19e9a958f8e8d8e909396979695918d8b8b8b8c8f909192939494979b
9ca0a2a2a3a4a5a5a49f968d87848283878a8d8e8e8e8c8c8d8f9296999b
9c9d9d9b9b9a9b9b9b9d401b1b2a3c3c3c3c3d8099979795938f8c7b2e26
2844555858586099a3a3a4a5a5a5a19f9d9b81333336657f858888889098
98999c9c9ea0a0a09d9c9995938f8e8f9394969595938f8d8988888a8b8c
8f9194969697969595979ba0a4a6a7a6a39e999595969a9fa5a8abababa8
8b8d90969ca3a6a7a7a5a29e9b9693908e8e8e8f8e8e8f909396989c9ea1
9f9d97918b87888b8d90918f8c858282838486888c919aa2a7aaa9a6a39e
9997979a9fa6acb0b4b5b6b2aea8a29d9a9a9da0a4a4a4a29e99948f8b87
85858586878786858484838384868b9094979b9e9f9d9c9895928e8d8d90
95999d9e9e9d9c9996969696999b9b9ea2a5a8aaa6a29a938c8888898d94
9ba2a8aca9a7a3a09fa0a3a7a8a8a6a09b9695989c9e9f9d9a9695949698
9c9c9e9c9c9a958f8a868484858686898a8a8986838282828484878c8e8f
8e8d8f93989fa4a8a9a6a19a938c89898d91969da3a5a7a5a5a4a1a09e9e
9d9c9a95949495979ca0601b1b223a3c3c3c3c659190908f8c8786864226
26374f585858587ea3a4a7aaabaaa6a09a94914d33334871818788888b90
8d8a898c8d8d8e8d8d8d8b8a8e93989c9d9d9a96928e8a8b8a8a8b8b8b8b
8e92979b9ea1a09f9d9c9895918e8a88858483838588919ba3a9ababaaa9
888b8e93939494918f8e8d8c89888686868a8d949a9d9fa0a0a09f9e9d9d
9d9a958e8783828284888e949697938f8a8684858a91979ea3a5a7a6a39e
9b99999a9ca0a4a5a6a5a4a09c97938e8b8e939ba2a6a7a7a5a3a1a1a09f
9e9d9b9896949496979a9a97938e8a898c8f94959796928f8e8d8e909396
9b9ea3a5a5a5a49f9b979495999ea3a4a6a7a4a09b9794928f8e8f8f9092
969a9da1a5a6a6a4a29e9b9a99958f8b8684858a8f959c9fa2a09f9c9b98
95928d8b8987878a8c8d9090908c8784828282828282868b90969b9d9d9b
95908d8b8c8f9296999a9a9995928f9091959ba1a7a9a9a9a5a29f9f9fa1
a4a5a5a4a09e9c9b9b9d7d1f1b1d363c3c3c3c548587898a898988886727
262b46565858585f8b939aa0a5a6a39e9a959076353334567d8588888888
8e8c8d8e8e8e8c8a8a8a8d8d8d8d8c8b8a8c8c8e91949596959793908d8c
8c8d8e93959695918c87858487888888888685838383868b919699999897
8f90959a9d9d9c97938d8a878787878788888a8b8f93949696969593918f
8e8c8a86838282828282858990969a99948f888584878c93979ea3a6a5a3
a19d9c9c9d9ea0a2a3a3a19e9e9d9b989797999c9fa4a4a3a3a19fa1a2a4
a6a6a49f9b96949495999d9d9b97959394959a9b9a96918b86858587898b
8e92969b9d9d9d9a9594909195999d9f9f9d99948f8c8c8c8e9293928d86
84848486888d959c9fa3a2a09d9a9692919295999ea5aaadadaca9a7a39e
96918a868585868b8f949695948f8a85828282868a8e93969a9c9f9f9e9d
9c999795959696999a9b9c9b9996959495979ba1a6a9a9a6a099928c8b8e
92969da2a6a8a8a6a4a093271b1b2f3c3c3c3c40878f9394969594908734
26273e5258585858879da2a5a5a39c968f8683825333333f717f87888888
9fa7a7a5a29e9b9a9b9b9c9b9a989897999a9b9a97928e8b8b8c8d8e8e8f
8f8f8e8e8e8e8b8a898b8d919595938e8a868686878a8e9192928f8d8a8a
9c9fa4a7a9a6a19b948d8b8987888a8d92979b9d9c9b96938e8d8c8d8d90
9291918f8c8a898687898a8e92969b9c9b9795908c8786878b8e93969797
95928e8e8f9194989da1a5a7a9abacacacaaa8a6a5a4a3a19f9e9d9c9b9b
9b98979591909193969b9fa09f9f9c9c9d9da0a2a2a2a19e9c9794918d8c
8c8d92969a9b9995908c8a8b8d93969897958f8b88888c8f969a9d9c9790
8d8c8c8f92969c9e9e9d9994938f8e8d8e93999fa4a7a6a29c958f8c8b8d
91959a9da09f9f9d9b96918a858282828284889196999a9a9b9c9da0a4a7
a59e948c8987868686888a8b8c8e8e8d8d8d8e92969c9fa39e9991898686
8374737673667482a29f9b4b1b1b273c3c3c3c3c719597999895918d8853
2626304d585858587096989a9a98948e8a8786897b383334587c83878888
8fa09d9c989491909393979b9fa4a6a7a7a6a4a29e9fa2a6aaacada9a49f
9b96939090908f8f9093979b9d9f9e9d9a99979696969593918e8e93979d
86888b9095989896928e8a898a8c8f9293949698999996938e8d8c8e9397
9a9d9f9d9d9b9b989a9b9ea0a3a6a8a8a8a6a4a4a39f999189858586898c
8e929697989a9c9ea2a4a6a6a5a39f9c9a99999c9d9e9d9b9793908d8d8f
919295979a9da0a5a9acaaa9a8a5a29e9c9998989a9da2a5a5a4a29c948f
8b8686898b8f93979c9f9f9f9f9c9995908d8a86878b929aa3a9adaeaba6
a2a0a1a5a9acaeada99f93898685858485878c9093989da2a1a09c979595
979c9ea2a19d9893908d8a868583828283858a8e90919595999ca1a5a7a6
a0978f88878b8f949699999999999795959595999b9ea2a5a3a29d9a955e
33273c4a4a4a4a4f949997651b1b223b3c3c3c3c5f9596948f8885838474
26262944555858585c8d8d8d908f8d8c8a8d91969b583333407180878888
888d969a9d9fa1a09f9d9d9d9ea1a1a19f9c999797979899999794908e8f
9399a1a9abaca7a4a09e9da1a3a5a5a29b968f8c8a88888a8e949ca3a6a7
8282828486888c8f8f8f8f8f90939497989695949191908e898483838486
87898d9094979da1a4a8acafb0b0b0b0aeacaaa7a4a29c93888282828282
8388949ca2a5a4a4a4a1a19f9d9e9c9b9794918f90909293949594959694
9492939596979a9d9ea0a2a19f9d9a9693929192969b9ea2a3a19d999592
8d8b86848485868a909598989794908d8b8b8c8c8c8d8f94979a9c9b968e
8a87888c93979c9e9e9b9995969694918c8b898a8c939aa1a5a6a4a09c9b
9b9da1a3a3a09b98969393939493908c86848282828283858c949a9d9e9f
9f9e9e9d9e9d9f9d9b99949493939394989c9fa2a2a09c96918d8a8a8b3d
2121324a4a4a4a4c818d8f7e1c1b1c363c3c3c3c46a09e98918b898b8f94
3f26263a5158585858799694928d87858384858a9185353333597d838888
888e9da1a4a7a5a39e9b99979795938f8c8886858483848484858686878b
8e94979b9b9c9b9c9c9c9f9f9f9a948c8583828282828284898e93959392
858486888f969da2a4a3a19f9fa1a2a4a4a19e9b95928e8c898686858586
898a8c8c8e91989ea3a8acadacaba5a09d9c9c9996938d88868483838382
828489919598989695928f8e8f9194979897948e89838284868f99a1a7a9
a5a09b9693908f8e9093979b9d9d9b96928e8a898c8f9497979695949494
949693918f8d8f8f8f9191908f8f8e9093969a9b9a98989899999897928e
8c8b8c8f939593908e8c8a8c8e929697969696999b9fa2a09c97918c8a8a
8d939aa1a6a8a4a39f9c9a9a9da0a29f9b938b868484878f9aa3a8a8a9a9
a6a49f9a95908c87858484838282828383858586868685838385888f9846
21212e4a4a4a4a4a758e8f8c2a1b1b2f3c3c3c3c3e8a8e88858484858a90
6526262c49575858585d86858586898e9396969697986533333e6e7f8688
8889959a9b9b9b97969393939597999b9b97948f8c8c8c8e8f94979a9c9c
9c9ea0a0a1a09e9d9c9a9a999a999795908a8582828283858a8f93959697
9294989c9fa2a5a6a5a19c979595979b9ea1a29f9d9995928f8e8d8e8f90
94979b9d9ea2a3a39f9a95928e8b8a8a89898988888887878788898a8a87
858382848485888e949a9da1a3a4a29f9b958f8b8787898e949ba4a9abab
a7a49e999594979b9fa09d99938f8d8e929595948f8b86868686898a8a8a
8a898a8c939da7acadaaa8a4a2a0a2a6aaababa7a4a2a1a2a5a6a6a6a39f
9d9c9a98948f8a85848282848b91969da2a4a3a2a1a19e9b96908c878585
888e949a9e9c98938d87868685878d9395938d8784828485898d90929495
94908b8684848485868a8a8888898b8d8e8e8b858382828384868e98a059
21212e4a4a4a4a4a799fa4a9501b1b273c3c3c3c3c69828282828282868e
8731262642535858585c8996989c9fa4a6a6a5a5a5a59d413333527a8387
837d7d848585868b9095989a999797999d9fa2a3a3a29f9a9693959a9da3
a4a39f97928d8a8b8f949ba1a5a7a6a39c96908d8c89898b8e939a9ea3a3
a2a2a2a5a3a29e99948e8b8b8a898a8b8e93979da2a4a6a6a5a4a3a3a4a4
a3a3a2a2a5a8ababa79f938884828284888c8f9190908e8d8c8c8a878585
888b8f9395969696999c9ea0a29f9c99949291929395989da1a5a9adaead
a8a097908b88888b91969a9b9b9994928f9194979b9d9c9b9998999a9a9a
96938d8b8d949ca5aaaeada9a39c95908f8f8f919394979a9da2a3a4a09f
9c9c9d9e9e9c999592909193979c9fa3a6a8a8a8a5a4a3a19f9d9c999794
9291929495989b9d9f9e9e9b96938f8d8c8a88868482828282828385888c
8f909293959698989c9d9f9d9b97928d8a8a8e92959a9b9b9a9c9ea4a662
21212a4a4a4a4a4a7ba9acb0751b1b1f3a3c3c3c3c538282828282828587
894a2626334e5858585873919595979693928f8f9194966233333f666258
6561657f828384858a8e929494979ca4a9adb0b0b0aeaaa6a4a2a2a19e9a
958f8d8987868686898c8f9295999a99979391908e8a8684848485868b92
9b9b9b999796979593908d8b888787888c8d9294979a999896938d898789
898b8e959da2a6a9a9a6a39b95908d8d9094989ea4a8ababa8a29b938d8a
8d90949697989694908d8a8b8e94969b9e9fa09f9e9d9b989696989c9fa4
a5a4a19d9994919093979da1a09d948e88868a919aa3a8a9a8a59f9b9590
8c89878686898d959ca3a8aaa8a29a938e8a8685858486888d959da3a9ac
aba8a49f9c979495999ea2a5a6a7a6a8a9ababaaa7a4a1a0a0a1a4a6a59f
98938e8b8d939a9ea3a5a5a4a29e99948d89878684848587898b8a8a8887
86898d9093918f8e8c8e92969b9d9b9996949695989896949496989b9d6e
212124474a4a4a4a73979a9b841f1b1b353c3c3c3c488989858282828282
836e28262845555858585d808585878a8c8e8f8f8d8b8a833d33332d2f2e
5b6163879a9ea09e9e9f9e9c97918d8c8b8a8d92989ca0a3a4a09b95908e
8f92948f89828282828282828283838484858b8e8f8e8b8784838386898b
979ca1a5a6a5a4a2a3a3a3a3a09a938d8a8b8c8e90908d8c888787878784
84848489939a9fa3a29e9b9794918e8e8c8b8988888b90959695908b8784
878b8f8d8c8a8b8d8d8f91969ca0a4a5a39f9a928b87858687898e92959b
9ea3a4a4a09c9a999ea5acb1b2b0a69d948e8f969ea5aaa9a7a39e9b9693
91939495989c9fa4a7aaadaeaca8a098928e8d8f94979a9a9796989a9da1
a3a29d97928d8d8f959ca1a3a39f9b9997949392908c8a898a90959ba0a3
a6a7a8a9acaca8a39e9a999da0a19f9c989596999ea3a7acaeaca79d958f
8c8e93989c9c9b9895979a9d9f9e9a948e898786868787898d92989ea17d
212122454a4a4a4a558a8b8984331b1b2b3c3c3c3c418891878282828284
89863826263b50585858587e9697999b9d9f9e9c98928e8d6936281f252d
41616183999895938f8e8b868382828283878e949ba0a5a5a19a928d8c8f
93979794908c8a8a88878582828282828586878887868684838282828282
9997989b9da1a3a2a39e9d9b9a98969490909195979a9c9d9e9fa09f9e9b
96918d8c8e939aa2a5a7a4a29f9e9e9fa0a09d9a95908c8a88898888888b
90949897979595999da0a5a5a5a39f9c9b9b999694949494939293939397
9b9e9f9d99938f8f8f9396999997938f8e9092959a9ea3a7a9a8a7a4a2a1
a0a1a2a1a1a0a1a19f9d9b999896948f8b87888e969ea4a6a3a19d9d9ea1
a4a29c968e8b8a8c939da5aaaaa8a4a09b989594949493919192969ba1a7
adaca9a49e9994908f8f91939392909093959aa1a7a9aaa9a8a59d96918f
8e90959b9e9e9b969393969ca1a3a3a09b95908e8d8d8e8f949a9da1a485
232122454a4a4a4a5b9b9b9a994e1b1b243c3c3c3c3d74938f8f8f939494
93905726262e495658585865898d8f92959a9ea09f9d99958b3c1f1f202b
2d5b6170828282828487878b8c8c8b888787888d949ba2a7a7a6a4a2a19f
9e9d9d9d9e9f9d9b96938e8b888686868687888d9296999a979087848383
9e9e9d9b99999b9c9ea0a09e9a969596989da1a3a2a09d9a9b9da0a3a4a4
a19c95908c8b8d909497979a9a9a9a99958f8a868585888d939a9d9e9c9b
9a999795918c8885878a8e909191919395999ea2a5a29d98938f8d8c8c8f
94979c9fa2a4a3a29e9a948f8d8b8c8f969ba0a2a19f9d9d9d9d9d9c9894
918f9194979c9e9d99938e8c8c8b8b8c8c8e8e92979da2a4a5a29e9d9e9f
a3a6a6a4a09d9b9ba0a4a8a8a6a39e9b9b9ea3a6a7a6a39b95918e8f9295
9798989796969a9da3a6a9a6a39c969595969a9d9e9f9fa2a4a6a7a7a4a1
9c999795928e8b88858586888a8d8d8c8a8a8b8b8c8d8d8d8d8e8e8e9083
292122434a4a4a4a559ca8a8a8731c1b1e3a3c3c3c3c5c96999b9ea2a4a6
a6a58c2e26284153585858588a999da1a2a2a09c9894928f8e7a371f1f24
2d4961698c8c888686878c8f949695938e8c8b898b8d8e8f939495979898
9999979696949394969a9da0a19e9c999797979b9ea1a19e9a948f8e8f92
92949496989b9e9f9fa09c9a9795918d89888c93989fa2a19c948c898888
8a8a898a8c8f969b9e9d9b9a9a9c9c9c9b97928c878482838485878b8c8c
8d9195979794918e8b8d92979b9c99948f8d8d8e8e8b888687888c8e9195
999ea4a9b0b1b2b0ada8a39e9995908c8887898d90969b9b9a989391908f
8d8a8a8b8f949b9d9a958e8684838485878e9294959694939292959b9fa3
a5a6a5a19c938c88878787878787858585878c929a9d9fa09d98928e8d8f
90908e8b8889898e959697938e8e8b8a888686888e979da2a2a19e99938b
8583838382858889898888868585888b8e93969695908986848586888f87
2a2121394a4a4a4a57a0a6a6a68c231b1c343c3c3c3c48898c87878c949d
a5a9a84e2626384f58585858779b96908d8b898a8c8e8d8c888670261f1f
293461668a8d8b8c8f93949494928e8c8988878a8a8c8c8f95989c9c9995
8f8986848485868e979fa5a7a7a4a29e9a948e8a868686868c9296999997
96938f8f8f8f8f91949494928f8d8c8c8c8d8d8e8d8b8b888787888b8d91
9493908e8d8d949ca3a7a7a39e968f8a8887858583828486898d91959698
989693918e8c8b8c8c8b8a898a8f939696938e898786878e959a9b9b9690
888687888e99a2a9a9a8a39e9a98999da1a5a8aaacabaaa6a29b938d8a8a
8a8e8f92969a9b9b9a97928e8c8c8c8e939597979694928f8e8b89868485
858588858382828283878c8e8e8d8a878482828283858c949b9f9f9e9b9b
989695918c898685888d92979ea4a8a7a59f969190949aa0a29f988f8884
85878d8f9292918f8d8a8886868688898a8a8a8a89888786868686868686
3b2121334a4a4a4a4a7584878a8b341b1b2b3c3c3c3c3e78868485898e92
93928f6726262a4657585858598689898a8c8d8f8e8c878383858a72291f
222d4d6187979694918d8b8886868686878c91969b9d9e9b969089868486
86888e8f91918f8c8a8a8988888a91989c9d9a96908b88888c9193938f8a
9a9b9a9996928d8a8786848484858687868686878b8d8e8b868483848586
8a8c8c8d8f949aa1a6a7a5a19c9895918c86858484878f999d9d98928c88
8685868684848485878b8d8e9293969a9ea3a5a29b958e8c8f939697958e
87848485898e9192908e8d8d92979ea2a3a4a49f98938f8f9295948f8a85
838586888a8b8c8c8c8e8f9392909092939697979496989b9b9a958e8682
8283858585868687898d8f8e8d8b888a8988898c8e949b9d9b968e878585
898f94989894918f8f93999ea1a19b948d8b8b8e94979795908c8988888b
919aa3a9aba9a49c9490909497989894918e8b8c8b8a8a8c8f939a9ea29d
3f2121334a4a4a4a4a7d959ca3a6511b1b233c3c3c3c3c65878584868787
868788883026263d505858585891a19f9e9e9c9c9d9e9fa0a1a09c97712a
1f25355f7a8f8c8c8c8a89898b8e94989d9e9d9d9c9b979592908e8f9296
9a9d9e9e9c98938e8d8c8b8b8a8a8b8b8c8c8a87878686888c8d8c888685
8c8b8a8d8e939a9fa09e97948f909395979795939191918f8e8d8e909090
8f8d8986878e959ca09f9c979390919596989999989697979695928d8b88
8b8e9192908d8d8e91959898948e8a86888c929494908e8d91969b9d9d9a
9794928f8c8987858585878c929697989594908c87848283888e92938f8c
898888878a8b8d8d8e909292908e8c8d9195989a97938e8a8c8e8e8f8c88
8787888a8c8d8a8888898b8d929495948f8c8b8f969c9f9e9a948e8d8e8f
8f8d8a8a8889898a8c8d8e909294969a9d9d9a958e888686868787898b8f
959c9f9f9d9a9793918f8f908e9293969695918c8887898e93989fa5a9aa
572121314a4a4a4a4a7b969494946a1d1b1f393c3c3c3c56898a8d93989d
9e9e9c9a4f2626314b585858586a929291929295989c9fa09e9d9a999777
2c202c5370888a8d9295959395949493939395979a9d9d9d9f9f9e9d9b98
93908c8b8c8d90929394949495949390908e8d8c8d8e9193949190909195
8c868382828387949ea4a6a29d9b9b96938d8b88898b90969b9b9c9a9999
9a9b989593919194969696969593918e8986868888898b8b8d8e8c8b8786
86878789898b8d91959ca0a3a4a29e98928d8d8e8f8e8d8a8b90979c9d99
938e8b888686888b8c8b8d9095979797979693908c8786858b92999ea1a1
9d97938e8b8b8f959da3a7a8a7a5a3a1a0a1a09f9e99938c898a8d919699
97969493928e8c8c8c8d8e909394928d89898b8d9192939596989998958e
898483838282828284888f969da2a3a3a09d98938e8c8c8b8786878b8f95
9798979595989a9b989695969a9ea0a3a3a19c98938e8c8c8b8a8c91979d
51212129494a4a4a4a7b918d8e9182241b1c303c3c3c3c447f8687888888
8886878d7f29262743535858585c8f9ea6a9a6a098928d8c8c8f95a1a8ac
8627234a74928f8b8887868587888c909393918d8a8887878d92979b9d9c
99959495979999979593908f8e8d8c8d8e9095969996928c868484848489
96989795949495979ea3a4a19a918b8787858482828384898b89888a8b8b
8c8d8e92979c9e9f9d97928e8c8d90908e8c8a8887878a8e959899969595
959595949491919396999c9e9fa1a3a4a4a29d9794918d8a8888898c8e8f
8e8d8d8d8e92979a9b999794929393959595949393969898958f8a88888a
8b8b8b8a8c8c8f9193918f8f93979c9f9e9a95908d8e908e8e8e91969fa1
9e968e8a8c8f9497979795939293959a9ea1a2a09c9a999693918f8e8e8e
8e8d8a87878585868f999fa4a6a39b938c8b8d93989c9b948e8c8e909393
908e8c8d92989ea09e9b979695928e8b8887878890979e9d97928e8e9195
6b212125464a4a4a4a6d9ba0a4a4a0371b1b293c3c3c3c3d7a8483828386
8b909496923d2626384f585858587486898b919393918d8a8684878f99a0
a484394c7f93908d8b8786848383858d949b9e9f9c958e878686878b8a8b
8d8e908f8d89898e959ea3a29a8e8685848a909494938e8c8b8b8a8a8d93
8a87888a8e90918e8a888989888887888c9193918d8d8e93969a9e9f9f9d
988f86828282848587898b8d8d8c888a8a8c929597948e8b8a8b8b8b8987
86878c939798999b9da0a2a5a5a4a3a3a09d978f8988898c8f8d91929193
94969a9b9894908d8b8d8e919292969a9ea1a19e9b9b9d9e9b958d87888d
9295948f8a8684848587888b8d8f8f8d8d8e8e92979a9b99948f8e909598
9a9b9c9d9f9d97918e8e919697958e87878787868a909396969594959597
95918d8a8a8988898a8c8a8b8a89898886888f96a1a9aaa9a5a19fa3a7a8
a49b928c8c8e90918f8d88898d94999a958e8b888a8e8e8c8a888b8e9294
6b212125464a4a4a4a5d939aa0a3a35d1b1b213a3c3c3c3c6a9e9e9fa0a1
a1a1a3a4a57026262e47555858585f898d929798969594939396999ca1a5
a9ab883f669a9c979493919191908d8b8c91989da09e9b96928e8d8e8e90
908f8e8a868686898b8a8987878789888b8e93959696969693918d8a8988
908e8b8a8a89878685848586888c8f93979da3a4a09a928c8a8c91969898
958f8886868a8f92928f8d8d8e8f8f8d878485858686858385878787888a
8c8c8e8f90908e8f93969797969597999b99958e888787898c8f959d9e9c
96918e8d8a8788888a8c8d8f8c8d8d9095989b989695949494928f8d8a87
878d949da3a3a1a1a2a3a4a39f9e9a9897969695918c8c8c8b8a8b8d959a
9d9d99938e8c878687888b8e8f9294969a9d9b97918a8787888a8b8a8789
8c8d8b8886878d98a1a5a098908a8a8d8d8a8a8f959a9c9b989595979997
96939295989c9d9c9b9a958f8c8c8e939392929092959897938e8a898788
6e232124454a4a4a4a5b8e93959597721c1b1d363c3c3c3c5593979da2a6
a5a3a1a09c8a3026263f525858585a8a9c9995918f92979fa4a6a6a29f9d
9c9b9b86568b8e8c8f9aa3ababa79d948d8b8a8d939ba1a5a6a39c938c8c
8c8f8d8b8786858585848a91969a9a96949292908d8b8b8b8f908f8a8584
9595949190919394959596979a9ea2a3a4a4a4a29e9b969594928e898685
848483848a8f95979795908f8d8d8e8e8d8e8e8e9090908e8b8b8c8d8d8e
8f8f90939597989694929192939496989b9996928d8b8a8c8e8e8d8e8e8b
8887868585878d9296989695918e919597979594979ca3a6a49f978e8684
868b90969b9b989898999da1a3a3a39d9793908a85848a8f939593919092
959695928f9091929393928f8c888a8f969a9b958c8786868686888a9096
9b9d9d9b999b9c9e9e9d96908c8c8e908f8b86848689909697938c8b8c8f
9296969393989ea5a8a7a2978e8c8e979da1a29f988e7b7e85858b8f9498
812621223d4a4a4a4a59889197979385211b1b303c3c3c3c40969c97918d
8f959ea5a9a7502626334c575858586c8f8b87858484878d959b9e9d9b97
94908d8a83848587898e94989b9f9f9e9e9b9a97999c9fa09f9e9a969495
96949393908d8a8b8d8e91908e8e8e93989c9d9b968e898787898988878a
8a8d9295989897938d88898c8e92969796948f8d8c8c8c8d8e8f8e8c8684
858586878c94979b9a989793928f8d8a8889898786888c8f8f8d8d8d8d8d
8e8e8c8b8c909396969697999a97938e8b8b8b8c89878484868584868688
8c9092918d8c8c8f919191929392908f92959796959595999c9d99928b86
85878a8e8e8c8885848385898e969fa19f99928a858385868d949da09f9b
96928e8d8c8c8e8e8f908f8d8884858b91979a9b97928e8a8888898c8e8c
8b888585888c8f949697979799979693919090939a9fa4a19b9188868687
898a898a8f959ca19f9b94909095999da09f9f9c5f544e647e89959ca2a0
8e2c2121374a4a4a4a53868e8f8c87832f1b1b283c3c3c3c3c8094949496
9ea4a6a7a6a57a27262945555858585a898e8b87888a8d8d8b8b8a898a8a
8a8a8a8a88878685868787898c9094979ca0a3a5a19c958e8b8d939ba0a0
998e858585858586888785848588909ba2a5a7a59f9a9795959494959799
8c898b8f979ea09d958d88878a8d91949498999a9a999a9a97948f8b898c
8e92969a9fa6a8a6a29b948d8a8a8d909295969b9fa5a7a79e938a88888b
8d8d8b8687888b8b8b898a8d8f92908e8c8786878b8d8f8f8c8785868788
8b8e8f909294979b9f9e9a96928c85828283868b959ea2a6a6a5a09a938d
8a8c8f959a9a948c858383838689888d909497958f8b8785878d959da09f
9b948d8a8a8e90969fa3a4a1988c848283878c918f8b8583828283828282
828283878d8f9194969998948f8c8b8c8c8e9093969b9b95908986838282
8282878d93989ca1a4a6a6a3a19c948d898989874d4d4d637e8a959ca294
86322121364a4a4a4a4c909d9a999796571b1b213b3c3c3c3c6298959291
94979c9c99958f3b2626384f585858587ea19c9790898686868b91949899
97938e8b8b8c919595959494938f8e8f959ca7abada9a29b9697999d9d9c
989592919291919193949494918e8b8888898c8d8e93969a9a96908e8e8e
8284878d929595938f8b8b8b8a8a8c8d8e8e8e8c8a898688868686878c8f
929392909295979b9c9d9e9d9c9896979a9e9e9c96918d8a88888c94989b
9a979693969ca1a19d968f888786888e93938f8b898b8d9094948e8b8986
8382828485878a8d8d8e8d8a8a888586878c93989da09f9f9e9c9b96908c
8a8b8f939596999895908c88868584828283868b8f918e87868687868585
858b939b9b9a9899999a999794908f909394928f8b888989898786858283
86888c8f92949493908e8a88888b8e8f8f8e8a8686888c8f8e8e8e8e8d8b
8888898b8e92929192969ca0a3a0988c868485824d4d4d637e8a959ca295
88342121364a4a4a4a4a8891908f8e90751b1b1c373c3c3c3c4785848484
878b8f9192908d5926262e4957585858699fa5a5a39f9b999898999a9b9b
999593908f9191918f8b878586878b8e8f919496989796918d8b8c8d8d8b
888687878b8f95979795928d88878585878a8c8b8988898c8c8783838386
8e8c89878786878a8e91918e8d8b8885898e94938f8e8d8c8b898a8e9093
94928e8a8a8d909394959aa1a6a6a49d958f8c8b8d8f92918d8a87898c91
9596948f8e8f959da3a5a39a918a88898b8c8f939596959494918d878583
8283878d8e908e8e8c8884828385858686858484868a8e939aa1a7a7a097
8c8482828283889094969593909090909090919395959595949394928f8c
88888b959b9e9d9a928d8c8e92989b97918b8685868f9698948d86838384
87888a8d93979b99948d8785858b909394918e9094989895918d8b8b9097
9b9b999694928f90959ca3a4a39e968f8c8988854d4d4d637e8a959ca29c
944121212d494a4a4a4a7b898b8d919288261b1b2f3c3c3c3c41858f8c8b
8d94999b999594862b26273e525858585887929193928d87858586888b8c
8a8888898b8b88868485888c8f92918d878586898d949ca0a4a6a49c8e86
8483868d989fa19e9b97929292918d87868687888988888b8b8a898b8f95
8b8f94979894908c8b8b8d9292908d898584848484848585868685868688
888987878584858485878c8f949a9fa09e9a959392929393918f8c8c8988
8a8e919496999b9b9a9999979593908f9094999b98938d8b8b8d908e8a87
86878c8f8d87848382838385868a8c8f92918d89888a8e959ea5a9aaa59e
968e8583828284878c90969a9d9d9b96938f8c8c8e908e8c89898d919494
8d878486898c8d8b868482848688888685878c8e9292908d8a878686898a
898684868b8a8b8d8e8d8e8f8f8e8e8c89888a8f989fa09c958f8b8a8e93
979895928e8c8886858a8f93928d898787888a854d4d4d637e8a959ca296
8a41212128474a4a4a4a7a898e9191908d3f1b1b253c3c3c3c3d7594908e
8a8b8d8e8d8d9096442626344d585858586c8a939b9c9893929192949899
97928d8985848485848484848485858486888b8d929596969493908f8e8e
8e90939596958f8a878a8d8e8f9093979b9fa09f9d9a9795918b88878586
8f9393949492908d8b88888c909598958e86848283888e94928d86848584
82828284898e908f8d8a888a8d8f93949595928d888584838484878d9293
94918d88868a8e90908f8e8a888788878786868685878c90939697969494
959b9e9c98918d8c88868587878785858584868a8d939798979594929292
9396969694908c86848384868c8d8c88858583838585838485878a8e9194
95938c8c8f9496958d88848385848282838385888a8b8a89888685868787
888b8f928f8c88888c8d8c88888c93969492919395969494969796949595
97999997949390908f8e8c8c8f92938d8784827f4d4d4d637e8a959ca2a0
9b5f212127474a4a4a4a658c8d8e908e8a511b1b1e3a3c3c3c3c568d8e8e
8e9193918e8b888a6826262b45555858585b838687858483848587919a9e
9a95908d8a8785878d939595938d868484878b949a99959494969795928d
8b8d95999a9a96918d8c89878788888a8d8f8d888484878c9396999a9a9a
94969795928f8f8f8f8e8986858a8f8f8b85858485878c8e929290888786
868688888a8d909496948f8c8e9092929295999b968e8a8584868787898b
8f908f8f929494908c8b8c8e908f8b8685858586878789878685868a8d8f
9494949a9fa19f9d9b98979a9b9a9790898484878c92989b9c99948d8c90
979d9f9f9d9c9a958f898484878c8d8b85858484838486898d959da2a5a7
a39a908f908e8d8b888b919598948d88888d9396928c8888888c8c888684
868c909494908a8684838282868d9394908d8a8b8c8e9191908c87858586
8b8d8c8c8a88888d91908e8d9195999896928c854d4d4d637e8a939ca299
9a62212127464a4a4a4a638e8d8c8b8b8d761d1b1c353c3c3c3c4d8e8c8a
898d8f8d8b888888852d26263b50585858587c8f8a8787898e8e8c888986
848383868b8e9193959696959694919090949a9c9a969393969899979594
928e8c8c8d9193928f8c8b8b8e949a9c9c99979697999a9794908d8d8f94
8d92979b9b98928e87868585858c90939393928f8f9091908f8e8d8d9092
959592908e9092969c9f9d98928c888787878a8d8d8c898787878787878c
8e90908e8c89898b8c8c8c8d8c888483838384888d8e908f8d8b8b8d8e91
948f87838384878c8d8e8c8b8c9296959494939192909194989895939498
9a9b9797999ea09f9b958e8785868788898c909392909093999c9c958b88
89898a8c90949697989795928e8d8e9092929394939394959795908b8a8b
8e9192928d8887888887878c91989c9e9b989695918e8f91939391919090
90979fa19d968b86898d9599999794918e8f8f884d4d4d637c88909ca299
9a72222123414a4a4a4a5f959595959593882a1b1b2c3c3c3c3c42818d87
8485888c92979a958b4b26262f4b57585858658c8b89868686888c8f918e
8a8584878c919596969797999894919194969b9b9b9c9a96949395959691
8e8b8b8d8f8d8c8a8c8f93969a9c9a95928f9093979c9e9d98928d8a8b8e
8b8e93969494999b9b98938e898c92979b9c99928b87888a8d8d8b8a8a8b
8b89878787898a8c8e908f8d8c8988888c9092918d8d8d8b88848282848c
959c9c96918e8e90908c8482828386898a898b91979ea29f9c999999948b
8887868689898a8b8b8f8f8d8e939698999b9a96938e89898f969b9c9891
8c8a898c8f95969695928e8c8e9296999a9a9a9b9a928884848585848385
8a8d8d868382858c95989a9a97938f8c89868787898e959ca0a19b928e88
86868687868684888c908f8f8f9494939394989a96928f8c878686888787
888c9294928e868486878f979a99968e89878b8c4d4d4d637c88909ca295
91702321213b4a4a4a4a5f8e8f93969b9a923c1b1b253c3c3c3c3d748a8b
90959a9c9e9d9a95937b28262743535858585a8794929191908f8f8e8c8b
8a898b8d8c89888a8e939697979695959492929494938f8b8887888b8e92
959693938f8d89868585878b92969a96928c87878888878686898b8d8e93
8c8c898583838587898b8e959897948f8c8d8f8e89848485898e92948f8d
8d8e90939495918d8b8989898b91979b9fa19f9b938e8c898887888b8c8f
8f8e8f8f8e919494938e8a888b8b8a8c8f9395979796969594928f8e8e8f
8f90919193979a9b9b9996949596989b9a9794939495938f8b8685858788
8e9497958f898b8c8c8c8b88888b9095989b99938f8a8482838686868584
84878c8d8c8a8b8c8e8f8f8d8c8b8a88898b8b8d8c8d9193949597969691
8c8a8b8e8f8d8a8a8d8d8e8c8c8d9095999e9e99938f8e8d8b8a8c8f8f8f
8f919394938d8b8b8f9293928e8c8887878584804d4d4d637c88909ca298
8f7c2621213b4a4a4a4a4f909390908d8886581b1b1f3a3c3c3c3c598688
8b8c8b8b8e94989d9f9a432626354d585858587195979797969492939497
9b9fa29e9a959696979698989996938e8c8c8c8f908e8b87868686858383
8383858b92999a98938f8b8b8e9293938f8c888789898886878a8d8a8789
94938d858383828385898c8f9394938f8e8e9293908e8d8d8e9395928d8c
89898c8d8a8686898f948e878282858d959797989c9a958c8584868d969b
9793909192908d8c8e93969694908d8e908d878484868b939b9d95929398
9c9d9c9c9a9b968e8a87878e94989995908d8c8f969b99958e868383858d
99a1a19b8f88888e959996908c8a8d92969a9c9c9b99969291969b9b9895
94979b9a958f8b86858b949a97928d8d8c8c8c8c8c8e94999b9592909294
9390919594918e909595939391908d8f939795908c8c8d8d8a8683868a8e
8f908e8b87878c8e90908e8e8e8f8e8c878485854d4d4d637c889098a299
8f8a2821213a4a4a4a4a4a84888a8e92959377211b1c333c3c3c3c488c93
9697938c88888a8e8c8c5726262b4856585858618b949998938c898e939b
9e9f9f9c958f8d8b8986868a919799968f8b8b8b88878b91928e8e8e9295
96969698989996928f8c89888c908e8e8d8c8b898a8d929596959695928f
8d8b888885848687898b8a88878b8f908e8c8a88858383838487888a8a8a
89898a8a8b8a8b8e92938f8d8b8c8d909394949596969694949595969594
93908f8e8d8a87868787898a898886858384868b8f919192979b968f8b87
868b8e8d8885858787878587888a8b8d8d8b8a8d8f8f8f8e8b888686888f
989fa29e9895989b9d9c969390908f9193918e8e9295948e8b898c8e8d8d
8d92969895908c8a8c8f9293949391908b8886858588898d8f8d89878789
8b8a8a8b8c8e8f91969b9e9c98958f8d8c8a8a8c8c8c8c8b868582828383
83838384858585878686878a8c8c8984868a8e8f4d4d4d637c889098a294
87842e2121314a4a4a4a4a8993969b9da09f942f1b1b2c3c3c3c3c3e8095
9a9b9795949495938f8f7f2f26263a5058585858798a8888898d92928f8c
8c9093938e8887888d91918f8e8e8c8c8a888a91979c9e9f9d9c9d9c9995
918d8c89888b9195989795908f8f8f8f9293918f8e90939493918f8e8d8d
8e8b8586858484868b9397999695959698979087838385888f959695938c
87878c8f9695928f8f939394918f8f9193999e9e9b959090959a9d9c958c
8686878b8d8e8e8e8e8d8d8d8d898888898b8e9295938d8b8a8b8b8d9296
9695939291908f8e90908e8c8988898e94958f898686898b8d8b8c8e9194
999d9fa09d968f8b88888a8c90979c9c97918e8e8f8f8e8b88878b8f8e8e
8f8f8d8c8986868c90939595959493908e8c89878787888b8e9295969594
95969694949392929597958f8984848689898b8d8e8f8c88868686848487
8c919495908885878b9395908b86878889898a8a4d4d4d637c889098a293
848b3521212a494a4a4a4a838787888a8c8d8d3e1b1b233b3c3c3c3c698f
8f8f8d8b8e9194969696974e2626314c585858586787878b8d8d8b868689
8e918f8c898b8b89868789888a8c8c8c8c8c8f919595979a9996918f9296
9694908d8e92989b9b968f8b8b929a9d9e9f9c99958d8b8a8a8d8f908f8f
86898b8c8c8c8b888687858483858a8c8d8e89848282828285878a8f928d
858587878d92918f8c91999c97908e9195969494959596979a9d9f9b958e
8c8e8f909193939493929394918b86858c969b9a9695979c9c948c8a9098
97918a8585878786888a8f94938c88888b8e94928f908e8a87878b8d8b86
838690999a918a87868482838890938e8a868483868b8e929393928e8d88
85868d8e95999a97918b87878c92979b9b9896959695928f8f908f8d8a8e
949797928d8c919698968f8c8a888484848686888d8f9294979a99948c88
8b8f93928f8d8f92969a9996918d8d8f929698924d4d4d637c889098a294
8a8e4121212a494a4a4a4a7a8b87868687898a5f1c1b1e373c3c3c3c588e
8b8b8e8f908d8c8c8f93916d27262943535858585a85939a9e9a9189888c
8f908e8c8a8786868787888a8d91908f908f8c87888b8c90919294949390
8b8888878b8e909494948f8986898f95989b99948c878b9094969797999a
8d8e90908b888686878c8d8e8b8c909495969593908d88868587878a8886
868c8e8e8c8a8a8b8a8a8b8c8f9090918f8d8c8b8b8c9092918f8c8d8f8b
8785848b8f8f8e92969c9b948f8c8c8a8a8d9194939393908b8887898d91
8f89888b8d8e8b8585878e908e8a8a8c8d8c8c8c8c8e8e8d89868282838b
90918f8d8b88878789888a8a8b8c8d8f9294908d8987878a8f94928d8a8b
8d8e8c8b88858385878c8f8d8c8986878888868588878686898c9092959a
9e9c9795949392949594908e8d8f9294969995918e909495949597948f91
979b968c8484868c8f96a0a9aeaa9d989d9e9d934d4d4d597c889098a295
92945521212a494a4a4a4a698c8d8e91969c9a781f1b1b313c3c3c3c437f
848c93948f8b888584868c8c362626384f585858587d9b9d9b96959aa1a6
a8a69e938c8786868b90908d8a8785868d9094999c9c9793908c89888b90
949695928e8c8c8c8c8c88878e93949393938f8b88868d93938f8a898d91
8f8c898783848784828285888b8e918d8989898c8c8a8685878d92928e8c
8d8f8c8a8b8b8b90928e88878c8d8c898b8d8b868a8e9294949291908f8a
868384858884868990979996938f8885898d90959694908d8a8a888b8e8f
919193959594908c87878b8a89898b8c8e91918f908e8a86848383848587
88878786858586868c92999d9d9b9c9b95918f909396969493928e8b888b
8f918d8887898e959695918c8c8c8b8c8e90919293908986878b87858384
85898c8c8e92969a958c868788888886898c8f8e8f8f9191908e8d8f8f8f
8f8e8d8c8b8e8f8f8fafc1d1d6dad38a888886804d4d4d4e7c889098a295
8e8b55212126464a4a4a4a65878b9192908f8d86291b1b293c3c3c3c3c7d
919696928d8b8c8d8e91938f5426262c475658585860918e8c8b8b8d9096
9b9a989694928e8e8d8d8c8d8e908f8e8d8b8f959b9c98969694928f8d8f
8f8d8b8b9094918b86888c8e90908f8c86838283878887858688898b8e92
92938d888482838485858d9192909092918e8b8988888786888a8e939290
909090939696948f8b8c8985838384878b8f92918b868686878686858789
8c8f928f8d8d90908f8e8f929494908c8c8d9394918d8d8d8c8a86848589
8d8f8d8b8a9095928b878d8f9294969798958b88878c9293929090919190
8c88868585898e8e8a86888c9195969595939495969594918b878587888b
888586888c8e919395938e8785848487898988888b8b88888c959b9d9996
918e8e8a898a8d9095948f8b898b8b8a87898d909595938e8a8a88888c8e
8c87868a8c8e8f8f8fafc1d1d6dad5888a8c8c864d4d4d4e7c889098a297
908e632121213f4a4a4a4a668d8f969a979087853d1b1b223b3c3c3c3c6a
96958e8987888e959896918c7529262740515858585878898b8b87878689
87868686888c8f9494928f8e8c8b8d8c8f949b9d9b96918f909293939490
8f8f8d8c8c8b8b8b8b8f8f8d8988898887898f93928b8584899195959494
888989878483868d8f918f8c89878585868786878b8c8b8c8e8e8c919697
94928f909293918f8d8d8e8c89898d918e8685858891948f8c8d9193908c
8b8d8e8b848284858484858586898f9596938d8e8e908d8b8b8b8b8d8c8c
8b8a8987888b8c8784848b8f908d898c8f8f8e8c8e93979b99938d898686
8684848d989c9b9693918c8b8f939797989894918f8b89888786878f9698
959696948e8b8d908f8d8e8f8f8d8d8d8c8a89898686878a9093908d8c90
969692908f8b8a8e8f8f8c86858c9497979492949493918f90928f8a8686
8683888d8d8e8f8f8facc1d1d6dad5898e9598914d4d4d4e7c889098a29e
9690662121213f4a4a4a4a5e94958f8b86858686601b1b1d373c3c3c3c56
908d87848588898686868888893e2626314b5858585869889098978e8582
8282868d949694919395959a9b97928b8c8e8f8d8c88888e959da09c9286
848585868a8f9597908885848d999d988e8e98a3a6a199969796908b8585
938e8d8e8a868685888d9090908e8989888788898d8d888686898e939699
9b9c98948f8f8f8d8b8a8a888d9194938f8986878c929598979697989592
9191928e89858583838586868992969894949799948e8b8e929391908f8e
8e91918d8786888c8d8c8c8f8e8a8786888887848384878e93928d88888e
908d8b8d8f908e939698928e8e8e8d9094938a868484868a8d8f9497968f
8c8d8d8c89878b8c8d8e9395939394918f8e8d8c8b8e949b9e9a908b8a88
898a8d9193908e8f9293928f8d90928c888886898d8d8a89909797928d8f
8c868585878e8f8f8fabc1d0d6dad5858c9191884d4d4d4e7c889098a29d
948c7e2121213f4a4a4a4a4c9a98948e8886898b821c1b1b313c3c3c3c42
92928c8a8d959a96908a87898c6426262946535858585b84868b8f919491
8e8e9092918d8a8a8c9090918e8a87858a9297958f8d8b939a9b97908c87
8686868c94989b98938c8b8e979d9a938c8e9393939191918e8a8685868a
9395948c85868684848a8b878688898b8b86848385858586878887878786
86878986888f9294928e8b89878b8c8c89878c91908b8a8e979a96928e8b
8a888b8d9496948e8e8e8b85888b898887898a8a8a888787888a8e908d85
83828284878a8d929796969896928e88868a8e8e8d8883858a92938e8c89
8c8f9294928f8e8f949695908c8b8d9294908b8788888d9396928e8e8f8d
868384858587898b8e9194928e8d8e8d888586888886888b909498958f87
8584899397948d8c8d8e88888b8d8d8b878b8e9497928d8a888a8b8b8b8e
8e8c8a8c908e8f8f8fabc0ced6dad6929595938b4d4d4d4e7c889098a29b
908f862121213c4a4a4a4a4c888d8e9394938f8d882b1b1b263c3c3c3c3d
7887888e9ba2a4a09c969495988e2e2626374e564f5a688086878c8c8a8a
8d8e8d8b8c8986868787878a8986868d939491929494918e8d8d8b868583
878c8f8c8d8e8e8e8c89868688898786878c949797918d8c8d908f888384
8b85898d8d8d8d8f8b8a8b8e8e91918e8c8682828386909899928d898688
898a8d8d8e8c868a8f9496938e8c8b8d8e8c89878c90928e8b8c90919290
8e8d8e8f8f8d8785868686878b8f8f8b898d91908e8b878a8e9596918d8c
8b878484848384898c8c8d908f8a878990979fa19e948b898c8f8c87898c
8886878b8f908d8d8c8b888584838283878c8b8a8e8f908e8b8a8d90938f
8c8b8a8a8d8f908f8e8b8b8f92928f8c8b8d92949495989b9a97918d9294
8f86868a87878c92928c87898e8c89878a8b8a8c91918f8e8e8d89878b8e
8e8b8886838c8f8f8eabc0ced6dad5858d8e8d89584d4d4e7c889098a2a1
9f9f932921212d4a4a4a4a4c8c9595908b8b8a8a884b1b1b213b3c3c3c3c
618c8c8c8e938e8c91989796918b502629302d332d4c617996928e8d8a88
888b8b8c8e8f8d8a8b8a8b8d92939292908b878a8c8b87898f938e89878a
8e8d8b8e9397979696979998958d87858789878584878d8e8e8d8b8a8c90
85878c90908c878686858a8b8d8f8f8f8f8c8483868b9193939394949390
90919396958f8d949a9a958f8e90969b99958e8985868686888b8d8d8c8e
9191908f8e88868685898e8e8a858586888f918e8a8482848d9a9b948a87
86868486878786868b9697918c8c8c8b89898a8d93979694918e8a868687
8687878c8d8d92989996928c87868a8f92908b888c8f8f8b898784848586
86858e9899938e8d8b87878c8d888585878a8b8e9294979b9e9f9a8f8d8f
8d888b8f8f8e9094948f8784898b8c8a8e8d8987878a9295938d8c8b8b8a
8b8a898b8b8e8f8f8eabc0ced6dad68f8e8b8789624d4d4e7c889098a299
8786862d21212d4a4a4a4a4c8f9796928f9092908d651b1b1b363c3c3c3c
4a8b8c8a898e93979b999594949276322a1f1f2a2d436175898c8e8d8c8e
8f8b8683848587898e9494908d8d92999995949798958c8b8c8e8c898d92
96928d8e939592909494918f8e8d8d8e8c8785868686888787858687898f
8a8b8a8e8d8c8a8a8a8c92928b8b8c8a8a8b8f9393918f8f8f91928e8787
8c919493908e8f94969696989594999b938d8c8a87868686868583848487
8e9294948f8c8c8c8d8f8e918e88888c8f8b8684889093928e8e908f8c87
898a8785858b8e8e8d8f8f8d8c8c8b8d8b8a86858a8f93908b8586888c8c
888685868786858684848585879297958e8d94999c958d8a8c91908e8d8f
91928f8b858383848a8c8d8e8f93918e87868c8c89878a8d8b8887888d94
9695949394969797918c8686888e91908f8f91918c8a9095938f8e8c888a
88848585878d8f8f8eabc0ced6dad68e8e8b898b624d4d4e7c849098a29f
8f8d893a21212d4a4a4a4a4a79928d8a8a8f95959483201b1b2d3c3c3c3c
428085878a929b9d9993908d8a878648201f1f262d3160728d8a8b8e8d8f
91908d8c8d9193918f8f93948d88898d9192908f8e8c8b8f92918f929695
8f8e8e8f8d919797918c888583868484848689898a8b87878b8c8b888484
8b8b8b8f8c88868888878887888c89868584868c929494938f8a8c8e8c86
868b91918d8c8d8d90908e8d8a88888988898b8786898b8d94948e8a8c93
948e8785838283878b8c8c8b888a8787898b89878785858484858b8c8f90
8f8f8d8c8c8d909395908c908d8f949c9b938b8c91908d8d8b87898a8d8c
89888a87858589868b95978e87898c8c888787868985868b9194908c8b8c
8e909598948d8b87888e95948d8b8d928e8d9397928684888a8787878888
8b8b888887898e96958e8887898c8d8e8d8985868e8e8c8f999d978f8d8c
8a8c8c8d8f8e8f8f8eabc0ced6dad695918c8b8b614d4d4e7c839098a29f
9c9c934a21212a494a4a4a4a708c8d918e8b8c90938d331b1b253c3c3c3c
3d738f9396968f8a8b92948e8a8a897c321f1f212c2d6070908f8e8c8c8d
9097989594918d8b8a8683858c8e929699958f908d8783858c8d89848889
888a92908a86868583828383848d9799958f8b87868687878b8c8d8f908b
908e8c8a8786878582828586848485858483858a8c8a898e939491929696
8d888a8c8f918e8b8685868a8a8b92958e86858587949c9f9a958f8c8f93
95999b9a92898585878a89898e918e878484878c908b8688888c93969289
85868c969a958f8d8c8d8d8d888b93938e8684898e94938e8d8b8b91948e
898c908c888787898c8e8c8e949da09b948e8c878784879095928c8e908b
868e9b9a8e8b8d92959798938f8d9498958b868787878b8d8a8687868a8e
8f8c8d8b878784858589888588959b928786888b8c8b8a8d8f8f8d8e8d90
959d9a96948e8f8f8eabc0ced6dad5878a868383604d4d4e7c839098a29c
8a8c8d55212121464a4a4a4a6b8a8f969388858991944f1b1b1f3a3c3c3c
3c5e83858c8c868485888b8d969d9c9473251f1f292d496e878586898b87
85898c8d90928f9092928d898c8f969c9c928d8a8c8d88868e948f87898e
9294928d8e959c958e8a8686898b8c8f9a9d978e898b87878d8c898e9699
848585868b8e8e8a8484888f8f8b878a8c8c8a8c8e908e8b8c939997928c
8787898b8b898887888d928f8c878c918d86888b88888b8b8e8c898b908d
8a8c8e91908d8a8f948f898d908e8a8c8b8c909495938c8b8e8f8c868586
8482828587878b929596918d8a8f979a95918e94948e8b8e8f918e8c9094
908c898d908c8b8b8c8c8b8987888e959694928982838c9597948e90908c
8685868b90928d888585888686868a92908d8e94948c8b8e8d8a8d909090
8f8f8f8b888a8e93948f8c8f8f8b8b898a8d93989a948d8b8a8787878586
87898684838d8f8f8eabc0ced6dad58b8f8e8d8a604d4d4e7c838e97a09c
8b8d8f5b212121434a4a4a4a6b8a8e918f8c8c8c8788681c1b1c343c3c3c
3c5089878584858e95948e8c8c898a8d8a57201f222d446682868b8e8f8d
8b8b93969593908d8c8c8b87888e90919494908b8a88898e94989c9d9690
8d8e8e8d8c8b8886868787878a8b88868c8e8c8d8e92908d8a8787898d8f
8b898a8d8f8f8e8c8a8c8f9295948e868585858483888c8d8f908e878283
888c8a8989888a8d8e8c8c8b88858483878d8a88878685868b8b87878990
94918a848285888d8f908b8b8b8b8b8c8f8f8a898b8b8789929493908a83
84878786898e8f8886868284888b8c8b8787868686898c8b8d91928d9098
9a948e8d8d8a8886878e8d87898c8c8a8c8d8c888c908e8888888f929392
8f87858d919191908c898b8e8f8c8a888b91969999968f8c87878d919090
91969c968d8f949696908e8d8c8c8b87878684858585888c9090908f8c84
82828484858d8f8f8eaac0ced6dad58687898d94624d4d4e7c838d979d9e
938f8e5e212121434a4a4a4a57898d8f908e8b87858578241b1b2d3c3c3c
3c4387989288858b8e8c929a9b928a858380421f1f2c3166868d9091908d
8c8c888684888e8d8c8d8f8b8482858a8c8b88888784868b909393959490
8a8a8c8e8d8c878585888e8c8c909190949590908e8d898a8d8f8e8f8e8a
8c868586878584878a8c908f8885878985848a8d87878c8b8e8d85828484
848788888d8b8484878b888685878b8c8c8f91938f89878583868d8f8c89
8a8b8682828284868a8d8e8d9395908b8f99968f8f8d8886858a8a8b8f93
92928e8c8b90918a8382858c8f8f8d8a888f96948f8984828385888c8c8f
8e898687888686888a88848587898b87888a86868e9991868a91928d8b8f
938e888c8c8a87888b8b8c9195938e8b8c8e8f8f959c9c97938f8e8d8a8a
8b8e8f8f8e8d8e93968c8683868d918e8d8c8f918985888e908d85858583
8584888d8a8e8f8f8faac0ced5dad68d86888e8d604d4d4e7c838d979d9c
87858575212121414a4a4a4a5394938b86838389918e88361b1b243b3c3c
3c3d75888787868b93938c878c939493959988331f262f5a808b8d88878b
92928b8585858485888987878483868b8d949594928f8b8c8e8a83828488
88858284878d8f8f8a8888898a898684878f948f8c87848284888a878c8f
8f8a898e8e8987898a858384898b8886868c8f8e87878f9a9b9086868b8a
848283858783868a8a8a8b8a8785858a8c8d9395908b898583868c939289
888d8a878f94908a888b8e93928a879299948f8b85868a8984828590928d
89898a8b8f918e898583868f918e8c8784848a909189848991918d85878f
8f8a888e908b88848284888d8e8c8d8c888c8c8b93989591919594908c8e
8a8483888c8988888f918d8e96958a84878d8983868a8e8f8e898584848c
93939698948a8586858e8f86838384879195908e90928e8a8a8b878b8c8c
8f93928e8c8e8f8f8faabfced4d9d68b8685888b604d4d4e7c838d979d9a
88878b7b212121354a4a4a4a518d908d8d9096979b99954c1b1b1e383c3c
3c3c5b8b8d8b909392918e8c8b8a888c90918e6b251f2d4f7c828485858b
95938684888e918f8e9195958a858c8f8c8b868890938c898c92908b8f8d
8887868c8d88898683858d8f8e8d8a8a8f94938f8c8482848c9498989490
8d8a858788878c949387868b8b8e94948a83888e8b878d9293989d97908d
89858485858787878c9290898685878683868c8e8e8d8a85878a8f8b8584
8483828b919596928d88848a908f8f8f8f87848386888e8d858787858485
8385868687878687888484868e8f8b8d8c8a898b9090908f8a8889858892
96908c8d8f8c88878b91948e89898d908c878f989495978f88888b8f8d8b
8c8c8c8a8a8b9095928b8a898c90938e8c8987888d9294918c8686878687
9093908c8b858486888f8d8d8e8e8a8d9191948c7d7b6f6e77818384888d
92918784878d8f8f8faabfced4d9d5888583888b604d4d4e7c838d979d99
8c8e887c282121304a4a4a4a51888b88898b8b8a8c8e89651d1b1c313c3c
3c3c50858684848485888c8c8d8d8d8b8b89868552212b4f798589878f9b
978b8688939c9d96938f8d8c87858b939598958f8b8a8583888f8e878888
898a8d8f8e8e8e8b898c888383868e8d8885858b9294938c87898b87888d
948b878c8d8c8b8e908e8d8b8a8783858482828893928d878b8e8f8e8b86
899094898892958c8b91918582878b86848686858b88858b8a858a8c8988
8a898283868d928b8685828488878c929693898487878788888888878483
82878f8c8986868d8c848382868886878e8d878b92918e8b87898a878889
898c908f8b8684858789888d8b8585888784879093928f8e8d8e9091908a
868b8c8e908c8c8e8e929189848588848282868c87858d92909291888487
8c898583878d90919394928c8b8b8b8886878b86493d3737547c8a8b8b93
8f8986898d8e8f8f8fabc0ced4d9d689878d8b8a604d4d4e7c818d979d9b
89898c842a2121304a4a4a4a4f8694938e90938b83828274231b1b2a3c3c
3c3c3e7f8d8b8d919498988e87868787939d938782482f487893908b8986
85898e8c8b908e8683858b8b8c8f8d8a8b8a87878b8e8d898d908d868784
858a8b9095989a9794928b8786888d8d89868b91919094938f8d95968b86
9a9c95909087868d91948e88898987848585878c95918e8d8d8b8b898583
868c928e8c90908e8e8987888b8c908d8f908b8a8e8a86898a858790938c
86878582858b8a85828285878a87888d8e8b888b8882848e9494908d8888
878588918d878f97938b868992928a848785828789858a8d8b8c89868385
8c94948d8684888b86858d9491878282848987848a8c8d8c84868b888a93
9a9c938a88898a8d8d989a8d898d8c858283868e8e898a8d91948d898685
8282868685888a8d88828287909793888382858a48373737507c8a8b8b92
8c8c84858c8e8f8f8fabc0ccd4d9d584858e8f8c624d4d4e7c818d979d9f
8f898a8b3c21212f4a4a4a4a4a7b94918e8d888686838285331b1b233b3c
3c3c3c6a88888b9098968983858f948885898784847d36397989878d9398
988e8a8f8b878a8b8d8c888a999b8b8892968e85858788878c8f8e8a8685
888d8a878b8d8c8e908e8b88868b8f8f8d8d8e898b90918b8685878a8785
8f8c878d8e8c888584878c938e88858484868b8f97958c84898e8f8c8b8c
908b858f959192908a8987858383848b8b878886868e948d8b92938d8987
8f93908b91928989898e9290888486878a8a8b8b8683858c928b888e949b
9b91888a8b8c958f85848c9595928f8f8a8384868c93908885888c898382
8383878c91978e8b939187858b8c8b8c8d96978c888d8d8785858586898b
8b868382858c949796968f85858685868d9495908a898a8582848b8e8886
8984848e928e8c8e8f8987909796938c8b88828145373737547c8a8b8b92
938d858c9c8f8f8f8fabc0ccd4d9d58f8b8d8f89614d4d4e7c818d979d99
85848d8e40212125484a4a4a4a7a8c89858485868986838a571b1b1e383c
3c3c3c5a8889888684898a8684878384888785878a8e81467d908d8f8b87
8d908c8886888c8e8d8c8a868a8d88868b908b8b918e8a8a898789858384
8384898f938e8885858583858b8a8b85838384898c8c8f8f8d8c8a858383
878b8c878a8e8e8d8b888c8c8c878586868c93908f8c878b8e959c9b8e8f
8f8a8d8987888d908a85858a8c8d888c88828c9697968e84878b89868785
83858e958d86878b8f8d86858586858e95948c85848787858585868f948f
8b87878785858582838c8783868b8c93928883838486888f9393948c8c88
858b91938c8b8f94979088888f8a83858a8c87868a848695938f8b86878f
908c92948e888589928c8382898a85889196918786868b8d878583878a89
8f918d8a8a8a8c90928f8a8f98948c888c8b848044373737547c8a8b8b95
93888687888d8f8f8fabc0ccd4d9d38e878b8b8c624d4d4e7c818d979d9a
8b84868648212123454a4a4a4a7288878a8c88888b8f8d8c701c1b1b323c
3c3c3c4286868b93969b948a848686868d928e958f87887f7e858685858a
8d898585898a84858684848e908b8e95928d939288878a908e8886858e94
8f8b8b8c90938d84848988888c898784838b908c8987878b8c898f8d8685
888985858b8f8a85888b87858685858a87858c90928e8885848789878687
878c8d8b8b89898986878e8c878c85878985868d95948d8b8c8c8b868587
8b8c8a8686868688888a8a9092928b868a918c89908e8884858484878a8a
85848684848c8d85828386878e968c8786878785858c8d8a89888a8c8a84
82838586898f908a868790908e8b858386858587888587908c86878c8c86
8991928d8b8c888b918f86838686889196958f8a878a8d8c8e92928c888c
8e92908b8c8f91958f8485888c94938582838c8946373737547c8a8b8b97
8f888c958e8b8f8f8fabc0ccd4d9d38b888f938f604d4d4e7c818d979d9a
8782848851212123454a4a4a4a6b86868a908f8f928c858787211b1b273c
3c3c3c3c848d8b9197918d8c87888c8b878992938f918d87878a8d8e9396
9185848f9991888c8e85828b92959187898b8c8b84828588898885868c90
90928d8c93958c8b908c84838b9992868682878b8d8e8c8986878886858a
8783828284888585898d918a8583878d8c8d9092908888888886868f908d
8f8e8a8888888b8b878c8883878e88888d8c8b8887878c8f878787868686
8583878e9491908f8c8a86858b9492868289908b8c8684868885868a8785
85838383838585828386878a8b8e909291908e898889918e858686868684
838688878484898d88898a8a888787848c918c8a8c8583838382858c8e87
8b968e8684888d929592868382888e8f8d8c8c8c88868c948c87888b8b8b
8c8a8c8a8a8989918e8786868c87878282868a8643373737547c8a8b8b97
908a8b8b868a8f8f8fabc0ccd4d9d5948e8d8986604d4d4e7c818d979d9a
8a8c8d8d5c212123444a4a4a4a5785878b918f878585888486351b1b223b
3c3c3c3c67948d8988878886839194928b85878a8d8a8b87878a898c9596
8d8885848688898787878788888787878788898a8b8787888a8b8d8c8b94
908a85878b8a898787888786848d908e8785888c90938d8c898482848686
85868682838b8d8c8a8b918d8d8c878a868b968e8b8a898f878889939b90
898d87868a86888b86848693938e858a8d868482858885868b898f918a8a
83828283868e8e8488878c94908e8a838283868f958a898e86858d928d8e
90878384868583888e8f88858b8b86899289838888858989888b878a8c8c
888c9495918c858686878784848a8e8b888a8b8f898382828285848a8e91
8d8589908a8f90878590928a878692948c8e8c898c8f95958f8b898d8e8d
8a8b8e94958c8d94948a8a8e8f8d90908e938f8545373737527b858b8b97
8f86858d8a8a8f8f8fabc0ccd4d9d7928e8e8d89604d4d4e7c818d979d9a
8e8f93956f2121213a4a4a4a4a598b8d8d8484898783858a8c571b1b1b36
3c3c3c3c5787858886838383899b8c868f918a8f8c84838585858c8b8b8d
88868c8a85949584848b8d8e8582868c8b858283858d8e868e8f8884848c
8c8d88848f908a8b8485868c888a8c879590848587888f8d8d8d8b8b8583
8f8b868c8a8e9086868f87858a86848685878c8b8986898c8a8e8c898c8c
8a8887848282888e919193928b87868688888a8d8b8b858c8e8a8c868a88
84898c9590868a8b8888898b858786838688848891938988928987878485
87888b87888a8f9186828684838282878e888a8a898d878886888a888587
858a8485898784878b8a8c8b8c86888a8588908e8686838684828a89868f
87868f8a878d8c8f8885888f88858c858285878c908b8883858587868687
8e96958d868a8e8b8886858e8e8d958f88858a87483737374f7b848b8b97
918d8585858a8f8f8fabc0ccd4d9d88b898c908d604d4d4e7c818d979d9a
8987898c6e212121344a4a4a4a57869395858383828488918a731c1b1b2e
3c3c3c3c448186888a8882828a8b8a8c8b8a85858a8f92928f8783868a88
8784898a8a8689888385888b8687898e969093988f8d88868a8685868f8f
8e85838688858484888888878585888e8e8a85828791918b8c8889868386
9386858d8c8c8b878a8783888c858483848a8e8683858b8786888f90908d
84868d8f8685848890958b8685858d8d8c8984848f918f8b82878e8c8886
858c93948989918b8c8f8e86848f8e8a8a86888c898582858b8984828792
8f8b868383888f8b878e8f908b8c8884888e8b8b8a8f93908b898c858786
85878a8886898e8d89888f8986868684868d9087848a878e908485898483
858e938f87898d9094928a8b8b8784858482838588898883868587858787
86868789918884828486868a8c8d968f858a9c96483737374f7b848b8b97
8f8c8b8785898f8f8fa9c0ccd4d9d88f84848d8d604d4d4d70818d979d99
8a8b8f9783272121344a4a4a4a578c93958b8c85868d8e888787261b1b26
3c3c3c3c3e7086878788898884858f8d848284858b948e8f8e8883898a89
84848b8f8d898b8f888b8b8782898a8486898e8c858686888a858584888a
85878a8a8f8d868485888a8789928f8d898886858b8a868c938c8584858d
8f8488878987838486888d8d8d868b8884858689908d84838993938d8b87
898b8a928c8c8a8683868d8688898f8e8b89868584848685838485898985
848689918d8d93938885888b848d928e858287888586858c8f858282878a
8e928d8884828788858d8f8c888b8a84878f8d93918f9593878789868a85
86858783898d8986899092948f888889848a8e87868a8586858884878984
848d918684868588898a8c8c8e89848b868589888d8b8583878b85878a84
858582869289878b858685868b959b8e878b928d483737374f7b848b8b97
8d858285888a8f8f8f9cc0ccd4d9d89686868787604d4d4d68818d979a9a
8d928e8e7c292121344a4a4a4a4e7f8585888d8c8b9286828488411b1b1f
3b3c3c3c3e67918d898584898d938d8a86858b8f8d8684868684838e918b
87878c908f928e928b878f8c88918c8583868f8a868686949287858b8988
8d898987858591918c8c88868a9491888d89858989878c8d888a8c8f8b8b
8787888787898683888a8a8787848a87858b908d898c88878689898c8887
878684878b8e8a898483858d90928e87878c9089898786898585838a8687
8b858c8c8987868c85888e8e858388878686848485848d908984868c908d
8f878a8c8e878584888e8d8786898a87868b918786878890868a8c908e8d
8d83838a8a8b91968b848486878b8785868a8b899192918d878687888887
868f868285909288898e919288848d88858b8d88878e91908c8c8d8f8a83
908d8b958e8686858a8a8783868c8782858d8d87463737374f7b848b8b97
95898386898a8f8f8f9cc0ccd4d9d8908b8c8687604d4d4d68818d97999a
85878888843521212a494a4a4a4a7b85858d8b908c9094918d95591b1b1c
363d3a423d628e868b868e8b8c8985888d8e938d84878385848383868e8e
8d969b968c8686888d85868c888c878485878a8d8c8782878c898e8a8788
868482868a868c8d88858987848a96998e8c8e8e85848589908d8a88868b
8590938684858d898c8b868784889085898e938c83868b8b8a8588868282
868a848a8d8788888287898c8a8a8c8e91898a89888b939291858489878a
928d878a87868487898e8d8c87898784848482828289939493888c8b8383
86898e8884848a868489898c9186858c97938f8784888586878b8c918585
8d8683878685848a918c8d8d868792938e8d858b9290958f85848d8e8487
8a918b8d88878c868d8e8683828a8e8d958f9097929196988e8c878d8a89
95928d7b666e6d6f76817f828487878282848780453737374f7c848b8b97
8c848d8e8c8c8f8f8f9cc0ccd4d9d88d8a8c8789614d4d4d68818d97999a
8a8f8b898637212126464a4a4a4a7685868588898687958f908c75242726
26272e2d31638b8b8a898a918e8a8783828789858585848c8e8686888c87
8a9192888385848a888584868f8b878b8c868a908b8a868584868b968a85
848282858683888e8b878c87868f8e93948c938e8e8f939d978982838f9b
91898b848a8785888a8383879489848d8c86898f86908c848b84838a8c87
858687868d8c86878489918e8887878a88878c88848a89868784838a8483
86868c8588948c8f8b868b888b898b8a8584888f86838d9a8a8c8d87888c
8886828284848987848a8f918a8786868788888b898b8784858483858484
848a8584858c868d8e8685828283838383868f938d858c88898f8d878c92
8582858d8a8f8c8987848583898784888c8e8a8a8e898c8e929287848383
8b8a83613737373746697f888b8a82858483888a453737374f7c848b8b97
8c878f8e8e8a8f8f8f9cc0ccd4d9d88c8c878287624d4d4d68818d97999a
888b898d8f45212126464a4a4a4a758b88848584879699918788843c1f1f
1f222d2d316b8e8f8c98958b998e8c83828c9088858885858c948c8c9591
8785878c8a8d868b8f8e8784828686848584858c8689939085868b858784
8a8482858a928d8d948b8b898e968e8d8f868486898b94938b8c84828a8d
8383858887848788858287878788898d95928f87888d8b85878782868f8e
8787848b8986838984898d8d8a878384888b938e87878688868382868785
838383888487888a8c9299908c888c87868c8b8685858a89918b8885908c
8c8882868e8c8786868b8d8f9089868688868c8b8b8b86858b8789878a90
8e9188858a8b8a8b8683868b8782838a8883858b86848485888e8d888487
86848385868b8d8b858384858b868b95918d8c888e88868a918e8c888587
868889563737373746697f888b8b8f8b8d8a8685473737374f7c848b8b95
8c878784868d8f8f8f9cbfccd4d9d88f898c8489644d4d4d68818d93999a
8b8686898b45212125464a4a4a4a668e8989938c878988848686876d241f
1f202b2d317587868c898d888b8b8b85858689898a87848585888c878b89
8b8785888a968f8a90948888858c8d8d858788858b948c8c86888c8f8b8a
8d8884868b88848583828484858b918e8583878a888d8e8c858b948d8e8c
83878586858a8d868386878a83888a89888b898c8b848586898b8c868484
8788878a8588888c918f918b8583898b8d8c8f8883848387888e8c898a86
8d898586849294878b8f958882878c8f868b8b8785868b85848382848996
8d8c888687938c8b8e878c878a8784868a898686878d84858586858a878f
908d878787868c88868d8b908e838386888788878984868584888a8b8682
868d878c8989898988878488898a8f8a89858586879090898a88898c8c86
84878b603737373746697f888b8a8686898a8585473737374f7c848b8b90
8f878c87868a8f8f8f9bbbccd4d9d8938c888d8f634d4d4d68818d92999a
8b908d8a845c2121233c4a4a4a4a5e858585898d888c8d84838d8684481f
1f1f2a2d317284828d898e8d868f8d8a8a8e8584858485888b888a888b8c
89848283868a888685828585868e908b8b88868e92948682868d8986868d
868983838687878682838b8587888b868c8a86868a888485858b998c8989
82868887858d8688858486868b86888c8c8d888c8e87868788888e8a8986
8b948c89868b878b8b8f868383828585888d8a85828487848c948a878989
8883878d868687869187868a8b8b8b898b83868b868d8d848590888e858a
848285868b8b8c8d92868385898c878a8d8c8c8b898585858a8484878589
8985878788879286878c9390888286868a8f8987858a8a8482878f878483
8d87858c86858d8f88868b8a8e878c8e88898d878b88878c8a87878c8985
848d95653737373746697f888b8a828885878587483737374f7c858b8b90
8b868b87868a8f8f8f9bbbccd4d9d8928b918e88604d4d4d68818d92999a
888d8e878c63212121394a4a4a4a5e848b8983858b948a82898c868b7626
1f1f252d2e618485888985838b8b858483848483848a888e8f838585898c
888683858684898a8d898b8a8685878b898c918a928b8389898d8b868989
85858683858987858384868e8e958f858786868d8d86898785878a8d8889
83888a8583878a8b85848887898c85878b88878b87848e8a8a878a8b8785
8b918b888e88878484898385888688888c888985878c90888c86878c8485
8a84868c8c8c8a8c938c878a8b8b86838c86898d8e858282868b908a8386
858687898b868686868886858682858b8c8a85868c8c8d8d8d8784898c8e
8888878b8c8b8b868786878589898b8787918a8f858984848588878b8789
85868b858683888b898883878687858a8d878c8988848a8784848784858b
8e888b643737373746697f888b8a82868586878e483737374f7c858b8b90
958f848b878a8f8f8f9bbbccd4d8d88e88888a87654d4d4d68808d92999b
8c8a8a8e8b65222121394a4a4a4a5c898887868d878e8e8b8c88878a864f
1f1f232d2d5f868b86888c858b908c8a878e868a88848c8c8b8588918c8e
898c8d85898d8784868589878d87918987858a87888a8689908c8f878c8b
888a83868c8c8d858689899187908b878a868386948d8b8f888b90898789
898885888889888689868c888a858483888f9387888c938f858584908b86
82888e89858b8786858d88888886858687838a8b8585868a848687878a8d
878689918a868585858684868c8b8786908d8d8983828c898a8585828384
8587878888858d88878c8c8382878b8b8489968789858587898a8a89858a
8e8d90878e8c848584848887858588898a8c838687858584858a8c8c8786
89888a868887898d898b8787838487868c8685848584888587878e87848b
8c868b613737373746697f888b8a818485928b86483737374f7c858b8b8e
8e85868483898f8f8f9bbbc7d4d7d88f86878488624d4d4d687e8a92999d
8887898d8e74242121384a4a4a4a598c8a8b868784858f8c8d8d898b8f81
2b1f1f2c2d60868484878d8786868a8d8886848b8b84888b85878b8a8d92
8c8c8b848485858d8a8a87908c8e8e878b8a8b8a888b8685868c8c8c8a8c
868685898b898584878f87878885898b898889898c8684868286898d8d86
8c86848b858884868c8586878a888684868492898484898b8b8684858685
878d87848486848786868985888787858786898488868d87868888898a8d
8b8b85888884878b878b8a8d9086898689888c8787868985838586858689
888a9086858788868d8b89878587888a868d88868b86878c8985878c8587
8a8d8a878a8d86828585868a86888c908e8684868b8a85888589878e8b84
8e8c8684868a8f8b88858582848b8c8a888786898a88888a84888588878c
8988885a3737373746697f888b8a8283858d8b81453737374f7c858b8b8b
8b898786878a8f8f8f9bbbc7d4d7d88f8b888385644d4d4d687e8a92999c
868c8685867a2821212d494a4a4a4a7f8b8a878982848b85868e87888b84
5c201f2a2d61878a8384868686848b8a87868c888585898b8c8b8a878888
868689878a8e908a85888a8c85858f8f898c8785868a87888a8785898d89
85858c8b8d87898b948b868a8a84868a8785888c8885878b8584858a8987
8d858587888985878b8c888887848786878486888285858d888688848686
8f8b87868587868682848c87878c8784858586848988898b858d898c8987
8a878986868a888e8d86828c8786878d8a8c8886868a8785848d888c8c87
8c8b878885878b8685888a8d868a8c85898e8c87908c888b858a8c88898e
8d87888788928888858a8587868a8f86868a858284898a8b848688868d8c
8a83878985878b868c8787848c8b8b8a84838b8a8d89848d8a8685888a92
8a8a8a807e9da6abb0b49f888b8a8283878d8a87483737374f7c858b8b8b
8c888a8487898f8f8f9bbbc7d4d7d88d8c888489624d4d4d687e8a92999c
8988898885832d212129484a4a4a4a7d8685858c848a878890858d898682
7f391f252d608484828a8d848484858685858c8782838b888987838d8687
8789868c85898c8c8787858787858a8d8b8c8a868a8a8c86878588868b89
8e8886938d8986878b88838786888a8583878e888b888b8b868784878683
858b86858489878c85888a898c868b868489858585848b8a8a8d8b868688
8887868587848386878285858589878c8d898a868584858787898e8e898c
8d88858b868d8a868d898487888488888685898d8e888883858b89878489
8b88848383898c8c8e888887848d888b8e8a878585878687888b8b85878c
8c898d88898985858d888b8d8d888c8585888787888c8387888885868c86
9086888d858484868b86868686899588848a8c8789858b8e908a878a8f8b
8a8a8a8a9abdc2c7cacfb9888b8a848686858c85453737374579858b8b8b
9087858786898f8f8f9bbbc7d4d7d88e888b8987644d4d4d687e8a929898
8a8c848582822d212129484a4a4a4a7b8686868a8785898587878b848585
856d22222d608b868588868685848488858588898887878b868583848b8a
848b84888787868987868386868484858688868a8a8c86878d888e8a8685
8d888686878d888b89868485868e8a898b8c88878b858687888985878a8a
898a8784868784888c868785858685868a858c868a8a868387868b868983
868c89888e8584878d85838686878c878787858285878887868a8c868987
848888878885868a868d8a898a868488898489898786888b898b8a848585
89848a878a888b88868a8a87878a868487878688868b88848689848a8b87
838c9388868683858b8c85868b8a8d878b858689878d8e89848587878587
86878b8c898a8b898483868686868686888b8d868c858a898c8e87868c8b
8a8a8a8a9abdc2c7cacfb9888b8b878986838880453737374078858b8b8b
86878b86878a8f8f8f9bbac7d4d7d8908789898a644d4d4d687e8a929895
898c878585873a212128474a4a4a4a788d8e898d8d8a86868489858b8b89
8884442a306c8987858a848585898b8b8b8d85888685858a87888587878b
87858385878585888b8e83868585888b858689858987888c8c8c88838786
858d8a89878987858c8e8b87878b888b84858487918687878c8c888a8c83
89848785868685828588868684848987868a8b8a88848687858a8b848485
868787888888878783868687898987848a898484868886878d8e8b888b88
8784888c87868587868c858d8a85878a8a86878c85878a84878e8c848484
89878a8588868987878a87828687878b868b8b85898684878584898c8d8c
848888858c85828486858587898c8d8b8d87868687888e898685898b8586
84848886868b89868684878585878a888687858683838486898c8a848c8b
8a8a8a8a9abdc2c7cbcfb9888b8b868486878585453737374078858b8b8b
958f888789898f8f8f9bb6c7d4d7d8948a86848b634d4d4d687c89929895
86878c8d85873c212123414a4a4a4a62898987858d898386898b8786878d
888c7c28276e8f8d8788888b868786858c8c878a8689888a8789888a8388
8b8a86858583898d8c8b8589878384878985868b8988898c8d8789848783
87888a8a87878486868d8b878d878a86868982898785868486858483888c
87858c85868886858987898887868686848a8d868b878587858785898687
8a85868a868a868485868b8d8685868a8885838386888a868587868b8888
858584878785868886878789848b8a848887898787888884898c8b878986
858486858587878486848784878588848586898885878886858487898c8d
888785888d878a888586868c87888d8a858685868e8b87888885858d8886
8685878c888c88868b8c84858c8e89898c86858587868686888a8586938b
8a8a8a8a9abdc2c7cbcfb9888b8b86858685858b473737374078858b8b8b
928a8b88848a8f8f8f9cb6c7d4d7d8958b878b87604d4d4d687c89929896
88868b8d8b8a542121223e4a4a4a4a648b88878587868684898a8784858e
868e865b2371898889898b89848788878887868986848988848a878a8784
8a8c878686868889868b8a89848485868986859086868a898c8a88838385
8c8c8d8b868685838587888687848989858986878586858c858589878b86
8585848587868886888587878283848484878b8a88858885848686898684
86848785858788848587878c8884868586888d87878e8888848386878588
8a87868687898489858a8a8887898c8b85858a8b86848986868986858586
898a8686858c878786888b8b8e8b8d868488878483848585888c8b858588
87868687868a8b8485858a888b848989848386878d87848b8d8885858984
86878889898a85888e8c87868a8d86858a89838788878987868e85888f8b
8a8a8a8a9abdc2c7cacfb9888b8b878a858a8581453737374078848b8b8b
8d8686868a8a8f8f8f9cb6c7d4d7d8928a878984624d4d4d687c89929894
86868586878b5a2121213d4a4a4a4a628a8b8c87878686878e8b87898584
888784824d8186848787868b898b8a8e858b868784848685848585868587
8a8c8a8c858a89868a868c878486858587878585858488888b8689848589
8984868886878487868586858583848a868584868584878a868784878787
62675d5f5f5e6562656669625f5e556e6c665860615e6363686b74666357
5b615f5e67636c706b675f5e5e655c6064646c7269685f5a596160676e65
615f69645f645e5e6a606b616d655f595e5b6464766867625f5e60616862
6f656a65626566685e616b6f6e6e645f616463615b62655f645a5b5f5e5c
6261686471665a6461606368605e6876725f5b666163656977726364605f
6065665f606462616662616068636260615d5f5f6865636fafb4b3b4b4b3
bdcbccd3d8decac7cecfb9888b8b6d63605f625d3d3737374074858b8b8b
70616161677b8f8f8f9cb6c7d2d7d8796761615e524d4d4d687c898f9893
6e6867555b65432121213c4a4a4a4a585f6160606562556a5d6160616764
625e5e5d5e616366626162656969656159566162565a60625c5f64666160
696c6461605f6062636969656465645b6369665f64696762646966646167
5f5f60605d5f60615f555e606c6762605b616265665b66695c5e5f636467
4c474b4f525052525452504c494a4a4b494d4d4e4447484640474b494a4d
4d434248463c46494949373f40434243455155535a5042454245454f514f
4b4d5450494e494953504a4b4d4849494243434040413e43434243504f4a
4042453e494f4f4a514a45514d4841484e5144413e4c4d4d4d444b414253
4e494a47494c484b46414341393b444f4e4f514c4c514a474350543f3a3b
3946474443464342453e4647494444494c4f4a4046494e57c2cbcbcbcbcb
dbe7e8e8e8e8cdc7cdcfb9888b8b6a5249515043383737374070858b8b8b
53414349536f8f8f8f9cb5c7d2d7d86a3d4849524e4d4d4d687c898d9893
543d3c47393d3521212131494a4a4a463e3d3f4a5254514f524c4a484546
4b43454b40414c4a524644454b464649443a463f4b4849413e4142494c52
494745443e3a3f463d4b524e5649434651535851414b554a424945424c4a
504d41423a4642484b494b424d4e4b514b4a4b47474239494d4745445046
53504d4c4c4e525555524d45474a4a413f3f3e4345484949484849534f44
474746474545474747504e4d4d4e4d5653574f52534f464d554f4c515055
4d54544f4549474b4d4d4c484948494b4d4d4e544d4748514d5252565150
4c4c4f504b443f3e40414856514d4d4f54554f4a47474c4f4d4d4b494c4d
49464543454b504d4e4a4f4e47484c4841515353574346464f4e4b4c4b48
3f3c454a5846454645454c4d48565c604f4544424d5d606cc2cbcbcbcbcb
dbe7e8e8e8e8cdc7cacfb9888b8b6f5751514845393737374070858b8b8b
574b4d4d4b6d8f8f8f9cb6c7d2d7d976494b494d4c4d4d4d687c898d9895
5e564741444f492221212d494a4a4a48434654595b5e5957575c5e5d4847
4742444b413f423f4849474f5457554846454b4b55545d4f453c423f4759
5a5a686957474549474b51514e4e4e4d51555a4d4d525350505153433f42
4a4d4b4c4a484c4b4d403d3e3f42453e3b3e41403f46494b47494b4f594f
5b626267646358535a564d4a4a46434147514c4d4a4e50484845474b4e59
646765645b5957494d565e555051524f4945454c4a4a515258524b47515a
5048414848423f4a4b4c4d474444434447474d535359514e4f504e4e4c48
494951525246413c3d4b4d4f4b4d5051504f515152525352514945464a4c
57544d515a5b5651464343474a46484441474247474749504a55575a5864
5f595f6062565761615c5e575858545b59504f4f52545464c2cbcbcbcbcb
dbe7e8e8e8e8cdc7cacfb9888b8b705e52544b49393737374070858b8b8b
6659555a58738f8f8f9cb5c7d2d6d97c5956514c4c4d4d4d687c898d9896
5f514b484745482221212c494a4a4a4a545154565f575153595058545049
48424a46434c50545458565756585256565156585957585a544f4e4c4a51
514f575d5d5c5b57574f4f49464b555258575b5a4f53575959595a4f4c4e
4b434147474a50514e494f4e46464847424447484b4e47454d544d51524b
6170706d70675f585f6865534c585b5d524645504b4c4047454444444849
4b515151595c5e63646971666c807d7f7e7d7d7e7e7e8080817f7165655a
5b564d4f4b4e4e4e505c634e4e525f6262625e5e625e5d695f6869696654
54504d49413e3f4c5255555652575754545d585a55535b5b5c5c51443d3d
4451525156585d5a53494b4e4e4e4e4c484e584c454d5c52525453535258
4e4f5050505765594d4d4c4b4d5859595a5a595b58555578d0d5d5d5d5d5
dee6e7e7e8e8d5c7cacfb9888b8b6c545854514b3b3737374070858b8b8b
68504f4c4a6b8f8f8f9cb5c7d2d4d871454c4a44494d4d4d687c898d9896
5c4a4d4e4e4e502221212c494a4a4a4a46484544474444545852575d7379
715250595a5c666a65615d5b5b524e4e5353595c5c5c5a574e4d524e4e4e
4e5358595e5b64594e57545f635b554b484c504e43494e515c5d605f5f61
5c514e404242414e4948494c4f4e4a4744484949464846444a5d5d555352
5e5f5f5e5d4f4f4f484746474d4b575f5f5f5f5f5f5f5e63615e594e514e
515b565b5c57574e566362564b4e4b635a61606260605c56585e60646365
676467646b6f6b6b69605b4c53564f585e5f60686464645e606368696a66
635c535e5352534f546162685b524b4a4c4d535a595d5c57585b57575656
595e6a6a5d67717375736e6c645e574f4c4c4c4c4e4e585d5e605a5c656a
645b65686a75777b7a6f6f6267686c6f7273716e6765607a838383838383
94adc4d7e8e8dfc7cacfb9888b8b76626b5f5f603f3737374070858b8b8b
67626b6e63778f8f8f9ab5c7d2d6d97c5c544f494b4d4d4d537c898d9897
7770767d7b72772e212125444a4a4a4a5665656563656a74767474737679
806762616569625c5b5a595857544e524c535454545658575b5f656b6b6d
7b776b655b6f6f6a6a6868686360605d555353555454545854545656635b
60605f5752575c5f647479777c796960646a666264696564635c55585255
656a77726d6d6d5f5c5c5a6a85788e91959b9b9b999a90807f726b645e56
555556554a444747474a494846494d474655615e5a5c5a55555960616161
6161616865615e605d5b5b535355565b5c64666e6f6b65625b686e7c7a69
5d5b5055544d4e4e545d5f635e595e5c5d63605d57495254545251596b72
7d7f666e6d7573635d5b5a5752534c5a5c5d5d57585e5b5b656666676b6e
675458696a58555f6a636a7479717070878d8d8a8e8f8f85838383838383
94adc4d7e8e8dfc7cacfb9888b8b6e55555555523d3737374070858b8b8b
5d51504d4d728f8f8f8eb5c7d2d4d989676a6867564d4d4d537c898d9896
6a5e5e5c5858582f212123414a4a4a4a516d72726562696a6a695b575a56
5455535053535752504f51515152514d4d4d50525561736f6b69696a6a6b
6c68686868675e63655f6164615e56595f5e5c55535150534e4f52525252
52504e535763615e595c5b627b7b816b5e53585954524544474e54515757
514d514e4c514c4042444444464b515157606466686a6d71747a7c7c7c7c
7a73736c66607d7d7d7d74625f656b6a6a69615854565551515357585454
545758575552464743454b4a40434d534e585f59555652584a494a505051
565e606568686868686265656565676c6b6c696a6262646567676d73736d
6d6c6b6a63635d5c5c5657605e5f595f615e5e60615f5e5d5d5a5b5c5e5f
63605f5c59585b5d666866666e7d78777474767277777780838383838383
94adc4d7e8e8dfc7cacfb9888b8b7560605f625d3e3737374070858b8b8b
65595e60617a8f8f8f8eb5c7d2d4d987706b6565564d4d4d537c898d9896
7061646565656536212121414a4a4a4a505d62676b5f6464646467717171
7479736464625e5e5e5d5e5e5f5f5f5f5f5f636263666a69686565655e5f
5c6463636669686565656b797a797777695b5d4f4f5455514a4c55555657
5758657171686565696c6f777f7e808077736a6a665c5a65686a726f6574
4343444a4e4e4d4d4d4c48484848484848484a49494d4f51595959595959
504f524f4f4f555757575758535a5d5d5d5d5d5f61657070707070756969
6867625d5d5b5a55564f4f4c48474b4f4a4c4947494c505b59595f65625c
5b5b5f5f5757575757505151514f5150525455534e4d50524e4e5052575a
616462605f646261626d72716f6f6c6d716f706b7e7e7e7f7f7e7e7e7e7a
696c6d74747b78737b848a8787969d9b9999999999989889838383838383
94adc4d7e8e8dfc7cacfb9888b8b6b5755626563413737374070858b8b8b
7766636252748f8f8f8eb5c7d2d5d98159595d5e5f4d4d4d537c898d9897
827d777b7d6b6f49212121414a4a4a4a4e65656667656565656c6d767878
7878777575756d6c7373757575757575757575757575716f7070706d5f5f
5c5f5c5a5b5e65727d7d7b6e7f84836d6c6b6e6d6f7476717c7c7e6e6667
6767696c6c6867676b6b6b6a6a6d7171727d79736b666c7b6e6c6c6c6569
535353575d5d5d64665d5d565454545454585e605a585d5a534f54595959
5050504b4b4c4d4d4d4d4d4d4d4d4b464e4d4c4c4e4c4f4d4f4f5452514f
52524c4d4f4a4a494b4d4d4d4d575c5d5f6a676b6b6e767e80808080736d
6c6161645e5758535252535757564e52524f51514d4c4c4d505051575c60
63666769697b727e727b84777b7777707175786b6a667272707373737379
7b7b7c7c7c7972716e5f5f5d5b5b5b5b5b5e6c6c72706f7d838383838383
94aec5d7e8e8dfc7cacfb9888b8b837a7b80817f443737374070858b8b8b
796c6b6766758f8f8f8eb5c7d2d4d98d66686460584d4d4d537c898d9898
87878e8890868059212121394a4a4a4a5763636363646a6a6b777f7f7b7a
7474706e6e6e6e6e6e6e6e6e6d6d6d6d7577777c7f7f7f808a8a8a8a8989
898989898989826f716d6d6d6d6d6d6d6b6566676869698081817b6f6e6e
6d6d6d6d6d6d7d8784776a5d59554e5759545252515255575a5e5655565f
70707270707070707070706b5f606060606060606060606060606060686e
6e6e74757776767675767474747477747879747373737479797e8081857c
6d696967686464636363636260655d5e5e6474797b84837f7c746a696964
6770736e6c7079797877736f7270717278807f72747a7e7b7c6e6e6e6e6e
817d838c878783838682817f7e7f7b797778706c6c707b7b7f8383858580
7b7978736e6d6d6c65626262646f6d6e6f736f6f766e6a7e838383838383
94b0c7d7e8e8dfc7cacfb9888b8b8b7a86828681443737374070858b8b8b
8483838384868f8f8f8eb5c7d2d4d9a286868583774d4d4d537c898d9896
8785898e938f8a67212121304a4a4a4a4c6767696c6b6d71728382817e7b
787b78787878787a7b7b7a7774726f6f6a6666686f6b6f6a666666666666
6a6f71706e6d6d68666665646768686e69696e7c85a0a2a2a5a3a5a3a7a6
a1a1a5a9a48781807f8281808484807d8c8a8083737271706e6e70758383
7a80848282827a7e7f77737171716f696969696969676969696665697171
717175767e7e7e7e7c7d7d858988838383838a8a8a8b8b8c8f827f7f7f7c
7575757570736f7678797d8283837c776f6862645e56534f4f5057585e68
6c738a949495a9aeaeaea5857d9e928a87827e7a7a8184837e7f8a888786
86868a8e888988888b8b8b8e9ca6a8b5b9b7b7b5b5bbcacabdbdbdbdbcb0
9891817c7c76716f615e5d5d5c5c55555a605d5e6167767d838383838383
94adc4d7e8e8dfc7cacfb9888b8b8a7f7f7f7f76413737374070858b8b8b
77757575756e8f8f8f8eb5c7d2d4d99d7f7f8283774d4d4d537c898d9897
8d8a8a8b94938e752121212e4a4a4a4a4f8d868383828d817f7f817f7f7f
808586868686868a8a8c8c8c8c8c8c8c8c92929293878585858282828282
82828385868688807c7b777271716e6f6f6f72757575757982898a878a8a
8f8f9a98917872766b6d696f7980807f7b7d8082828e9698969585797778
78757989898b89878a85848484847e7e7e7e7e7b7a797a7a7a797b7b7e7c
7b7b7e7e7e7e7e7e7e7e7f80828382827d7d7b7878787777757279747f75
73707276756e6c6e6f757b7a78787267656b6e6a6a757f888e8f909ba6bb
bfafb6b9abb8c4bbbec2b3b0b0aeadada7a0a0a0a0a0a1a1a2a2918f8fa3
b1aca8a6a1a39e939ea3a28d9496989790909089898989897d817f7c7b77
777674717170706c656565615a585254555b626f6f6f707b838383838383
94adc4d7e8e8dfc7cacfb9888b8b8785868783844e3737373f6f858b8b8b
8588888887808f8f8f8eb5c7d2d4d99775757c7a744d4d4d537c898d9897
87838080838383782121212e4a4a4a4a4d747b7b7f787b77777780838383
83868484818084807e83838383838584838787878a8e8d8b8b8988888786
84807b7a7a7c827c817d7c7c79777977777777777777777781817f7f7f7f
82868881848b8a828181807b807d807f7d7d7b7b7a7a7a7b7e7e7e807f7c
5257585a5a5a67717780868b8486898987849f8688898686868683756d6d
6d6d6d6d5e56555656545454585a5a5a55545350525252504d4d56555659
5d5d696b6c6d70727172747475787b7c7e838989898b898683837e7c7475
75696968666666646460606058575a605c5c6e696965666f767474747474
848686867f7d848383838484787373737378838483838383838483838383
848383848586888885858c94948d857c72726c6a6665657b838383838383
94adc4d7e8e8dfc7cacfb9888b8b858897a1a79f5e3737373e6f858b8b8b
899893918e808f8f8f8eb5c7d2d4d9a78c8c8c91804d4d4d537c898d9897
8e8b87888c8e8e8a282121284a4a4a4a4e8b93939392918f8c8c8d8d8d86
848084868082828383808180808080808080808081818281828382828281
818180808080808483838383828282828282828282828282828282828282
8683828a828588828282838281808080807f807f7f8383817d7d7e848483
575757575756565656565757576263686765676667635c5c5d5e60605f5e
605a59595959595861656f7070706f6f6e7070685c5c5c5c5c5c676f7270
72727274747474746f6f6f7169616673747c7c7c7c7c7c7c7c7773737373
7575777b7b888795989994999b959da19e9b998a8b8b8b8580807f7f7f7e
7e7f8081808185868689888b8c8c919292949a9c98989898999b98989897
9c9492918d8d8a85848487898c8c8f8d909393939297978b838383838383
94adc4d7e8e8dfc7c8cfb9888b8b8b85848484844d3737373d6e858b8b8b
7d8484848b828f8f8f8eb5c7d2d4d9ae9c9c9a9b8b4d4d4d537c898d9898
a9aaa9ababacaca530212124454a4a4a4a88acaaaca5a5a5a6a7a6a2a0a0
9e9a999896958c8b8a8a8987858881808080808081818d8a8c8d8d8d8d8d
8d8d8d8d8d8d8c8d8d8d8d8c8b8b8a8c8b8e8f8f8e8f959591919293959a
9895979997999795949397929693999b9a9b9b9a9995959899989a979393
6061647678787f7f7f7f7d78787878838f8b8e9aa2abb3ae959aa8a9a7a2
a3a2a1a1a1a1a1a1a1a2a3a3a3a3a1a2a09e9e97939393989e9fa3a4a49c
9e9e9ca6a29e9d9d9d9d9d999698969c9d9d9d9d9d9d9d9d9d9d9d9d9c9c
9d989391938f8e8f8a8a8c8f8e8e888885858587888d8b8d8d8f92969699
a7a8a7aba9aec0c1c1c1c1c4bfbebabcbcbcbcbcbcbcc0c1c6c2c2c2c2c7
c7c6c5c4c1c0c0bdadaba5a5a5a2a1a19c9c9a999595958a838383838383
94adc4d7e8e8dfc7cacfb9888b8b908d8d8d8c8c523737373d6e858b8b8b
8088878789828f8f8f8eb5c7d2d4d9a88b8e8b8b7d4d4d4d537c898d9896
94a0a0a4a4a9afac36212122454a4a4a4ca0b8b8b8a89aaeb6b6b6b7b8ba
bebfc2beb7b29f9b9b9e9d9c9daab8bbb9b9bab8b8b7b4adb5b7aeadadac
a5a5a19f9f9b94929292928e8b8f928f8f8f919091949494969a9a9a9a9a
9d9b9e9e9ea1a2a2a7abafacafafafafafaea8a2a2a29f9d9b9595959490
9aa4adaaafb3bbbbbbbbb4b4b4b4b1a8acb0aabbc9cdc5aba29f9f9d9e9e
9c9f9e9898989899a9b7bcaaa2a2a7aaa8a8a8a1a1a19e9a9797968d8c8b
8a8b8a8f8f8e8d8d8d8d8d8d8a8c8a8c8d8d8d8d8d888382818181817f7f
838482828b8c8e8f8e94939495999d9d9a9c9c9c9a9b9c9d9d9da1a5a5a6
acaeaeaeaeacacacaeafafaea8a8a7a7a7a5a4a6a7a7a9a9afb5b8b8b8b8
b8b8b8b6b4b1a9a9a5a5a4a2a2a09c9b9b9b9a9a9d9b9d8d838383838383
94adc4d7e8e8dfc7c7cfb9888b8baec6cbbab1b1653737373d6e858b8b8b
828e8d8d8d828f8f8f8eb5c7d2d4d9ab959d9e9e884d4d4d537c898d9896
97a5a5a5a6a8a8b149212122434a4a4a4b98c7c8c8c8c4bfbebbbbbcbec0
bebebebebebebcb8babebebebebebfc3cccfd0d3cdd5d0c3c5bdb5b3b2ab
a9a9a5a2a2a5a3a19f9f9f9f9e9da2a09f9f9f9d9c96959595908f8d8d8d
8d8d8d8d8d8f93939393939393939393939393918f8f8e8d8d8d8d8d8d8d
a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a8afafafafafaea3a1a29fa09e9e
9d9e9e9e9e9e9e9e9e9a9b97959595918f8f888786807f7f7f7f7e7e7e7d
7c7f807f7f8480868686888d8d8d8d8d8d8d88868c8383817c7c7c7c828a
8c8d8d8d8d9393939393939393928f8e8787878c8d87868686868787898f
8f8f8f8f8f8f91939595959595959595918f8f8f8f8f8f94959595959595
95979a9a9a9a9a9a9a9a9a9ea2a2a2a2a5a4a5a5a9acac90838383838383
94adc4d7e8e8dfc7c8cfb9888b8ba5b8b2b3b6b4663737373d6e858b8b8b
859b9b9b9a8c8f8f8f8eb5c7d2d4d9ae989999937e4d4d4d537c898d9896
8e8f8f919795989a4a2121213c4a4a4a4a77acaeaeaeaeacababababaeaf
aca9aaa4a2a1a0a0a0a0a0a0a0a0a0a0a09fa0a29d9996948f8f8f8f8f8f
8f8f8f8d8d8e8e8e908f8f8f929399949494929294919090919392929292
92929293979b98979698989698989898939393938d928e8f8f8d918d9192
acacaeadadadadadadadb0b0b0b0b0b0b0b6babebebfbebdbbbbb6acacaa
a5a5a59f989898989392938e8e8e8e8e8f8f8e91939494949494969a9998
999999989da3a3a4a8aaa9aeaeaeaeaeaaa2a2a19e9d9e9c9b9998959595
95958e8b8f8f8e888b898f8f8c8f8c919496969696969797959595959595
959594908f8f8f8f8e8e8e8e8e8d8d8d8d8d8d8d8d8d8d94958d95979898
989c9da2a4a7acadafaeabb5b6b6baaca9a9bec9cac0baada58a83838383
94adc4d7e8e8dfc7cacfb9888b8b9ba3a2a2a4a9653737373d6e858b8b8b
afe0e8e8e8bf8f8f8f8eb5c7d2d4d9c4b7b2aead924d4d4d537c878d9896
a3b4b4b6bbc1c1c06f212121354a4a4a4a70cacac7c6c6c6c2c2c0c0c0c0
c0c0c0c0c0bec1c7c1bdbdbdbdbbbbbbbab9b6b7bbb9b2b0b6b4a9a9aaa8
a6a3a0a0a0a0a0a0a0a1a1a1a4a4a5a4a4a6aaacacacacacacaaa6a4a1a2
a3a3a3a3a3a3a3a1a09d9b9e9b9a9999989796938e8d8d8d8d8e8f8d8d92
a2aec8c8c9c9c9c9c9c9caccccc5bfbcbab8b8bdbcb6b5ada7a6a7a2a3a3
a3a2a3a2a1a2a4a39fa1a4a4a6adb0b2b8bcc1bcb9b6a49c9b938892877c
7c73716c6a6e706c6f707a909294979ea5a5a4a4a5a5a6a19f9c9c9b9493
9794959393939392918f90969596979797a2a5adb5c1c8cecacbd7d7c5c1
c1c0b4afaeaeaeada8a8a7a4a2a1a09f9a959594918f8d8d8d8d8e909698
989fa0a0a1a2a6a6a7a98b6f6f6f6f6f6f6f76999d9da2adad9083838383
94adc4d7e8e8dfc7cacfb9888b8ba3b1b1b1b6b6683737373d6e848b8b8b
aac3c3c3c3a58f8f8f8eb5c7d1d4d9b9afb0b2b2964d4d4d537c838d9896
a6bcbcbcbec3cecf7a212121334a4a4a4a70dde0e0e1e1e2e4e4e4e7e7e7
e6e5e5e5e0dbd5cecbc6beb0b7a19b928e8c8c8b968b8b939899999d9d9d
a5a4a0a0a7a4a6acbcc3c3c5cac9c4c3c6c6c9cccacccdd0d0c9cccdc9cc
d8d8d8d7d5d2d5d1cbc9c7c3bfbcb9b9b9b4b1b1a9a7a7a2a1a1a1a09e9d
a8a7a5a4a4a3a39f9c9c9998989593939393939393929090909090909698
9b9ca0a3a5a7b0b6b7c4c8c4cfcbc8b7a8aa9d8a807b75746f6759575556
55565a5757576261596364666667686869686b6b68676563636969676363
6968636363626462615e5d5c595d6064717c7f8797a5b0c7d9e2e4dfcbc5
c2c2bcb6b4b3b0b0b0afadaba9a4a09e9e9e9a989797928f8f8e93949492
94979796989a9c9c9ea1886f6f6f6f6f6f6f76999d9da2adad9083838383
94adc4d7e8e8dfc7cacfb9888b8bb2d2d2d2d1d16e3737373d6e7f8b8b8b
aac1c0c4c4aa8f8f8f8eb4c4cfd4d9c3b9b9b8ba984d4d4d537c838d9896
a4b6b6b6b6b6b6b68b212121314a4a4a4a63bec2c3c2c2c3c6c6c7c7cacb
cac7c4c2c1c6c8c8cac9c6c9d4d3d4d4d4d2c9c7c7c5c7cdcdcdcdc8c4c3
c3c4c0babababec2c3c6c6c9ccc9c8c8cececbcac5c2c0c4c5c8d1d4d6db
e0e0e0e0e2e8e7e6e1e2e2e0dad8d5d0d0cfc9c0bbbbbab6b1b2b1b1afa9
b3b3b3a7a5a4a2a09895929191919191919193929193959595959a9b9b9b
a1a8a9abb2b6bbc1c7dfddd6d2d2d0cdcbc8c0ac97928474716659575155
545961626969696969696c6e6e6f7070706f6d6d64626262635d59606263
666a6b7076858e90989daaadb3c5c2c6cbc9c7d2cfd1ccc9c8c0b9b6b2ad
a7a4a4a1a09b989897969594949495959697979a989899999897989a9a9a
9a9b9d9f9fa1a6a7a7a8906f6f6f6f6f6f6f76999d9da2adad9083838383
94adc4d7e8e8dfc7c7cfb9888b8b82739096a5ab5f3737373d6e7f8b8b8b
b1d3d2d1d0b18f8f8f8eb4c1cfd4d5cfc9c6c2c3a04d4d4d537c848d9896
9dababaaabacacac8721212128484a4a4a57a8b0b0b0afaeafadb0b0b0b0
b0b0b1b3b6b9b8b8bab9b8b8b9bbbcbbbdc3c4c8cacbced3d4d4d9dadbdd
dddcdedfe1e2e2e2e2e3e6ebe8e6e6e5e5e5e5e5e6e7e9e9e9e9e9e2dad5
cdcbc7c5c1beb8b3b0b1b9bdbfc6caced2d4d0cfdce1e1e0dddddddcd8d0
b2aeaaaaaaa6a5a5a4a4a4a4a4acadadadaeafaeaeb8bfc0c6c5c5cbcfc6
cacccdd3d3d3d3d3d3d0d6c9bdb7b5ab9f8f8b867b77747474746f686868
6a6d7077797d7a7b818686868e8f8f9799999ba2a0a0a09fa3a9aebbbec7
ccd0d2d5dad8d8d8d9d9d4cac8c4c0c0c0bfbebebebeb5b6b5b5b3aeaea7
a2a1a19f9e9b9b979696969496969494949496979a9b9c9f9f9f9fa09f9f
a0a5a6a5a5a5a9aeaeae936f6f6f6f6f6f6f76999d9da2adad9083838383
94adc4d7e8e8dfc7c7cfb9888b8b8e8a826160593e3737373d6e7f8b8b8b
a3bebebbb99f8f8f8f8eb4c1cfd4d6b9b0b0b0b0924d4d4d537c838d9896
969fa2a2a3a3a5a5922a212127454949495ca8afafaca7a5a6a5a6a6a4a6
a6a6a5a3a5a5a7a6a8a8a8aaabaaabababababacacacacacacacb0b3b3b3
b6b9bcbebebec1c3c5cacfd3d2d2d2d2d4d7d8dadad8d6d6d7dadbdedfdd
e0e0dfdee0dedddddddddddddddededbdbdbdbdbdad8d7d8d9d9d9d8d8d4
d6d7ddd8cdcaccdde1e1e1e0e0e0e0e1e1eaeae9e5dededad3ccc6beb4b2
aea8a3a0a0a0a1a1a19e9a979b9893979ea5abadaeb6bac1c4c6d4d6dcde
d8d5d4cbcbcbced0c5c3c3c3c3c1bfbfbebbb3b0b0a9a9a9a9a9a9a9a8a8
a8a9a8a8a9a6a5a5a5a5a5a39d9fa0a09f9da0a3a3a39fa5a0a0a09e9c9c
9b9b9b9b9b9b9b9a989898989898989696989796969698999999999b786e
7174665453535a6b6b73776f6f6f6f6f6f6f76999d9da5adad9083838383
94adc4d7e8e8dfc7c7cfb9888b8bb6dadadadacd6a3737373d6e7f8b8b8b
6e5c5b7075798f8f8f8fb4c1cfd4d7c9c2c2c2c19f4d4d4d537c828d9897
a5b1aeaeacacacaca1392222262d2a322d48a9afafafafaaaaa6a6a5a5a5
a5a5a5a5a5a5a5a5a5a5a6a5a5a5a5a5a5a5a5a6a6a6a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a6a9a9a9aaaeaeaeb0b3b4b7b9ba
c2c3c3c4c8c9cbcccac8c8c8c8c8c9c9c9c9c9cbccc9c9c9c9c7c4c0bdbb
e5e5e5e6e7e8e4e5e8e8e8e5e3e3e3e3e3e3e3e3e2dfdcdadad9d8d8d8d8
d8d8d8d8d8d8dbdcdfdcdcdddfe0e3e3ddd7d4d0d0d0cdc1bdbdbdbdbbb3
b2aca7a6a6a6a3a3a19b9c9c9c9c9c9c9b9a9a9a9a9da0a0a0a0a1a2a3a3
a3a3a3a3a3a3a3a3a3a3a6acacabafafafafafafafafacabaaa5a5a3a1a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a2a2a4a4aaa8a3a4a9adafafafafb2b5b8
b3b2b1a4a2a09391907b746f6f6f6f6f6f6f76999d9da4adad9083838383
94adc4d7e8e8dfc7c7cfb9888b8ba9bfbfbfbfbf663737373d6e7f8b8b8b
9ba8959481738f8f8f8fb4c1cfd4d4a29fa6b7bba14d4d4d5279828d9898
bdd4d2d1cecbcac9c86c1f1f1f1f242d2d62bfbdbdbdbcbabab7b3b1b1b1
b1b1b1b1b1b1b1b1b1b2b8b7b7b7b7b7b7b7b7b9bab8b6b6b2b1b1afaead
a7a7a7a7a7a6a5a5a5a5a5a5a5a5a5a5a6a7a7a6a7a7a7a7a7a7a7a7a7a7
a7a7a8aaaaaaa8abacaeadacafb0b3b4b4b4b4b4b4b4b4b4b4b3b0b0b0b0
d3d1d1d1cdcac6c3c3c3c3c0bebebebebbb9b9b9b7b7b4b3b0afafb3b4b3
b3b5b7b7b7b5b3b3b6b7b7b7b7b4b3b2afaba9a6a3a3a29f9a9898989796
9595969696999b9b9c9da2a4a4a9acaeaeaeb1b6b7b9bac0c5c5c6cbced1
d0d2d6d4d2d7d4d4d4d4d6dadbd9dfe0dedbdad8d8d5d0c9c9c8c7c4c1c1
c1c1c1c1c1c1c1c1c6c7c7c7c6c8c8c8c7c9cacbccd1d3d4d4d6d8d9dcdd
dddcdedbdad8d8d8d6d5ac6f6f6f6f6f6f6f76999d9da2adad9083838383
94adc4d7e8e8dfc7c7cfb9848b8ba3bdc0c3c4c46a3737373d6e7f8b8b8b
b0d2d5d8dabd8f8f8f8fb4c1ced4d4a17d615f57564d4d4d4d6d828d9698
d2ebecefe8e2e2e2e5bd2b1f1f1f242d2d91e4e3e2e2e2e0dfe0dededede
dddddededededddadadadadad9d9d9d8d8d6d5d4d2cccdc9c7c5c5c3bebd
b8b8b7b0afaeaaa5a5a5a5a5a5a5a8adb2b4b3b4b8b9bcbcbdc2c2c5c5c5
c5c5c7c7c7c7c1bebec0bfbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b9bbb8
a6a4a2a0a2a4a5a6a6aaa8aaaaaaaaaaaaaaa9a5a19f9f9f9c9a9a9c9a97
97989c9d9c999797979796959697969494949494949494949598999a9a9a
9b9d9fa3a6a7a7aab0b0b1b3bcbcbcbdbfcdd3d4d7dededfe0e1dfdbd9d3
d0cccac7c4c4c3c3c0bcb8babbbbbec0c1c2c7c8d0d4d5d7d8d9dcdddfdf
dfe3e4e4e4e4e8e8e8e8e8e8e8e7e7e6e5e6e7e6e7e8e8e8e9e9e9e8e7e7
e7e7eae9e8e8e6e5e2e0b46f6f6f6f6f6f6f76999d9da2adad9083838383
94adc4d7e8e8dfc7c7cfb9838b8b6e66696a8a8d563737373d6e7f8b8b8b
acc9cacdd1ad8f8f8f8fb4c1ced4d4d0dad0d0c79e4d4d4d4d6d828d9398
846f7696a0a7b5c9e6e6511f1f1f242d30b1e7e7e7e7e7e7e7e7e6e7e7e7
e7e7e8e8e8e7e8ededeae6e3e2e1e0dfdedddcdbdbdad9d5d3cfcfccc9c5
c0bfbbbab5b4b0a9a9a5a5a5a6adaeb5bbbbbbbbc2c4c6cdcfd4d6dadadb
dcdddfdfdfe0dfdfdfdfdfdcdcdddedddddddededfe4e4e4e4e4e4e4e4e4
98989898989898989898999c9a9898969696959391909293939394949494
94949494949697979797999c9c9d9d9d9ea1a1a2a3a8a8a8aaabaeaeb5bc
bcc0c4c9d4d8d9dbdbe1e5e5e4dfdfddd8cfcecac7c3bab5b0abababa8a7
a6a6a6a6a9a9a7a5a7a8a5a5a5aaaeb0b3b6b9bdbfbfc3c7c9c9c9cacaca
c8c9c9c8c7c6c7c4c4c2c4c4bdc3c5c5c5c5c9ccced1d3d4d6dad1d2d5d5
d6d6d6d7d7d7d6d6d8dacb9f6f6f6f6f6f6f76999d9da2adad9083838383
94adc4d7e8e8dfc7c7cfb9838b8b9f9892917e7e4a3737373d6e7f8b8b8b
83787a898c838f8f8f8fb4c1ced4d4cac5c6c8c9a74d4d4d4d6d828d9598
a4a996897765625c5e5b441f1f1f242d32b4dfe6e7e7e7e7e7e6e7e3e6e7
e7e7e6e6e6e7e7e7e8eaeef1e8e3e2e1e0dfdfdedddcdbdad9d9d8d7d4d2
d1cbc5c5c3bebbbbbbb5b5b5b3b0b0b0b0b4b5b5b5b5b5bfbfc3c6c8cece
d0d5d7d9dbdcdddfe0e0e0e0e0e0e0e1e2e2e3e3e5ece9eaebebececebe9
9c9c9c9c9c9897969595959594939394949494949797979797979c9c9c9c
9c9c9d9d9d9da0a1a3a9aaaaacb0b2b4b6b6bbc1c1c3c3c6cdd0d0d2d5d9
dbe6e8eaeae7e6e7e7e7e6e6e2dfdcd7d6d5d5d4d4d5dbdddddddededad9
d3cdcbc8c7c4c3c1c0c0c1c2c5c7c9cccfd2dadddddddddddbd7d4d1cbca
c7c2bdb7aea699928881818079797978787a818387929ba3abb47f828484
858a8a8a8a92a0a0a5adada56f6f6f6f6f6f76999d9da2adad9083838383
8eadc4d7e8e8dec6c7cfb9838b8ba0b1bbbebdc1683737373d6c7f8b8b8b
9093917872728f8f8f8fb4c1ced4d4aa8699adad994d4d4d4d6d828d9398
c1dbdbdbdbdcd9cfd0b8af2d1f1f242d327776889fadc6d8e7e6e7e7e8e8
e8e8e7e7e7e8e9e8e7e2e1e0dfdddcdbdbd9d7d4d3d3cecbcbcac8c8c7c3
c3c3c3c0bebebcbbbbbbbbbbbbbbbbbbbbb9b6b6b4b5b2b1b1b1b1b3b4b3
b3b3b3b4b7bbbcc1c2c2c6c7c9c9c9cbcbcbcdd2d4d5d7d9dbdddee0e2e6
99989494949494949596989999999c9e9e9e9e9ea4a5a5a4a0a2a5a5a5a5
a5a5a6a6a8abadaeb1b2b5b7b9bec2c4cbcdd1d1d2d6d6d6d8dadbdbdada
dcdcdddee0e0e0e2e4e5e7e8e9e7e7e7e9e9e8e8e8e8e8e8e7e6e6e6e6e6
e5e3e1dcdbdad9d9d9d9d9dadbdbd9d4d0d0d0cecbcac6c7c5c2bebcb9b2
aca8a6a19f9890908d8c8c8c8c8c8c8c8c8e979aa2a8b1b7c1c88a757575
7575757575829d9da0adada56f6f706f6f6f76999d9da2adad9083838383
8badc4d7e8e8ddc5c7cfb9838b8b735d6c6d6b774f3737373d697f8b8b8b
b2d5d6dcddbf8f8f8f8fb4c1ced4d4b38b8b7c787a504d4d4d6d828d9398
a6abbcc6c9dae5e5e5e5e56e1f1f242d4fe3e1dbdacfc2cce0d9dfdfdfdf
dfe0e0e1e1e1e1e1e1e0e0dfdddcdbdad7d5d4d1cfcac8c8c8c3c2c2c2c2
bec0c2bdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb8b8bbb9b8b8b8b8b5b4
b4b0afafafafafafafafafb0b3babbbbbbbbbdc4c5c6c8c9ced2d4d7d9db
959798999a9c9f9fa0a1a1a1a1a2a2a2a7a8a8a8a9a9a9a9a8a8a9a9a9ab
afafafb0b2b4b6b6b7b8c2c6c6c6c6c9ced0d0d0d0d0d4d0d1d0d1d0cbcb
cbcbcbcdd0d0d0d2d2d7d7d7d9dbdcdee1e1e1e2e3e2e2e2e4e7e7e7e7e9
ecebe6e6e6e6e6e5e5e5e3e2dfdbd5cfcbcac9c4c2bfbcbcbab9b4b6b5af
aeaeaba7a4a5a2a2a2a2a2a2a2a4a5a5a5a6a7abaeafb0b1b3b784757575
7575757575829d9da0adada56f6f6f6f6f6f76999d9da2adad9083838383
8badc4d7e8e8ddc5c7cfb9838b8bb9d2cfc8c9c7653737373d6c7f8b8b8b
7a64657b83848f8f8f8fb4c1ced4d4d4cfd4d3d3c55a4d4d4d6d828d9398
967f836b6b756a69788080741f1f242d53dee2e9eaebeceaeaeae9e9e9e5
e3e3e2e1e0e0dfdfdfdfdededddddddcdcdbdadad9d8d6d6d4d1d1d0cdca
cac9c9c7c4c1bfbfbfbdbbbbbbbbbbbbbbb7b1b1b5bbb7b0afb1afafafb2
b3b2afafb2b3b3b3b3b3b3b5b8babbbbbbbbc2c5c5cad0d1d1d2d3d6d8d8
9e9fa0a1a1a1a0a1a1a1a1a1a1a19f9f9f9f9d9f9f9c9c9c9d9f9f9fa1a1
a1a2a9aeaeb1b2b2b3b6b7b9bec1c6c6c6c8c7c7c6c6c7c6c7c6c7c7c6c6
c7c8c8c8c8cac9cacdd5d5d8dadcdededfdfdfe0e0e0e1e1e2e5e9e9eaea
e8e7e6e3dedbd4d2ccc7bcb9b6b0aeadaeadaaaaaaa5a4a5a8a8a7a9afb9
bcbdbdbfbfbfc0c2c1c1bfbfbdbcb7aaa6a39a948d85857c7c7c78757575
7575757575829d9da0adada56f6f6f6f6f6f73989d9da2adad9083838383
8badc4d7e8e8ddc5c7cfb9838b8b8f9d9ea1a3ac613737373d647f8b8b8b
adb4b6b59b8b8f8f8f8fb4c1ced4d4924e61646470544d4d4d6d828d9398
c2c6c6c1c2c2bcbab4938b88361f242d528b718590b3abb7cce6e6e7edec
e9e9e7e6e5e4e3e2e1e0e0dfdfdedddddcdddddddcdcdbdbdbdbdbdadada
d7d7d6d5d5d3d1cfcccbcac9c8c0c0c0c0bcbabababbbabababababababb
bbbbbababbbbbbbbbec0c0c0c0c0c0c0c2c4c5c5c5c5c6c6c6c6c6c9cbcb
9c9e9c9b9b9b9b9998989898989898999999999a99989898989898989a9b
9c9e9e9fa1a7a8a8aaacacb0b0b1b2b0b0b0b1b2b2b2b2b1b3b3b3b2b3b3
b4b3b4b9bcbfbfc0c6c7cdceced3d5d6d7d9dbdbdddfdfe0e0e3e8e9e7e6
e6e6e3d6cec8c3bfb7b0a8a7a39b9b9fa09ca1a6a7a7a7acb0b2b6bdbfc3
c4c6c7c8c8c8c8c8c6c5c2bfbdb4ada49c918d817f7f7e7e7e7f78757575
7575757575829d9da0adada56f6f6f6f6f6f73989d9da2adad9083838383
8badc4d7e8e8ddc5c7cfb9848b8b653f3a3a393b373737373c637f8b8b8b
7c6d72747c778f8f8f8fb4c1ced4d4aa97998079733b414343545f676b6c
594a4547616364717d7e889d5e1f212c87c0ccd1d5d7dbdddfe2e3e3e4e9
eaebebebebecebeaebeeecebe7e6e7e6e3e3e2e1e1e0e0e0e0e0e0e0e0e0
e0e0e0e0e0dededddddddcd9d9d7d7d6d4d0cecccccac2c2c1bdbcbcbbbb
bbbbbbbbbbbbbbbbbbbfbfbfbfbfbfbfbfbfbfbfbfbfbfc3c4c4c4c0bfbf
999a9a9b9c9c9c9d9d9d9d9d9d9d9d9fa0a19f9c9c9c9e9e9e9e9d9e9b9a
9a9b9d9e9c9c9c9e9f9f9f9f9f9f9f9f9f9f9f9f9f9fa0a1a1a2a2a1a3a7
a9acafafafb2b3b8bbbcbebec4c6c8c9cacdd1d5d9dcdddedfe0e1e2e9e9
e8e8e8e6e2e1dfdedbd7d7d6d2d1d2cfccc7c7c7c5c3c2c0bfc0bdbab8b7
b7b7b7b7b7b9b9bab8b8b7b8b9b6b4b2b0b1b1b0adaeafb1b1ad7f757575
7575757575829d9da0adada56f6f6f6f6f6f73989d9ea2adad9083838383
8aaac4d7e8e8ddc5c7cfb9888b8b847d777877744a37373737617f8b8b8b
6e4d4a4a4d5d8f8f8f8fb4c1ced4d49a6767636a6e371f1f1f1f1f232d33
6f7a6e68686757545a47434843211f303c47515c6277779197acb0c0ced5
dbe2e6e6e6e6e6e6e6e6e6e6e8e9edeef2ebe9e8e7e6e6e6e5e4e3e3e2e1
e1e1e0e0e0e0e0e0e0dfdfdfdededcdcdcdbdad9d6d4d2d0cecbc8c7c3c2
c2c2c0bdbdbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
9f9f9f9fa0a0a1a1a2a5a6abacaaa7a6a7acababababacacacacacacacab
acacacacaba7a6a3a3a3a3a3a3a3a1a0a0a09fa09f9fa1a3a3a2a1a2a4a5
a6a8aeafafb2b5bbbbbbbdbec5c8c9cbcdd2d5d7dadddddfdfe0e1e2e3e6
e6e6e8eff0ede6e6e6e6e6e6e6e6e6e5e4d5d0cec8c4c0bbb3abb3a49d9b
98989898989a9a9a9aa5ada2ada8acadadb3b3b3b6b5b5b6b6b381757575
7575757575829d9da1adada56f6f6f6f6f6f73989d9ea2adad9083838383
89a8c4d7e8e8ddc5c7cfb9888b8b6544434346483e37373737617f8b8b8b
807776787d768f8f8f8fb2c1ced4d497584f4c4e4e341f1f1f1f1f252d32
4a6367666768686873797d847d42232e7d7f838c959d979698abaebeceda
e1e6e6e6e6e6e6e6e7e9eeedebecf0eeece9e9e8e8e7e6e6e5e3e2e1e0df
dfdedededddcdcdbdbdbdbdad8d8d8d8d8d8d8d8d6d4d3d1d0cfccc7c5c5
c5c5c5c5c5c0bbbbbbbbbbbbbbbbbbbbbbbbbcbbbbbbbbbbbbbbbbbbbbbb
9f9f9fa0a2a2a7acaeaeafafafb1b3b4b5b7b8b8b7b7b4b2afafafafafaf
ababababa8a4a4a3a3a3a1a2a0a09f9fa0a1a1a19fa1a5a4a3a9a8abb0b3
b3b4b8bcbec1c1c6cccdcfd1d4d7d8dbdcdcdddfdfe0e1e4e8e7e8e9ebeb
eaeae9e7e7e7e6e6e6e6e6e6e6e3e1d9d4cecbc7c6c4c1bdbaa879787a79
76767676767676767676787a95999491919292908f898888888678757575
7575757575829d9da1abada56f6f6f6f6f6f73989d9ea2adad9083838383
89a8c4d7e8e8ddc5c7cfb9888b8b8f8e8888736e4937373737617f8b8b8b
653a3a3b41588f8f8f8faec1ced4d4a07f7d7c7c7c69241f1f1f1f252d45
5b5f5f504a4a4a473c4040424845243d7a82909ba4acb6bec6cacdd2dde4
e6e6e5e5e5e6e6e6eef2f5f0eae9e8e8e7e7e7e7e6e6e5e4e3e2e1e0e0df
dedcdcdbdadadadad6d5d5d4d4d3d1d1d0d0d0d0cbcbc7c6c6c6c5c5c5c5
c5c2bcbcbcbbbbbbbdbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
9fa0a1a2a6aaafafaeaeafafafb0b2b2afaeaeaaaaaeaea9a9a8a6a2a2a2
a2a29f9f9fa1a1a1a1a2a2a1a0a3a3a3a5a6a6a8aaabafafb2b5b9bbbbbe
c5c8cacacdd4d5d9dcdddfdfdfdfdfe0e0e1e2e2e5eaebe8e6e6e6e5e5e6
e6e6e6e6e6e6e6e6e6e6e5e3dcd0cfcdc9c7c6c5c4c2c0c0bba1514d4d4d
4d4d4d4d4d68757575757575919d9c9c9c9e9f9fa4a4a5a6aba980757575
7575757575829d9d9fa9ada56f6f6f6f6f6f73989d9da2adad9083838383
89a8c4d7e8e8ddc5c7cfb9888b8ba3b4afa3a09d5c37373737617f8b8b8b
8575797372708f8f8f8faec1ced4d48e44403b3c403e251f1f1f1f262d4d
616a726f707681818083817f7f7d4059817f8185828a8c898b8fa2aab2ba
c2c6d0d4d6d9dddee1e4e5e8e9edf1f1edecedf2efe9e8e6e5e4e3e2e0e0
dfdfdddbdadad8d7d4d4d4d3d1d0cfcfcccacacacac7c5c5c4c4c4c4c4bd
c1c2bdbbbcbcbbbbbbbbbbbbc0c0c0c0c0c0c0c0c0bec0c0c0bdbbbbbbbb
a3a4a4a3a4a4a8a6a1a2a8a8a8a3a1a0a09fa1a1a1a1a1a09f9f9fa0a1a2
a0a0a1a3a3a1a1a3a4a5a6a6a6a6a6abacafafb1b1b2b6babbbbbcbdbfc5
c6cacacacdd2d4d6d7dadcdddedee0e2e3d8ccd2d6d9dbdad7d2d3e2e5e6
e5e6e6e6e5e5e6e5e3ddd6d2cbc7c3bebbb7b5b3acaba5a6a6914f4c4c4c
4c4c4c4c4c677575757575759bbfbfc0c1c2c2c2c3c4c7cacacd8b757575
7575757575829d9d9fa9ada56f6f6f6f6f6f73989d9da2adad9083838383
89a8c4d7e8e8ddc5c7cfb9888b8b95adabaaa9b16137373737617f8b8b8b
929291908f808f8f8f8faec1ced4d4a57a7d7c7d7f7a4e201f1f1f2c325d
4b4d4d4d4340434344565c636978667d888386888892908d8d8d8f969696
9a9ba4a6a6aab3b6b9bbc0c5cacfd5d9dbe4e6e6e7e9edefeae9e7e5e3e1
dfdfdddbdad9d4d3d1d0cfc9c9c6c5c5c5c5c5c0bebebebebbbbbbbbbbbb
bbbbbbc0c4c3c1bfbdbdc0c5c5c4c3c1bec1c3c3c5c5c5c4c4c5c4bfbbbb
a19f9f9d9d9d9e9f9f9f9f9f9f9f9f9e9e9fa1a1a6a6a6a6a7a7a6a8acad
afafafafafafafafb0b0b2b2b3b8b8bababbbdbfbfbfc0c4c4c5c8c9c9c9
cacacbcdcdced4d5d5d6dadcbc89848585735f686a6b6b6b6a68698089c1
e5e5e5e5e5e5e0d7d2cec9c6c3c0bab5b1aba5a1a1a0a0a4a6924f4c4c4c
4c4c4c4c4c677575757575759cc5c5c5c3c1c1c2c2c2c3c6c6c78a757575
7575757575829d9d9ea9ada56f6f6f6f6f6f73989d9da1adad9083838383
89a8c4d7e8e8ddc5c7cfb9888b8b7f7676745b6847373737375c7e8b8b8b
81719597908b8f8f8f8faec1ced4d4b098999791919173231f1f1f2c4880
808080807c7b81878c8c8d8e91959497a3a9acadadadadadadadadadadad
a8a4a4a4a5adafb1b4b8bcc2c7cad1d6dbe4e6e6e6e8ecefebe9e8e6e5e3
e1e0dfdddbdad9d7d3d1d1cecdc8c8c5c5c5c5c2c2bdbdbdbdbdbdbfc2c2
c2c2c4c4bebdc0c3c5c5c5c5c5c2c2c2c2bdbfc2c5c5c5c4c2c0c0c3c2c2
9e9b9c9e9c9c9ea1a1a1a3a8a8a8a8a9afb2b2b2b3b3b8bbbdbdbebebebf
c3c3c5c6c9c9cacacacbcbcbcbcbcbcdcdcecfd0ced1d3d3d3d2cfcecece
cecfd3d5d6d6d7d7d7d8dbbf5055575757575757575d62626262626262a7
e5e5e5e6e6e1d6d5d3d1cfcccacac9c6c6c6c6c5c8c9cdced0b0504c4c4c
4c4c4c4c52697575757575759bc0bebeb8b7b6b4b0aeadadadab7f757575
7575757575829d9d9ea9ada56f6f6f6f6f6f73989d9da1adad9083838383
89a8c4d7e8e8ddc5c7cfb9888b8b848cacab9a9a61373737375f7f8b8b8b
9e9b858686818f8f8f8faec1ced4d49e64635b6a77776f271f1f1f2c729a
94949494949598989898a0a6a6a3909facb2b2b2b3b5b5b5b5b2b4b5b5b5
b5b5b5b5b8bbc0c2c7caced2d6dee4e5e6e6e6e6f1eeedeae9e7e6e5e5e3
e2e1e0e0dfdddcdbdad8d6d6d5d3d1cfcfcececdc9c9c9c9c9c9c9c9c9c9
c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c5c5c5c5c5c5c5c5
a2a2a2a6a9a9abb2b4b4b4b5b9c0c1c1c1c9ccceced1d1d3d7d8d9dcdcdc
dcdcdcdcdddddddddddddddddddddddddcdcdcdddddcdbdbdbdcdcdcdcdd
dddddddddedfe0e0e1e7e8af4c4c4c4c4c4c4c4c4c5662626262626262a8
e6e6e6e5e5e6e5e5e5e4e4e4e4e4e4e4e4e4e4e4e5e5e6e6e6bd504c4c4c
4c4c4c4c53637575757575759abbb9b9b7aea2a09f9b999998967b757575
7575757575829d9d9ea9ada56f6f6f6f6f6f73989d9da0adad9083838383
89a8c4d7e8e8dfc7c7cfb9888b8b8984848686814937373737617f8b8b8b
816f6f6f6f918e8f8f8faec1ced4d5d2b1adabab9e8882797a8d8c8dc2c8
c5c2c2c0c0c0c0c0c0c0c1c1c3c2c4c5c5c5c5c5c7c8c9cbcbcacbcbcdcc
cccccbcbd1d2d5d8dbdce1e4e5e6e6e6e5e5e6e6edeff3ece9e9e9e8e7e7
e6e5e5e4e3e2e2e1e0e0e0e0dedddcdcdbd8d7d7d7d6d4d3d2d2d3d3d2d2
d2d2d2d1d1d3d3d3d3d3d3d3d2d2d3d3d2d2d1d0d0d0cfcfcfcfcecacac8
b5b5b7b9c2c2c4c8cad0d0d1d6dadadadddfe0e4e6e7e8e8e8e9e9e9e9e9
e9e9eaebebebebe9e8e8e8e9e9e9e9e4e2e2e2e2e2e2e2e2e2e2e4e8e9e9
e9e9e9e9ebebeaeae9e5e4b14c4c4c4c4c4c4c4c4c5862626262626262cc
e6e5e6e5e6e6e6e5e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e6e6bd504c4c4c
4c4c4c4c536575757575757599b8b4b1aba19f9d9b9494928c8877757575
7575757575829d9d9ea9ada56f6f6f6f6f6f73989d9da0adad9083838383
89a8c4d7e8e8dfc7c7cfb9888b8ba3b5b7babdc57837373737607f8b8b8b
b1bcbdbec0c0b0b8bbbdccd4d8dce0efeaebebebebeae7e4e4e4e4e4e6e8
e7e7e7e3e3e3e3e2e2e2e1e2e1e3eaeee8e4e6e6e7e7e7e8e8e9e9e9e9ea
eaeae9e9e9e9e9e9e9e9e9e9e9e9e9e9e9eaebebebebebf4eeecececeaea
e9e9e8e8e7e7e7e6e6e5e4e4e3e3e3e2e1e0dfdededddcdbdadadadadada
d8d5d5d5d4d4d4d4d4d4d4d4d3d2d3d3d3d2d1d1d2d2d1d1d1d0d0d0d0d0
c2c2c6c8cbcdd2d6d9dcdddfe0e4e6e9e8e8e9e8e5e4e3e3e2dddcdcddd2
c5bb9790907f7d808282868a8a8a8a92b0e9e9e9e9e9e9e9e9e9e8e5e5e6
e4e3e3e3dedcdcdcdbd5d4a94c4c4c4c4c4c4c4c4c5f62626262626262d9
e4e5e5e6e6e6e6e6e6e6e8edf0f0efeae7e6e6e6e6e6e6e6e6bd504c4c4c
4c4c4c4c536975757575757599b9b9b4b2aca6a2a1a1a097959079757575
7575757575829d9d9ea9ada56f6f6f6f6f6f73989d9da0adad9083838383
87a8c4d7e8e8dfc7c7cfb9858b8b6e515156566149373737375c7f8b8b8c
d8ececece7e6e1e0e0e2e3e3e4e5e5e6e6e6e6e6e6e7e9e7e7e7e7e8e9eb
e9eaeaeaeaeaeaebebedf1f1f0eaeaecf2f2f1efecebebebebeef0f0efef
efefefefefefefefefefefefefeeeeeeede8e8e8e8e8e8e8e8e8e7e7e7e7
e7e7e6e6e5e5e5e5e5e5e4e3e3e2e2e1e0e0dfdfdfdfdedddbdadadadad8
d7d7d7d6d4d4d4d3d3d3d2d2d1d2d2d1d0d0d1d1d0d0d0d0d0d0d0d0d0d0
cdcdd2d5d7dadcdee0e4e5e8e9e8e8e6e6e4e1dad8d3d0cfcdc9c9c9b85f
514c4d52555b5b5d5e606060616161617ce6e6e4e2e3e3e2e1dfdbdadad7
d1d0d0cfcececdcecfcfcfa64c4c4c4c4c4c4c4c4c5f62626262626262d7
dfe6e6e6e6e6e6e6e6ebf9fffffffffdfaf3ece7e6e6e5e5e5bd504c4c4c
4c4c4c4c53697575757575759dc9c8c5c2c1bfbfbfbcbbb6b4ad7f757575
7575757575829d9d9ea9ad976f6f6f6f6f6f73989d9da0adad9083838383
86a8c4d7e8e8dfc7cacfb9838b8ba8bfc0c7c4c2bcbbbbbbbcc2d3d1d1d3
e3e7e6e5e4e2dfdddddedfe0e0e0e0e0e0e0e0e0e0e0dedddddddcdedee0
e0e0e0e0e1e1e1e2e2e2e2e2e0dfe0e1e3e4e5e5e5e5e6e6e6e6e6e6e6e5
e6e6e6e6e5e5e5e5e5e5e4e4e4e3e3e3e3e3e3e2e2e2e2e2e1e1e1e1e1e0
e0e0e1e1e1e0e0e0dfdfdfdedededededddddcdcdbdbdbdbdad9d7d6d6d4
d3d2d2d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0
dddedfe4e6e7e8eaeae7e7e6e6e6e6e5ded6d1d0cdcccccccccbcbcbb14c
4c4c4c4e4e4e4e525f6262626262626279d8d5d1d1d0cdcdc9c9c9c5c5c4
c4c5c6c6c6c6cacecfcfcfa64c4c4c4c4c4c4c4c4c6062626262626262da
e5e6e6e6e6e5e5e5d9c3d7e7f6fffffffffffefcf6efe8e5e5bd504c4c4c
4c4c4c4c5369757575757575a3dbd8d3d1d0cfcfcecbcbc9b08c77757575
7575757575829d9d9da9ad936f6f6f6f6f6f73989d9da2adad9083838383
86a8c4d7e8e8dfc7cacfb9858b8bb5d3d9e3e7e6e3e2e2e2e2e3e5eaebec
eeeae8e7e6e3dfdfdedfe0e0e0e0e0e0e1e1e0e0e0dfdbdadadadadadadb
dcdcdbdbdbdbdbdbdbdbdbdcdad8d8dadddedfe0e0e0e0e0e0e0e0e0e0e1
e1e2e2e2e2e2e1e1e1e0e0e0e0e0e0dfdfdededededddddddcdcdcdcdbdc
dcdcdcdcdcdbdbd9d8d8d8dadadadadadadadad9dadadadad9d4d4d4d4d2
d2d1d1d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0
ebeaeae7e6e6e5e5e5e5e6e6e6e6e6e5e5e1e0e0e0e0e0e0e1e1e1e0c44c
4c4c4c4c4c4c4c505f6262626262626277c8c7c4c4c4c4c2c1c0c1c1c1c2
c3c4c6c8cacccfd1d2d4d7aa4c4c4c4c4c4c4c4c4c6062626262626262da
e6e6e6e6e6e5e5d68d8d9aabc0d3e8f2fdfefffffffffefaf3c9524c4c4c
4c4c4c4c5369757575757575a3e0dcd4d2d1d1d0d0d0d0d0b99979757575
7575757575829d9d9da8ad936f6f6f6f6f6f73989d9da1adad9083838383
86a8c4d7e8e8dfc7cacfb9838b8fb9d7dbe1e5e6e3e2e2e2e2e3e3e3e3e3
e4e8ebefeeebebe9e5e5e5e5e5e4e4e4e4e3e3e3e1e0dcdcdbdadadadada
dbdbdbdbdadadadadadadad9d3d3d3d4d6d9dadadadadadadbdbdcdcdddd
dddddddddddddddddddddcdcdcdcdbdbdadadadad8d7d7d7d7d7d7d6d3d3
d3d3d3d3d3d3d3d3d3d3d3d3d3d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4
d2d1d0d0d0d0d0d0d0d0d0d0d0d0d0c7c6c6c6c8cbcac9c5c5c5c6cacaca
e8e8e8e8e8eae9e9eaeae9e8e8e8e8e8e7e5e5e5e5e6e6e6e6e6e6e6c64c
4c4c4c4c4c4c4c505f6262626262626276c7c4c2c2c2c2c2c2c1c3c3c5c7
c9cdcfd1d8d9dce2e2e5e6b24c4c4c4c4c4c4c4c4c6062626262626262db
e6e6e6e6e6e6e6a0666b707e8997a8b9cce0effbfeffffffffcd504c4c4c
4c4c4c4c53697575757575759ececccbcbc9c8c8c8c9c8c8c8ca8a757575
7575757575829d9d9da8ad966f6f6f6f6f6f73989d9da1adad9083838383
86a8c4d7e8e8dfc7c7cfcabcc3d7e2e6e6e6e6e6e3e2e2e2e2e3e3e3e3e3
e4e6e6e7e6e6e5e7ebefe9e8e8e7e7e6e6e5e3e3e3e0dedddcdcdbdbdbdb
dcdbdbdcdcdcdbdadadadad6d2d2d2d2d4d8dadadadadad9dadadadadada
dadadadadadadadadadadadadadadadadadad6d4d4d4d4d4d2d2d2d2d0d0
d0d0d0d0d0d0d0d1d1d2d2d2d2d2d2d4d4d4d4d4d4d4d5d5d4d4d4d4d4d4
d4d4d3d1d1d1d1d0d0d0d0d0d0d0d0d0d0d0d0d0ccc5c5c5c5c5c5c5c5c5
e0e0e0e0e0e1e1e2e2e2e3e6e6e6e7e7e7ede9e6e6e6e6e5e5e5e5e5c64c
4c4c4c4c4c4c4c505f6262626262626280ccc8c6c8cacccccccdcfcfd1d1
d7dfe1e3e6e6e6e5e5e5e5b24c4c4c4c4c4c4c4c4c6062626262626262d8
e3e3e3e3e3e3dd7965656565696f7f8796a3bacce0eff7feffb84c4c4c4c
4c4c4c4c53697575757575759bc1c1c1c1c0c0c0c0bfbfbdbdba83757575
7575757575829d9d9da8ada56f6f6f6f6f6f73989d9da0adad9083838383
86a8c4d7e8e8dfc7c7cfd6e3e3e3e4e5e5e5e6e6e3e2e2e2e2e3e3e3e3e3
e4e6e8e9e9ebe9eaedece8e7e7e7e7e6e5e5e4e3e3e0dfdedddcdbdbdbdb
dcdddddddddcdbdbdbdbdbd7d6d6d5d6d6dadbdadadadadadadadadadadb
dbdcdcdcdcdcdcdddedddddddddddddcdcdbdad9d9d9d7d5d5d5d5d5d5d3
d2d2d3d4d4d4d4d2d2d3d4d4d4d4d4d4d4d4d4d4d6d8dadad9d9d9d9d9d7
d6d6d6d5d4d4d3d2d2d2d1d1d0d0d0d0d0d0d0d0ccc8c8c8c8c8c6c5c5c5
dedededfdfdfe0e0e0e1e2e2e3e5e8e9eae8e6e5e5e5e6e6e6e6e6e6c64c
4c4c4c4c4c4c4c505f6262626262626281cccdcbc9c8c8c8c8cacececed0
d1d2d3d7d9d9d9d9d9d9d9ab4c4c4c4c4c4c4c4c4c6062626262626262ca
cecececdcac9b76e65656565656565696f7a8896a5b7cbdee8ac4c4c4c4c
4c4c4c4c536975757575757599b6b6b6b6b6b9b9b9b899785b5b6f757575
7575757575829d9d9da8ada56f6f6f6f6f6f73989d9da0adad9083838383
86a8c4d7e8e8ddc6cacfd9e3e3e3e4e6e6efedeceae9eaecebebecedeef2
f2efeaeaeaebe7e4e3e5e6e6e6e6e7e6e6e5e4e4e3dfdfdfdededededfdf
e0e1e0e1e1e0e0e0e0e0e0dddddddddedfe0e1e0e0dfdfdfdfdfe0dfe0df
dfe0e0e0dfdfdfdfdfdfdfdfdfdfe0e0e0e0e0dfdfdedededddddddcdcdc
dadadadad9d9d9d9d7d7d7d7d7d8d9d9d9d9d9d9dadadadadadadadadada
dadadad9d9d9d9d7d6d6d4d4d4d4d2d2d1d1d0d0d0d0d0d0d0d0cececec9
dcdcdddedfdfe0e0e2e3e6eaebe9e7e6e6e6e6e6e6e6e6e6e6e6e5e59f4c
4c4c4c4c4c4c4c505f6262626262626281c9c6c6c5c5c4c4c3c4c4c4c4c4
c4c4c4c4c4c4c4c4c5c5c5934c4c4c4c4c4c4c4c4c6062626262626262af
afaeafb3b6b6a56a6a6b6966656565656565686a768793a6b58c4c4c4c4c
4c4c4c4c536975757575757593a8a8a6a8a8a9a9a9a69077685e71757575
7575757575829d9d9da8ada56f6f6f6f6f6f73989d9da0adad9083838383
86a8c4d7e8e8ddc6ced6dfe3e3e3e4e6e6f0eef3ece5e5e5e5e7e7e7e8e9
e9e9e9e9e8e7e3e3e3e4e6e7e7e8e8e8e8e8e7e7e6e1e0e0e1e2e2e2e2e2
e4e6e6e6e6e7e7e7e7e7e4e2e2e3e3e4e5e6e6e6e6e6e6e6e6e6e4e4e4e4
e4e4e3e3e3e2e2e2e2e2e2e2e2e1e1e0e0e0e0e0e0e0e0e0e1e0e0e0dfdf
dfdfdfdfdededddddddcdbdbdadadadadadadadadadadadadadadadadada
dadadadadadadadadadadad9d6d4d4d4d4d4d4d2d2d1d1d1d1d0d0d0d0d0
dbdddedfdfe0e1e2e3e9eae6e6e6e6e6e6e6e5e5e6e6e6e6e6e6e6e6944c
4c4c4c4c4c4c4c505f6262626262626280c8c6c6c4c4c2c2c1c0c0c2c0c0
c0bfbfbfc0c1bfbdbcbbba794c4c4c4c4c4c4c4c4c606262626262626293
918f8f8f908f876360626569696967656565656565656b74866f4c4c4c4c
4c4c4c4c536975757575757597a79a979797979898989898989c7d757575
7575757575829d9d9da8ada56f6f6f6f6f6f73989d9da0adad9083838383
86a8c4d7e8e8e6e4e3e3e3e3e3e3e4e6e6e7e7e7e6e7ebeaeaefedeaeaec
ecececeaeae9e6e6e6e7eaeaeaeff3f3eeececececededececededededec
ebececeaebecececeaeae8e7e7e7e7e8e9e9e9e9e9e9eae9e9e9e8e8e7e7
e6e6e6e6e5e4e4e4e4e3e3e2e2e2e2e1e0e0e1e1e1e1e1e1e1e1e1e1e1e0
e0e0e0e0e0dfdfdfdedddddcdcdcdcdbdadadadadadadadadadadadadada
dadadadadadadadadadad9d9d7d4d4d4d4d4d4d4d2d2d0d0d0d0d0d0d0d0
dededfe0e1e1e2e2e3eae7e6e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6944c
4c4c4c4c4c4c4c505f6262626262626281cecdcbcac9c8c6c5c5c6c7c7c8
c7c5c5c4c4c4c2c2bfbdbd7c4c4c4c4c4c4c4c4c4c60626262626262618b
7e7c7b78776c6a545457585e6165686b6a6766656565656565624c4c4c4c
4c4c4c4c5369757575757575bbfce1c8a6938b8e8f8f919494967d757575
7575757575829d9d9da8ada56f6f6f6f6f6f73989d9da0adad9083838383
86a8c4d7e8e8e6e3e3e3e3e3e3e3e4e6e6e6e6e6e3e2e2e2e2e3e3e7e8eb
eceeedebecebe9e9e9eaeaeaeae8e8e7e6e6e6e6e6edefefeff0f0f2f5f8
f6ebe9e9ebeeeeececededece9e9e9e9eaeaebecebebeaeaeaeaeae9e9e9
e8e8e7e7e7e6e6e6e5e4e3e3e3e2e2e2e2e1e1e1e1e1e0e0e0e0e0e0e0df
dfdfdfdfdfdededddddcdddcdcdcdcdbdbdbdadadadadadadadadadadada
dadadadadadadadad9d7d4d4d4d4d4d4d4d4d3d3d1d0d0d0d0d0d0d0d0d0
dfdfdfdfe0e0e1e2e2e4e9ece7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6944c
4c4c4c4c4c4c4c505f6262626262626282d1d1d0d0d0d0cfcfcecfcfcfcf
cfcccbcacac9c7c7c5c5c4834c4c4c4c4c4c4c4c4c5f626262626262618f
86817f5c49343435444d525255595d666e6d6d696865656565624c4c4c4c
4c4c4c4c5169757575757575cbfffffffeeddab68566665f595b70757575
7575757575829d9d9facada56f6f6f6f6f6f73989d9da0adad9083838383
86a8c4d7e8e8e6e3e3e3e3e3e3e3e4e7e7e6e6e6e3e2e2e2e2e3e3e3e3e3
e4e6e6e7e7e6e5e5e5e5e6e7e8e8e8e7e6e6e6e6e6edefefeff0f0f2f5f5
f3e8e7e7e6e6e6e6e6e5e4edece9e9eaeaeaecedededecebeaeaeaeaeaea
e9e9e8e8e8e7e8e8e7e6e6e5e4e4e3e3e3e2e2e1e1e0e0e0e0dfdfdfdfdf
dfdfdfdfdfdddddddededcdcdcdbdbdbdadadadadadadadadadad8d8d8d8
d8d8d6d6d6d6d6d6d4d4d4d4d4d4d4d4d4d4d2d2d2d1d0d0d0d0d0d0d0d0
dfdfdfe0e0e1e1e1e2e3e3e5ece6e5e5e5e5e6e6e6e6e6e6e6e6e5e5944c
4c4c4c4c4c4c4c505f6262626262626284dfdfdfdfdeded8d6d5d5d2d1d1
d1d1d1d1d0cfcccac8c8c78f4c4c4c4c4c4c4c4c4c5f62626262626268a0
a09c99978c704a342d303e47515252575f676b6d6d6a676565624c4c4c4c
4c4c4c4c4c67757575757575d0fffffffedabe917f74463733376a757575
7575757575829d9da0adada56f6f6f6f6f6f73989d9da0adad9083838383
86a8c4d7e8e8e6e3e3e3e3e3e3e3e4e6e6e6e6e6e4e7e8e8e8e8e3e3e3e3
e4e6e6e6e6e5e5e5e5e5e6e7e8e8e8e7e6e6e6e6e6edefefeff0f0f2f5f5
f3e8e7e7e7e7e7e9eeedebe7e6e8e8e9e9e9eaecedededededededecebea
eaeaeaeaeae9e9e9e9e9e8e8e8e8e7e6e6e5e5e5e4e3e3e2e1e1e0e0e0df
dfdfdfdfdedddddddedddcdcdbdbdbdbdadadadadadadadad7d6d4d4d4d4
d4d4d4d4d3d2d2d2d3d4d3d2d1d1d1d1d2d2d2d2d2d2d2d2d2d2d2d0d0d0
dddedfdfe0e0e1e1e2e3e4eae8e6e5e5e5e5e6e6e6e6e6e5e5e5e5e5944c
4c4c4c4c4c4c4c505f6262626262626285e6e5e5e5e6e6e6e5e6e6e2e1df
d7d7d5d2d2d2d2d1d1d0cf944c4c4c4c4c4c4c4c4c5f62626262626269b8
bdbdbcb8b4aba791673f3937383f4d5152535960676c6d6d6a634c4c4c4c
4c4c4c4c4c67757575757575bbe3ecc47f67656565656564585e727b7575
7575757575829d9da0acad936f6f6f6f6f6f73989d9ea2adad9083838383
86a8c4d7e8e8ecf0f0f0eeebebebececeff3f3f3ebe5e4e4e5e8edf0f3ed
edf1eeeae8e6e5e5e5e5e6e7e8e8e8e7e6e6e5e5e6edefefeff0f0f2f5f5
f3e8e6e6e9edf2efece5e3e3e4e6e6e6e6e6e8eaeaeaeaeaeaeaeaebeceb
ebebececebebeaeaeaeaeaebebeaeae9e8e8e7e7e7e6e6e5e4e3e3e2e2e2
e1e1e1e0e0dfdfdedddddddddddddcdbdadadadadadadadadadadad6d6d4
d4d4d4d2d2d2d2d2d2d2d1d1d1d1d1d1d1d0d0d1d2d2d1d1d0d0d1d1d3d3
dfdfdfdfe0e0e1e2e3e4e5eae5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5944c
4c4c4c4c4c4c4c505f6262626262626297e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e3e3e2e2e2e2e1de9c4c4c4c4c4c4c4c4c4c5f62626262626269c1
c9c6c5c2c0bcbab2afa4845b4137373b454d5152545861696c644c4c4c4c
4c4c4c4c4c67757575757575a5a78b65656565686865657099c6d7eacdba
947e757575829d9da0abad936f6f6f6f6f6f73989d9ea2adad9083838383
86a8c4d7e8e8ebe9eaeae8e6e6e6e7e8e8e8e7e7e5e2e1e1e3e5e6e7e8e9
e9e9e9edf0ecedeae8e8e7e7e8e8e8e7e6e6e6e6e6edefefeff0f0f2f5f5
f3e8e6e7f0ebebebebe4e2e2e3e5e5e5e5e6e8eaeaeaeaeaeaecededecec
eceef0f0f0f0f0eeedededeff0efeeebeaeaeaeae9e9e9e9e9e8e8e7e6e5
e5e5e4e3e3e2e1e1e0e0e0dfdfdfdedededddcdcdcdcdcdbdbdbdbd9d8d8
d8d8d8d8d8d8d8d7d5d5d4d4d3d2d2d3d2d3d4d4d4d4d4d4d4d4d4d5d5d4
dfdfdfe0e0e1e1e2e2e3e4eae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e68f4c
4c4c4c4c4c4c4c505f62626262626262b8e6e6e6e6e6e6e6e5e5e5e5e6e6
e6e6e6e6e6e7e7e7e7e6e69f4c4c4c4c4c4c4c4c4c6062626262626269c8
d0cececccac6c3bfbdbab8b29f79503c37383c484e5252575c5d4c4c4c4c
4c4c4c4c4c67757575757575837767656565656a6b7594e1ffffffffffff
ffe7cda688829d9da1adad936f6f6f6f6f6f73989d9ea2adad9083838383
86a8c4d7e9ebeee8e9e9e7e5e5e5e6e7e6e6e6e6e3e1e1e1e2e3e5e6e6e7
e7e8e8e9e9e8e4e6e8e9ebeeecedeeeae7e6e6e5e6edefefeff0f0f2f5f5
f3e7e6e6f0ecececebe5e3e3e5e6e6e6e6e6e9eef1f1eeedeef3f3eeecec
ecedecedededede9e9e9e9ebededececf0f3eeeff0ecebebeaeae9e9e8e8
e7e6e6e5e5e5e3e3e3e2e2e1e1e1e1e1e0e0e0e0dfdfdfdfe0e0e0e0e0df
dfdedddcdcdcdcdcdddddcdadadadadadadad9d9dadadadadadadadadad9
dfdfe0e0e1e1e2e3e3e3e5eae9e6e6e6e6e6e5e5e5e5e5e5e6e6e6e6814c
4c4c4c4c4c4c4c505f62626262626262b8e6e6e5e5e5e6e6e6e6e7e7e7e7
e6e6e6e7e7e7e7e6e6e6e59f4c4c4c4c4c4c4c4c4c6062626262626269d4
d9d4d1d0d0cfcdc6c5c2c0bebdb9b09a714537373940495252514c4c4c4c
4c4c4c4c4c6775757575757577656565656565656794cfe3f6fdffffffff
fffffffff3e5cabea3adad936f6f6f6f6f6f73989d9ea2adadb2b6b5b4b4
b8ddebf2f4f3eee7e9e9e6e5e5e5e6e7e7e6e6e5e2e0e0e0e1e2e3e4e5e5
e6e6e7e7e7e6e2e3e3e5e7e8e9ebedeceef2edeceff2f1efeff0f0f2f5f5
f3e8e6e6e7ebf2f2f1eeeeeeefefeff3f7faeeebeaeae8e7e6e5e5e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e8eaececf2f1eff3eeebebeb
eae9e9e8e8e7e7e6e6e6e5e5e4e4e4e4e4e4e4e4e3e3e3e3e3e3e3e3e3e3
e3e3e2e2e2e2e2e2e2e2e2e2e2e1e0e0e0e0dfdfdfdfdfdedddddddddddd
e0e0e1e1e1e1e2e2e3e3e4e5e9eaeeeae7e6e6e6e6e6e6e6e6e6e6e6814c
4c4c4c4c4c4c4c506062626262626262b9e7e7e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e69f4c4c4c4c4c4c4c4c4c6062626262626269db
e5e4dfe0dbd5d3d1cfcccbc7c6c5c3c0bfb792653e373739444e4c4c4c4c
4c4c4c4c4c6775757575757577656565656565657696a9b2c7d5e5f1fbff
fffffffffffffffef8ebd299706f6f6f6f6f73989d9ea2adadf3edececeb
eceff2f2f2f3f0e8e9e9e8e5e5e6e6e6e6e6e6e6e3e0e0e0e1e3e3e4e5e5
e5e5e5e6e6e5e1e2e2e3e5e6e7e8e9e9eaeaeaeaebe7e6ebeff1f3f2f8f8
f3e7e5e5e6e6e6e7e7edefefeff0f1f5f5fce9e6e6e6e6e6e6e6e6e6e6e5
e5e5e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e8e9edf2f1
eef2f4edebeceaeae9e9e9e9e9e8e7e7e7e7e7e7e8e9e9e9e9e9e8e8e8e8
e8e9e9e8e8e8e8e8e8e8e8e8e8e8e8e8e8e7e6e6e6e6e6e5e5e5e5e4e4e3
e1e1e2e2e2e2e2e2e2e3e3e4e5e5e5e6eaebe9ebebebe7e6e5e5e5e6814c
4c4c4c4c4c4c4c506162626262626261b7e6e7e7e7e7e6e6e6e6e6e6e6e6
e5e5e5e5e5e6e5e6e6e6e68a4c4c4c4c4c4c4c4c4c6062626262626269dc
e6e6e6e6e6e6e7e3dfd8d8d8d5d2d1cecececccbbd925a3c37414c4c4c4c
4c4c4c4c4c6775757575757577656565656565656871808b97a3b3c1d3e1
eff9fcfffffffffffffffffed9af8b786f6f73989d9ea2adadf3edededed
eef2f2f2f2f4f2e9eaeae9e6e6e7e8e8e8e8e8e8e4e1e1e1e2e4e4e5e6e6
e6e6e6e6e6e6e1e2e2e3e5e6e6e7e8e9e9e9eaeae9e5e3e3e5e7e7e8e9ea
f2eae6e6e6e6e6e6e7eeefefeff0f1f5f5fce9e6e7e7e7e6e6e6e6e6e6e6
e6e6e5e5e5e5e5e5e5e4ded8d0d0d0d0d0d0d3d2d2d2d2d2d2d1d1d1d1d1
d2d2d2d5d6dadcdbd9d9dadce1e1e0dfdfdfdfdfe0e1e1e1e1e1e1e1e1e0
dadadadadadadadadadadadadadadadadadadadad9d9dadfdfdfdfded8d7
e0e1e1e1e1e1e1e2e2e2e2e3e3e3e3e3e3e3e4e4e5e6e9ede9e7e5e5814c
4c4c4c4c4c4c4c506162626262626262b7e5e5e5e5e5e5e5e5e6e6e6e6e6
e6e6e6e6e6e7e6e6e6e6e66d4c4c4c4c4c4c4c4c4c6062626262626269dc
e6e6e6e6e6e6e6e6e6e6e6e5e5e2e2e2e2e2dfdfdcdad8b6895f4c4c4c4c
4c4c4c4c4c67757575757575836b6765656565656565656a707e8a94a3b3
c1d1dae9f7fcfffffffffffffff8e2c7966f70969d9ea2adadf3edededed
eef2f2f2f3f9f3eaeaeceae7e7e8e9e9e9e9e9e9e6e3e2e2e3e5e6e6e6e7
e7e7e7e7e7e6e1e1e1e3e5e6e6e7e7e9eaeaeaeae9e4e3e3e4e6e7e7e8e9
ebf4e8e7e7e6e6e6e8efefefeff0f1f5f6fce8e5e5e6e6e6e6e6e6e6e6e1
dfdedbdad9d9dac9bd927567201111111111181818181818181818181818
181818181818171717171b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b
1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a1a1a
dfe0e0e0e0e0e0e0e1e1e2e2e2e2e3e3e3e3e3e3e3e4e4e4e7ebece6814c
4c4c4c4c4c4c4c506162626262626262b7e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e66d4c4c4c4c4c4c4c4c4c606262626262626ee0
e9e9e9e6e6e6e6e6e6e6e6e6e6e5e5e5e5e5e5e5e5e5e5e5e5ab4c4c4c4c
4c4c4c4c4c67757575757575867d77716b6665656565656565656a717d8a
95a1acbacdd7e5f4f9fffff5b88169696f6f6f889d9ea2adb1f1edededed
eff2f2f2f3fbf3eaebedeae7e8e9e9e9e9e9e9e9e6e3e3e2e3e5e6e6e7e7
e7e7e8e7e7e6e2e2e2e4e6e6e7e8e8e9e9eaeaeae9e4e3e4e7eceff1f3f6
f6ece7e7e6e6e6e5e8efefefeff0f2f5fafce8e5e5e5e5e5e6e6e7e7e7e2
dbdbdbd8b8a7856c63616161390000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
dedededededededededfdfdfe0e0e1e1e2e2e2e1e2e2e3e4e5e6e8eb814c
4c4c4c4c4c4c4c506162626262626262b7e5e5e5e5e5e5e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e6e9eceb6a4c4c4c4c4c4c4c4c4c6062626262626271df
e7e7e7eaebebebececeaeaebebebeeebebeaeaeae8e5e5e5e5ae4c4c4c4c
4c4c4c4c4c677575757575757b7b827f7b76726b65656565656565656669
727d8b929dacbacad6e2da7361616161676f6f7182c4ccdbf4f0edededed
eef2f2f2f2f6f2eaeaebe9e7e7e7e8e8e8e8e9e9e6e3e2e2e3e5e6e6e7e7
e8e8e8e8e9e7e2e2e3e4e6e7e8e9e9eaeaeaeaeaf0edeef2f0f0f2f3f5f5
f3e7e6e6e6e6e6e5e8efefefeff0f4f5fafce9e7e7e6e6e6e6e6e6e6e6e7
dfb198736561616161616161540200000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
dbdcdcdbdbdbdbdcdcdcdddedfdfdfdfe0e0e1e1e2e3e3e5e5e6e6e8754c
4c4c4c4c4c4c4c506162626262626263bae6e6e6e5e5e5e6e6e6e5e5e6e6
e6e7e8e8ebecebedeae7e7654c4c4c4c4c4c4c4c4c6062626262626263d9
e4e4e4e4e3e3e4e4e4e4e5e5e6e6e7e8e8e7e5e5e7ebebecec924c4c4c4c
4c4c4c4c4c677575757575757359657372727d7a78706c66656565656565
656566737c86919baba64a2e3b56616161656c6f6fb4f2f2f6efebebebeb
eceff2f2f2f3efe8e9e9e8e5e6e6e7e7e7e7e7e8e5e2e2e2e3e5e6e6e7e7
e8e9e9e8e7e6e2e3e3e5e6e7e8e9eaeaebeceeece8edefefeff0f0f0f4f5
f3e8e6e6e6e6e6e6e8efefefeff0f4f5faf6e8e6e6e6e6e7e7e6dfd0a880
666261616161615e5d5d4d46461200000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
dbdbdbdcdcdddddddcdcdddfdfdfdfdfdfe0e0e1e1e2e3e3e4e5e5d8544c
4c4c4c4c4c4c4c506162626262626266c4e6e6e6e6e6e6e6e7e8e9e9eaeb
ecebeceae7e6e6e5e5e5e5644c4c4c4c4c4c4c4c4c6062626262626262d6
e2e2e3e3e2e2e2e3e3e3e3e3e3e4e4e4e4e5e6e6e4e3e3e3e3814c4c4c4c
4c4c4c4c4c677575757575757359595959595b5f6c707a76706a67656565
686d7778787b828387462d2d2d31485c6161636c6f78d0f2f2eee9e9e9e9
ebedf0f2f2f2ede6e7e8e6e3e4e5e6e6e6e6e6e6e3e1e1e1e2e4e5e6e6e6
e7e8e7e7e7e6e2e2e3e5e6e7e8e9eaeaeaeaefe6e6edefefeff0f0f0f4f5
f3e8e6e6e6e6e6e6e8efefeff0f0f4f5faf4e6e6e6e6e3d3bc9471636161
615f58584b4040312d2d2d2d2d1600000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
dadadbdbdddddddddedededfdfdfdfdfe0e0e1e2e2e3e3e4e5e5e6d8544c
4c4c4c4c4c4c4c506162626262626266c5e9e9eaeaeaeeecebe8e9e9e7e5
e5e5e5e5e5e5e5e5e5e4e4644c4c4c4c4c4c4c4c4c606262626262627fdc
e0e0e0e0e1e1e1e1e1e1e1e1e1e1e2e2e2e3e2e3e4e4e4e3e2814c4c4c4c
4c4c4c4c4c67757575757575725557595959595959595d606b7678726a6b
7d828282828282825f292c2d2d2d2d33536161626b6f7ad0f2ebe8e8e8e8
e9ecedeff2f2ebe5e5e6e4e2e2e3e3e5e5e5e5e5e2e0e0e0e1e3e4e5e5e6
e6e6e6e7e7e6e2e2e2e4e6e7e8e9e9eaeaebeef0eaedefefeff0f0f0f4f5
f3e8e6e6e6e6e7e7e9efefeff0f0f4f5faf4e6dac499826861615853533d
3b382d2d2d2d2d2d2d2d2d2d2d2000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
dbdcdddedfdfdfdfdfdfdfe0e0e0e0e1e1e2e2e2e3e3e4e4e5e5e5d8544c
4c4c4c4c4c4c4c506162626262626266c9e8e8e6e6e5e5e5e4e4e4e4e4e4
e3e3e3e3e3e3e3e4e4e4e4644c4c4c4c4c4c4c4c4c5f62626262626293e1
e0e0e0e0dfdfe0e0e0e0e0e0e1e1e1e1e1e1e1e1e1e1e3e5e4814c4c4c4c
4c4c4c4c4c67757575757575725252535557595959595c5a646f7d777f7c
8282828282828280351f21272d2d2d2d2e445b6161686f7bd4eae7e6e6e7
e8eaecedf1f2eae3e4e5e3e0e0e1e2e4e4e4e4e4e1dfdfdfe0e2e3e4e5e6
e6e7e7e7e7e6e1e1e2e3e5e6e7e8e9e9eaeaebeceff0f2f0eff0f0f0f4f5
f3e8e7e7e7e7e7e7ecefefeff0f0f4f5fdce7a24474e4e463636302d2d2d
2d2d2d2d2d2d2d2d2d2d2d2d2d2300000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
dededfdfdfdfdfdfdfdfe0e0e1e1e1e1e2e2e2e2e2e2e3e3e3e3e3d6544c
4c4c4c4c4c4c4c506162626262626266c4e3e3e3e3e3e3e3e3e3e2e2e3e3
e3e3e2e2e2e3e3e3e2e2e2644c4c4c4c4c4c4c4c4c6062626262626293e1
e0e0e0e0e0e0e0e0e0e0e1e1e1e1e1e1e2e1e1e1e1e1e2e3e3814c4c4c4c
4c4c4c4c4c677575757575757456555252525456595959595a606d798281
818282828282826e221f1f1f20242c2d2d2d304c6061666d78cfe6e6e6e6
e7eaecedf0f2eae3e3e5e4e0e0e1e1e2e2e3e3e3e0dfdfdfe0e2e3e4e5e5
e6e6e7e7e8e7e1e1e1e3e5e6e6e7e8e9e9e9e9e9e9e4e5e9f1f5f0f0f4f5
f3e8e7e7e7e7e6e6ecefefeff0f0efc14d0c00001a2d2d2d2d2d2d2d2d2d
2d2d2d2d2926262626262626261d01000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
dfdfdfdfe0e0e0e1e1e1e1e1e2e2e2e2e3e2e2e2e2e2e3e3e3e3e3d6544c
4c4c4c4c4c4c4c506162626262626262b6e2e2e3e3e3e3e3e3e3e3e3e3e3
e3e2e2e2e3e3e3e3e3e3e3644c4c4c4c4c4c4c4c4c6062626262626293e1
e0e0e0e1e1e1e1e1e1e1e1e1e1e2e2e3e3e3e3e3e2e2e2e2e2814c4c4c4c
4c4c4c4c4c67757575757575c4dbc4896253525252545758595959596472
7d807f82818282551f1f1f1f1f1f1f21282c2d2d375161636d7edbe6e6e6
e7eaebedf0f2eae3e3e5e4e0e0e1e2e3e3e3e3e3e1dfdfdfe0e2e3e4e5e5
e6e6e7e7e8e6e1e1e1e3e5e6e6e7e7e8e8e9e9e9e9e3e3e3e4e8f0f4f4f5
f3e8e6e6e6e6e7e7ecefefefe9952d00000000000f25252525251f1f1f1f
1f1f1f1f1f1f1f1f1f1f1f1f1f1d01000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
e1e2e2e2e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3d5544c
4c4c4c4c4c4c4c506162626262626262b6e1e1e1e1e1e2e2e2e2e3e3e3e3
e3e3e3e3e3e3e3e3e3e3e0604c4c4c4c4c4c4c4c4c6062626262626293e3
e2e2e3e3e3e3e3e3e3e0dedbdcdcd7c9c9cacac9bdbbbbbab4754c4c4c4c
4c4c4c4c4c67757575757575c6e1e1e1d3a7775852525253555759595959
5c66737c7f7e7e481f1f1f1f1f1f1f1f1f22252b2d2f4359637aa4e1e6e6
e6e9ebedf0f2eae2e3e4e4e0e0e1e2e3e3e3e3e3e0dfdfdfe0e2e3e4e5e6
e6e6e6e6e6e5e1e1e1e3e5e5e6e7e7e8e8e8e9e9e8e3e2e3e4e6e7ebf7f5
f3e7e6e6e7e7e7e7ecefefefecbf7026000000000f1f1f1f1f1f1f1f1f1f
1f1f1f1f1f1f1f1f1f1f1f1f1f1d03000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
e3e4e5e4e4e5e5e4e4e4e4e3e4e4e4e4e5e5e5e4e0dcd9d9d8d8cab7544c
4c4c4c4c4c4c4c506162626262626262b5e0e0e0e1e1e1e1e1e1e2e2e2e3
e3e3e3e3dfdededee0cfbd564c4c4c4c4c4c4c4c4c6062626262626293e5
e2d2bfb0ad8d858585746e6c6c6c685a5a5a5a595352525252574c4c4c4c
4c4c4c4c4c67757575757585d9e0e0e0e0e0dec396675352525253565859
59595a5d687581421f1f1f1f1f1f1f1f1f1f1f2025292d317de7f2f5e8e5
e6e9ebedf0f2eae2e3e4e4e0e0e1e1e2e2e2e3e3e1dfdfdfe1e3e3e5e5e6
e6e6e6e6e6e6e2e1e1e3e5e6e6e7e7e8e8e9e9e9e9e3e2e3e4e6e7ebf7f5
f3e8e6e6e6e6e6e6ecefefeff0f1f5e19f4004000f1f1f1f1f1f1f1f1f1f
1f1f1f1f1f1f1f1f1f1f1f1f1f1f0b000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
e5e5e6e6e6e6e0d8b6b2a09f9fa08376767674736661606060605b5d4d4c
4c4c4c4c4c4c4c53616262626262626acedcd5d0b2b2b09c9e9e9e9e8273
7373737162626262625c594e4c4c4c4c4c4c4c4c4c60626262626262788a
665d5652525252525252525252525252525252525252525252514d58504c
4c4c4c4c4c6777848fa7c4eeeddfdfdfdfdfdfdfdfd6b285555252525353
57595959595f68411f1f1f1f1f1f1f1f1f1f1f1f1f1f22339eecfffff6e6
e6e9ebedf0f2eae3e3e5e4e0e1e1e2e3e4e4e5e5e2e0e0e0e2e3e5e5e6e7
e7e8e8e8e8e8e3e2e2e4e6e7e7e8e8e9e9e9e9e9e9e4e3e3e4e6edf5f4f5
f3e8e6e6e6e5e5e6ecefeff0f0f1f5f8fde5be6a291f1f1f1f1f1f1f1f1f
1f1f1f1f1f1f1f1f1f1f1f1f1f1f0b000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
e6e1cea18565575553535252525252525252525252525252525252594e4c
4c4c4c4c4c4c4c596262666d6d888aa98160555453535352525252525252
5252525252525252525253514d4c4c4c4c4c4c4c4c6063656b6e88b2905c
555352525252525252525254555555565b5b5b5b666e6d6d7e908b8c90ad
b3b3b3c0d8daeaeff1f2f3faeedfdfdfdfdfdfdfdfdfdfdfd29e6b565252
52525557585959491f1f1f1f1f1f1f1f1f1f1f1f1f1f1f427183bef2feeb
e7e9ecedf0f2eae3e5e5e6e2e2e2e3e5e5e6e6e6e3e1e1e1e3e5e6e7e7e8
e8e9e9e9eaeae5e3e3e5e7e7e8e9e9e9eaeaebecece8e6ebeff4f1f0f4f5
f3e8e7e7e7e7e7e8efefeff0f0f1f4f1f4e1d9d9d2ac4429211f1f1f1f1f
1f1f1f1f1f1f1f1f1f1f1f1f1f1e06000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
dd7e545252525252525252525252525252525254555555555c67676c7973
85898989899eabb8bfc5d7f7dd7462666252525252525252525252525252
5252525253555658585f685a5f5e787d7d7d83a0a9b9c4d3ebfbfffff9d9
bdaca8a8867f92a8a8a8a8b4bcbabac0d6d8d8d8dfe2e2e1e1e5e7e9e7e7
e7e7e7e7e8eaedf0f2f2f3faeedfdfdfdfdfdfdfdfdfdfdfdfdfddbc8f64
5352525253565855211f1f1f1f1f1f1f1f1f1f1f1f1f1f5d7573738ccff4
e7eaecedf2f2ece5e6e7e7e4e3e4e6e7e7e7e8e8e5e2e4e6e7e8e9ebedef
eeecececececeaeaeaeaebebececececececedefeff0f1efeff0f0f0f4f5
f3e8e7e6e6e6e6e7efefeff0d4c1c5938178595555554d44382e27232323
23221f1f1f1f1f1f1f1f1f1f1f1d01000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
e2c39c8c8673737373868a8a8a8aa2aeaeaeaeb8bebebebec8d8d8dff9f9
f9f9f9f9f2f0fffffffffffff2be9d8b836f5d5c62737373737d84898a8b
a6aeaeaeb1bfc1c4c4cddddde1e0e9eaeaeaeaebeff2fbfffffffffffae6
e5e5e5e5e5e4e4e4e5e5e4e4e3e2e2e2e2e2e2e2e3e3e2e2e2e5e8e9e8e8
e8e7e8e8e8ebedf0f2f2f3faf1e2dfdfdfdfdfdfdfdfdfdfdfdfdfdfdfd6
ab7e59525252525436201f1f1f1f1f1f1f1f1f1f1f1f1f48777771737dc5
e9ecedf1f2f2ede7e8e9e9e6e6e6e9ececebecedebe8e7e6e7e7e6e4e3e3
e4e6e6e6e6e6e5e5e5e5e6e7e8e8e8e8e7e6e6e6e6e9efefeff0f0f0f4f5
f3e8e6e6e6e6e6e7efefeff0f0f3f5f8fbe8d0c9c9c6b4a2989894716b6b
6a5c5252524a31312c262626262304030303030303030303030303030303
030303030303030303030303030303030303030303030303030303030303
030303030303030303030303030303030303030303030303030303030303
e2e2e2e1e0dcdbdbdbdfdfdfdfdfdfdfe0dfdfdfdfdfdfdfdfdfdfe5eeee
ebebebebebebfbfffffffffffffffdfbe5d7cdcccfdadadadadddfdfdfdf
e0e0e0e0e0e1e1e1e1e1e3e9eae9eaeaeaeaeaebeff2fbfffffffffffae6
e5e4e3e3e3e3e4e5e5e5e5e4e4e3e3e3e3e3e3e3e3e3e3e3e3e6e9e9e9e9
e9e9e9e9e9eceef2f2f2f6fceae3e1e0e0e0e0e0e0e0e0e0e0e0e0e0e0e3
e6e3cfbb97876452433d3a382b27211f1f1f1f1f1f1f1f274f636698d2e8
ebeef1f2f2f4f4efefecedebede9eae8e8e7e7e6e4e2e2e2e2e3e3e3e3e3
e4e6e6e6e6e6e5e5e5e5e6e7e8e8e8e7e6e6e6e6e6e9efefeff0f0f0f4f5
f3e8e7e6e6e6e6e8efefeff0f0f3f5f9fbe8e3e2e2e1ddd2d0d0d0d0d0d0
cec4baaeaea99a9aa59d958f88857674706f6f6f6f6e6c6c6c6c69666666
64616161615e5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a
5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a
e2e1e1e1e0e0e0dfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdedddde5ebeb
ebebebebebebfaffffffffffffffffffe7dbdbdbdbdcdcdddddddddedfdf
dfdfdfdfdfe0e0e1e1e1e3e9eae9e9eaeaeaeaebeff2fbfffffffffffae6
e5e4e4e4e4e5e6e6e5e5e5e5e5e5e5e5e5e5e5e5e3e3e3e3e3e7eaebeaea
eaeaeaeaebeef2f2f2f3fcfce8e4e5e5e4e3e2e3e3e3e2e3e3e3e3e3e3e3
e7e9e8e8e8e6dfd3b49b82594943413d39302e2b21202025317bd4edf4f4
eef0f0f0edeae9e4e5e8eff5f6f6f6f3f2eeebe8e5e2e2e2e1e2e2e2e0df
e0e5e5e5e5e5e0e1e1e2e6e6e7e8e8e7e6e6e6e6e6e9efefeff0f0f0f4f5
f3e8e7e7e6e6e6e8efefeff0f0f3f4f2e7e2e1e1dfdbd5d0d0d0d0d0d0cf
c9c2b2aeaeaeaeb7b4b2ada7a7a79f969494918e8a8a83827e7e7d7c7a73
73726b6b6b6b6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6f7070
707070707070707275757575757575757575757575757575757575757575
dfe0e0e0dfdfdfdfdfdfdfdfdfdfdfdededddcdcdcdcdcdcdcdcdce4ebeb
ebebebebebebf3f3fafcfcfcfcfcfcfce7dbdbdbdbdbdcdcdcdcdcdcdcdd
dedfdfdfdfe0e0e0e0e1e2e8e9e9e9e9e9eaeaebeff2fbfffffffffff8e6
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e5eaedededed
edededededf2f2f2f4fbfffceae7e8e9e9e9e8e7e7e8e7e6e6e7e7e8e7e7
e8eaeaeaeaeaeae8e6e6e6e6dbbcac936d554a423e3e3a363646c5e4e2e2
e2e3e5e3e3e3e8f2fbfffffffffffffffffffffffffcf8f2ebe5d7cecece
cecececfcececacacacccfd2d3d9deddd8dadbdadadee0ebecececebf3f3
f1e6e5e5e5e5e4e5ececececebe4dcd8d7d7d5d0d0d0d0d0d0d0cfceccc4
bcb1aeaeaeb1b5b3b0ada7a7a7a79a93918c8a86807c7c7c77726e6a6a6a
6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6c6c6c707171727676767676767676
77777777777777777b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b
dedfdfdedededededededededededddcdcdcdbdbdbdbdbdbdadadae5ebeb
ebebebebebebebebebebebebebebebece7dbdadadadadbdbdbdbdbdbdcdd
dfdfdfdfdfdfdfdfdfdfe1e8e9e8e9e9e9eaeaebeff2fbfffffffffff6e6
e6e6e6e6e6e6e6e7e7e8e8e8e9eaeae9e9eae9e9eaeaeaeaeaecedf3f2f2
f2f2f2f2f3f1edeef1f1f1f1ecebebebeaeaeaeaeaeaeaeae9e9e9ebe9e8
e8e8e8e7e7e7e7e6e6e6e6e6e6e6e4e2e2ddc2b294785e52433a6ae2e2e2
e0c2928e99c8d4e4e9fffffffffffffffffffffffffffffffffffdddbebc
bec1c1c1c1c1bbbcbcbdc1c1c2c5c8c8c8c8c8c8cacbd1d3d6d5d0c6dde4
e0d3d2d4d4d4d1d3d6d6d6d4ccd3d3c9c5c3c3c3c4cdccc5c3c3c3b8b5af
aeaeafb0b4b3b1afa9a7a7a7a7a5948c8a88837c7c7c776f6a6a6a6a6a6a
6a6a6a6a6a6a6a6a6a6a6a6d6e727276767676767676767778787b7c7c7c
7e7f7f7f7b7a7a7a7a7a7670707070707070707070707070707070707070
dcdcdcdbdbdbdbdbdbdbdcdcdbdbdbdbdbdbdbdadadadadadadadae3ebeb
ebebebebebebebebebebebebebebebece7dbdbdadadadadadadbdbdbdcdd
dfdfdfdfdfdfe0e0e0e0e1e8e9e8e9e9e9eaeaebeff3fcfffffffffff6e6
e6e6e7e7e7e8ecececededebebe9e9e9e9e9e8e9e9e9e9e9e9e6e5e2e2e2
e2e2e2e2e2e2e3e3e3e3e3e3e6e6e6e6e6e6e6e6e6e6e6e6e7e6e5e5e5e5
e5e5e5e5e3e3e3e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2d8c7bdb8dac392
61423b3334363c4748616d8897b9c3d6eafffffffffffffffffffffcc2ae
aeadadadaeb1aaa8abacb3b6b7babbbbb9b9bbbbbcb8acaeb8bbc2c5c2c7
d0c0c0c1c2c4c4c1c2c2c9c5c5c5d1d2c8b7b7b5b4b3b2b0b1aeaeaeaeb4
b4aeafadaea9a8a7a7a7a7a7a19c8c8a867e7c7c7c736a6a6a6a6a6a6a6a
6a6a6a6a6a6a6a6b6e7073767676767676767677797c7d7e7f7f7f7f7878
756e6e6e6b69696968676767676767676363636363636363636363636363
dbdbdadadadadadadadadadadadadadadadadadad8d8d8d8d8d8d8e2ebeb
ebebebebebebebebebebebebebebebeedddadadadadadadadbdbdbdcdcdd
dedfdfdfdfe0e0e0e0e1e2e8e9e9e9e9eaeaeaebeff3fffffffffffff6e7
e7e7e9efecebe9e8e8e7e7e7e7e7e6e6e6e6e6e7e7e7e7e7e6e2e2e2e2e2
e2e2e2e2e2e2e3e3e3e3e3e3e5e6e6e6e6e6e5e6e6e6e7e7e7e7e5e6e5e5
e5e5e5e5e5e4e3e2e2e2e2e2e2e2e2e2e2e2e0dddadad7d6d6c1955c433c
3b3437363a3b392f363130333236353c4851667a9bf8ffffffffffffc796
959795959595949495959a9d9f9f9d9d9d9d9d9d9d938c8c91adb4b4b0b3
bdacababaeaeae9e9191a5b4b5b9bec6c0b6b4adabababacaeaca8a8a8a8
a8a7a7a7a7a7a7a7a69e9d95908d867f7d7c7c776e6a6a6a6a6a6a6a6a6a
6a6a6a6a6a6c72757676767676767676767a7e7f7f7f7f7f7a746c6c6969
696966666562626262616161616161616161616161616161616161616161
dad9d7d6d5d5d5d5d5d5d4d7d7d8d9d8d7d7d5d5d5d5d5d5d5d5d5e1ebeb
ebebebebebebebebebebebebebebebedd5d4d4d7dadadbdbdbdcdcdcdddd
dddedfdfdfe0e0e0e1e1e3e8e9e9e9eaeaeaeaebf2f4fffffffffffff6e7
eaeeeae6e6e6e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e2e2e2e2e2
e2e2e2e2e2e2e3e3e3e3e3e3e6e6e6e6e6e6e6e6e6e6e6e6e6e5e1e1e4e5
e5e3e0dfdfdfdfe0deded9d8d8d8d6d6d0d0cfcfcfc9bd9b653f3c3b3935
323338373b3332373a343934383839373b3c3c3c53eefffffefbf9ffc47d
7d7d7d7d7d7d7d7d7d7d828790969291807d868787888686868c94abaead
ac8e87878f9494898686868ea7adaaa499979899999fa0a09b979a9c9a9c
9c9c9c9c978f8f8f8f8c8a8a89887f7b7b736e6a6a6a6a6a6a6a6a6a6a6a
6a6a6a6d72757676767676767676777b7f7f7f7f7f7b736a696969686865
636161616161616161616161616161616161616161616161616161616161
d5d5d5d3d3d3d3d2d2d2d3d3d3d3d3d3d3d4d4d4d4d2d2cecececedeebeb
ebebebebebebebebebebebebebebebe8d4d5d7dadbdbdcdcdddddedededf
dfdfdfe0e0e0e1e1e1e2e3e9eaeaeaeaeaeaeaebf2f5fffffffffffff7ef
eae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e6e6e6e6e6e5e5e2e2e2e2e2
e2e2e2e2e2e2e3e3e3e3e3e3e3e3e3dcdbdad9d9d9d9d9d9d7d5dcdcdddd
dcd9d2d0d0d0d0d0d0d0cfcecececdc9c4c2bbb29b67403c363b37343835
343733373b343a313b3533393b3c3c3c3c3c3c3c53eefcf5ece4effbda7a
7f85858585857c7c7c7c7e808d948e8b858585858582818181848e9caea2
9a877f828585857f7d7d7d8b8f9d9393937c7f8585858c90908e8a888888
8786868686868687857e7e7f7d7b746c6a6a6a6a6a6a6a6a6a6a6a6a6a6a
6a6c727676767676767676777a7d7f7f7f7f7f7b70696969696865626161
616161616161616161616161616161616161616161616161616161616161
cdcdcdcacacacacacacacacacacacacacacdcfcecdcacacacacacadcebeb
ebebebebebebebebebebebebebebebefd8dadbdbdcdcdededfdfdfdfdfdf
dfe0e0e0e0e1e1e1e1e1e3e9eaeaeaeaeaeaeaecf2f5fffffffffffffbe9
e7e6e6e6e6e6e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e2e2e2e2e2
e2e2e2e2e2e2e3e3e3e3e3e3d9d6d6d6d3d2d1d1d1d1d1d1d0d0d2d3d3d3
d3d3d0d0d0d0cbcbc7c1c1c0beb4b4b1ac946b4b3a3538372f35312f3637
37383532322f35383b343b3c3c3c3c3c3c3c3c3c49dde8e4e4e4e4f7dc78
7f84847e7b7b77777779888b9599978f8684848587827c7c78888f92a89c
998c8287878787716e6e778e877e9293887a7a7c7a7a7c7d7c7c7c7c7c7c
7a75757575727276777677716f6f6a6a6a6a6a6a6a6a6a6a6a6a6a6a6b6d
727676767676767676787d7f7f7f7f7f7b766f6969696968656261616161
616161616161616161616161616161616161616161616161616161616161
cacacacacacacacacacacacacacacacacacacacacacacacacacacadcebeb
ebebebebebebebebebebebebebebebf2dadbdbdcdcdddedfdfdfdfdfdfdf
e0e0e0e1e2e2e3e3e3e3e4e9eaeaeaeaeaeaecedf2f9fffffffffffff6e6
e6e6e6e6e6e6e6e6e6e6e5e5e6e6e6e6e6e6e6e6e6e6e6e6e6e2e2e2e2e2
e2e2e1e0dedfe2e3e3e3e3e3d6d1d1d0d0d0cfcfcfcfcecacaccd0d0d0d0
d0d0d0d0d0d0cdc9c1b0aeaeaead8f6c503d3c34312e31382e2f34322d30
35302e342e2e37393b3c3c3c3c3c3c3c3c3c3c3c45d2e4e4e4e4e4efdc76
777d7b7a7a7c76767676898d99999997807e7e7e7f776e6e718d8e8d8f92
958284827f7f7d6f6e6e7a8e8a7a878d867f7b7a7a7d768588888883827f
796a6a6a70736f6f6f6c6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6e717476
767676767676787d7e7f7f7f7f7c776d6a69696969666362616161616161
616161616161616161616161616161616161616161616161616161656767
cacacacacac8c7c7c5c5c5c5c5c5c5c5c5c5c5c6c7c9cacacacacae1ebeb
ebebebebebebebebebebebebebebebf2dbdcdddddedfdfdfdfdfdfdfdfe0
e0e1e1e2e3e3e3e3e3e3e5e9ebeaeaeaeaeaecedf2f9fffffffffffffae9
e5e6e5e5e5e5e5e5e5e5e6e6e6e6e6e7e7e7e7e6e6e6e6e6e6e2e2e2e2e2
e2e2dedcdcdcdfe3e3e3e3e2d5d0d0cfcfcfcfcfcfcbc9c9c9c9d0d0d0d0
d0d0d0d0d0d0d0cfcbc1b3a27e513e3c3c3c3c3b3b373a3a3b3430362b34
37253633393b3c3c3c3c3c3c3c3c3c3c3c3c3c373dd0d6cec8d2e4efdd7e
7f7f7f7f7f7f7c7a7a7a84898d9292907f7f7f7f7f777373778f8e8d8d94
98827f7f7f7f7c737373838d8d84838786817f7f7f7f7e807c857c7c817b
75757570757676797b767575756f6a6a6a6a6a6a6a6a7070737576767676
767676777a7e7f7f7f7f79746e6a69696968666462616161616161616161
616161616161616161616161616161616262676969757878787d81828282
c7c7c7c6c5c5c5c5c5c5c5c5c5c5c5c6c6c6c6c7c6c5c5c5c6c7cae3ebeb
ebebebebebebebebebebebebebecf9fbdedfdfdfdfdfdfdfdfdfdfdfe0e0
e1e1e2e2e2e2e2e2e2e2e4e9ebeaeaeaeaeaecedf2f7fffffffffffff6ec
e7e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e2e2e2e2e2
e2e1dcdcdcdcdce1e3e3e3e2d3d0cccbcbcbcbc9c9c8c7c8c7c7d0d0d0d0
d0d0d0cfcfd0d0d0d0cf8d26292e3c3e3e3e3c3c3c3c3c3c3c3c3c3c3c3c
3a393c3c3c3c3c3c3c3c3c3c3c3c3c3c3a3a323433b7c6c6c6c6e2efde7f
7f7f818686867f7f7f7f858b8b8b8b897f7f7f7f7f797474748c938d8d9c
a285808080807e747373768d8b7d82867d7f7f7f84817f7f7f7f7f7e7d7a
767676767676767e8a89817b79706c6c6c6c6f7276767677777777777777
77797e7f7f7f7f7d75726c6c6c6c6a686565656565656565656565656565
65656564656565656565666666666b6d777b828484858686868686868686
c5c5c5c5c5c5c5c5c5c5c5c5c6c7c9cacacacacac7c6c6c7c8c9cae3ebeb
ebebebebebebebebebebebeff6fdfffbdfdfdfdfdfdfdfdfdfdfdfdfe0e0
e1e1e1e1e1e1e1e1e2e2e4e9ebeaeaeaeaeaecedf2f9fffffffffffff6ea
e9e5e6e6e6e6e6e7e7e7e7e7e7e7e6e6e6e6e6e5e6e6e6e6e6e2e2e2e2e2
e2e1dedcdcdcdce1e3e3e3e2d3cfc9c9c9c9c9c8c6c5c5c5c6c8d0d0d0d0
cfcdcbc9c7cdcfd0d0d0891b1b314a4a4a494646464240403e3c3c3c3c3c
3c3c3c3c3c3c3c3c3c3c3c3c3c3c38322c2f2c2c39b7c6c6c6c6e2efde7f
7f7f818384887f7f7f7f868b8b8b8b8a817f7f7f7f7b7473728f928c8e92
8c82808080807f716f71758a8a7b888c80818583848a878787827f7f7e76
767676767676767b8a8a8a8a8a83898c8e8e8e8a84817f7e7f838382827f
7f7f7f7f7f7f7f8080807e8284848483828383848485858383827f7f8080
80807f7c8084858585868889898989898f979797979b9d9d9d9d9d9d9d9d
c5c5c5c5c5c5c5c5c5c7c5c6c6c6c6c7cacacacacacacacacacbd0e3ebeb
ebebebebebebebebebf0fafffffffffbdfdfdfdfdfdfdfdfdfdfe0e0e0e0
e1e1e1e2e2e2e2e3e3e3e5e9ebeaeaeaeaeaecedf2f9fffffffffffff8ee
e5e5e6e6e6e6e6e6e6e6e6e6e6e6e6e5e5e6e6e6e6e6e6e6e6e2e2e2e2e2
e2e1dddcdcdcdce1e3e3e3e1d3cdc9c9c9c9c9c6c5c6c5c6c6c8d0ceccca
c9c6bebcb3c3c9cfd0d0831b20576c6a675a5c574f4c4a4a484747474341
3c3c3c3c3c3c3c3c3c3c3c3c36332d282c242a2b35b7c6c6c6c6e2efdd7e
7e7f7f7f7f807f7f7f7f878787878a8b808080807f7b706f718186889094
9584808080807d6f6f6f7782867b88898989868987878a88827f7f7f8274
7676767676767676888a8a8a8a8a90949899908b8b898a817f7f807f807f
7f7f7f7f7f8080807f7d7d8683838383858889898884807e7e7e7e7d7d7d
7d7e7f808589898989898c90959999999d9d9d9d9d9d9d9d9d9d9d9d9d9d
c5c5c5c5c5c5c5c5c7c7c8c7c8c9c9cacacacacacacacacacbd3d4e3ebeb
ebebebebebebebf5fcfefffffffffffbdfdfdfdfdfdfdfdfdfdfe0e0e0e1
e1e2e2e2e2e3e3e3e3e4e6eaebeaeaeaebedededf2f9fffffffffdf1e9e7
e6e6e7e7e6e6e6e6e6e6e6e6e6e5e5e5e5e6e6e6e6e7e7e7e6e2e2e2e2e2
e2dedcdcdcdcdcdfe3e3e3e1d3cfceccccc9c9c9c7c7c7c7c7c7c8c7c0bb
b4b1aeaeaeb8bbc6c8cb7e1b346c656567666867646e6f606462574e4a4a
3c3c3c3c3c3c3c3c3c3c38363629282b332a2a333cb7c6c6c6c6e2ebdd7c
7c7d7e7f80808080807f807f808a8f8e80807f80807d7676767982879196
9a857f7f7f7f7e6f6f6f788286818c8e868580807f7f80807f7f7f7f857b
767a777676767676888a8a8a8a8b919597928b8b8b87877f7f7f7f7f7f7f
7f7f7f7f7f8080807d7e8482818180828589898686818080807f7d7d7d7e
818486898989898989909a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
c5c5c5c5c7c8c9cacacacacacacacbd0d0d0cfd0d0d0cfd2d4d4d6e9ebeb
ebebebebebebfefffffffffffffffffbdfdfdfdfdfdfdfdfdfdfe0e0e1e2
e2e2e2e2e2e3e3e3e3e4e8ebeceaebecedededeef2fafdfaf4ebe3e2e5e6
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e8e8e8e8e7e3e2e2e1e0
dedcdcdcdcdcdcdde0e3e3e2d3cfcecbcbc8c6c6c6c6c4c3c0c0b5aeaeae
aeaeaeaeaeaeaeaeb0b8761b40666565656565656565656566666567766b
3c3c3c3c3c3c3c3a33302f2d342a292c312d26313ab7c6c6c6c6e2eadd7e
817e7e7e7e7e7c7c7c7d8181818a908e7e7d7d7d7d7e7777777e8b899096
9a8c80808080796f6f717b8287858c8c807f8080807f7f7f82828082857c
7c7f8b8782828280898a8a8a8a8e92918b8b8a878a8a897f7f7f7f7f7f7f
7f7f7f7f7f808080838787838181838086807e80828183837e7e7e7f8184
8889898989898990999d9d9d9d9d9d9d9d9d9d9d9d9d9e9e9d9d9da9adad
c6c7c9cacacbcdd1d1d1d1d1d2d4d4d4d5d4d5d5d5d5d5d5d7d9dae9ebeb
ebebebebebf2fffffffffffffffffffbdfdfdfdfdfdfdfdfe0e0e0e1e1e1
e2e2e2e2e2e2e3e3e4e5e9ecededededededeff0f2eee8e2e2e2e2e2e5e5
e5e5e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e6e1e1dfdddc
dcdcdcdcdbdcdcdcdcdee2e0cec9c7c6c5c5c3c3c1c1c1c0beb9aeaeaeae
aeaeaeadadadaeaeaeae731b5977746a6a6965656565656565656565656f
3c3c3c3c3c3c36282e2927292d2e293136302b2f37b7c6c6c6c6e2eadf83
8381818181817f7d7d7f8888888a8a8a858484838482777777848a919598
9b8a808080807a706f737b8287878c86818082868984838384838785807c
7c858d8d8d8d8d8a83838383838383828383817f7f7f7f7f80807f7f7f7f
80807f7f818080808688878683838589898580818382807e7e7e7e828389
8989898989898f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9fa8a19d9d9ea3a3a3
cacacdcdd2d4d5d6d6d6d6d5d5d4d5d5d6d6d9d9d9dbdbdbdbdbdbefebeb
ebebeef0f0fdfffffffffffffffffffbdfdfdfdfdfdfe0e0e0e0e0e1e1e1
e1e2e2e2e3e3e3e4e5e6eaedededf1eef0ebe8e4e2e2e2e2e2e2e2e2e5e7
e7e7e7e6e6e6e6e5e5e5e6e6e6e6e7e7e7e7e7e7e7e3e1ded7dbdcdcdcdc
dbd9d5d3d2dadcdcdcdcdddfcbc4c2c2c1c0c1bfbfbdbbb9b9b5aeaeaeac
aba9a9a7a3a7a9a8a7a86c1b597c7c7e7f7e787b7b6e6e6e68656562656e
3c3c3c3c3c3522302c2c2c2e2c222c2d2e2d2b3330b7c6c6c6c6e2eadf83
838282838284818181818485878889898482838383837e7a7e868a8e9899
9c8a858581817d7775767d8389878e827f808080807f7f7f7f7f7f7f8381
81878b8d8d8d8d897f7f7f7f7f828282827f7f7f7f7f7f7f7f7f7f7f7f7f
807f7f808080808084888483838386898986818282807f7e7e7e81838389
8989898989898c9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
d3d3d6d7d7d9d9dadadadad9d9dad9dadbdbdcddddddddddddddddf8f4fb
fbfbfdfffffffffffffffffffffffffbe1e0e0e0e0e0e0e0e1e1e2e2e3e3
e3e3e3e3e4e5e5e6e6e7edf2efebe7e4e2e2e2e2e2e2e2e2e2e2e2e2e6e7
e7e7e7e6e6e6e5e5e5e6e6e6e6e6e6e3e0dfdad9d8d6d5d2d1dadcd7d6d2
d1d0d0d0d0d0d2d7dbdcdcdcc7bfbdbbbbbabbb6b6b6b3b3adaaaca8a8a7
9f9b908e878f8f95979a661b587f7e7c807d7c7d7b787c7e7a7c7d757074
3c3c3c3c3b2e302b2a2635282d29342f332c302c34b7c6c6c6c6e2eadf83
827e7e7e817f7d7c7c7e8282858687898481828282838282838888859092
9c89828282817b7777777d848987928f80807f7f7f7f7f80808080878383
8386838585898a837f7f7f7f7f888b8b8b898684807f7f7f7f7f7f7f7f7f
7f7f7f8080807c7c80888782838489898987848582827e7e7e7e81828286
88898989898989959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9da0a3a29da0a3
dadadbdbdbdbdbdbdbdbdcdcdcdddddddedededfdfdfdfdfdfdfdfffffff
fffffffffffffffffffffffffffffffbe1e1e1e1e1e1e1e1e2e2e3e3e3e4
e4e5e5e5e6e6e7eeeceee8e3e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e5e6
e6e6e6e6e5e5e4e1e1dfdddeded7d3d5d5d1d1d2d2d1d1d1d1d0d0d0d0d0
d0d0d0d0d0d0d0d0d0d3d7dac1bbbab9b5b3b2aeaca5a0a09d9f9b98918a
817d777776777f8e999a631b5982817979807c7d7c7d7c7979787c7b7571
3c3c3c3c392a2f2f272d2f2a2a252f322633282b30b7c6c6c6c6e1eadf83
817d7d7d7e7e7d7c7b7d808181838a8a827f7f807f828282828785848380
88827e7e7e7f7977777779808183838b81808080808080807f8080848181
898c8c8c8a878a877f7f7f7f7f80898b8b8b8b8b8a8a87817f7f7f80807f
7f7f8080807e7c7c8085818183838589898989898784837e7e7d7d7e7e81
83878989898989939d9e9e9d9d9d9d9d9d9d9d9d9d9d9da4a8adadacacad
dcdcdcdcdcdcdcdddedededfdfdfdfdfdfdfdfdfdfdfe0e0e0e0e0ffffff
fffffffffffffffffffffffffffffffbe3e2e2e2e2e2e3e3e3e3e4e4e5e5
e6e6e8ebededebe7e7e7e4e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e5e5
e2e0ded9d6d5d2d2d5d4d2d5d3d1d1d0d0cfcecdcdcccdcbcbcfd0d0d0d0
d0cdcbc7c3ced0d0d0d0d0d0bfb5b5b1afaba39f9e9c9a97948c807e7676
7676767676777c929a9a651c607e7d7c7a79797b767573757375706f6c68
3c3c3c3c3b27353328292a28303034322d2f2f3739b7c6c6c6c6ddeadf83
817e7e7e7e7e7978787b7f8181818a897e7e7e7e7e808282828386848180
87817e7e7e7e82827d7a7d847a8284878684838081808080808083858181
828b8b8b8c8c8c8685858581808084888989898989868280808082817f7f
7f808080807c7c7c838081818283838989898989898987847e7e7d7d7d7e
818388898989898a939c9d9e9d9d9d9d9d9d9d9d9d9da0acadadadadadad
dededededfdfdfdfe0e0e0e0e0e0e0e0e0e0e1e1e1e1e1e1e1e1e1ffffff
fffffffffffffffffffffffffffffff6e4e4e4e4e4e4e4e4e5e5e6e7e9eb
eeebece8e7e7e7e7e7e7e4e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e0d7
d3d4d2d1d1d0d0d0d0d0cfd0d0cfcfccc8c8c8c7c6c6c6c5c5ced0cbc8c3
b9b3aeaeb1bec3c6cad0d0ceb7aea9a29f9d9b9b99999993877e76767676
76767676797e7f848f92621c617d7c7b72706f6f6f6f6f6f6f6f6e6d6968
3c3c3c3c36222b272f2f2c272c2e2d302c262a2a3ab7c6c6c6c6e2eadf83
817e7f7f7f7f7d7c7c7e828282848a897f7c7d7e7e7e7a7a7d7d86848180
87817d7d7d7f8282827b82847a8487828381818082808184808283828282
8383838386868a7f7f7f7f7f7f7f7f8080808080807f7f7f7f80858a8080
8080808081828485878481818383848989898989898987878582807e7d80
828588898989898d8f979d9d9d9d9d9d9e9da09e9d9d9da1a3a3a3a4a9ab
e0e0e0e1e1e1e1e2e2e2e2e1e1e1e1e2e2e2e3e3e3e3e3e3e2e2e2ffffff
fffffffffffffffffffffffffffffff0e5e5e5e5e6e6e6e7eceaecebe9e7
e6e6e6e7e7e7e7e7e7e7e5e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2dad1
d0cecdcdcdcfcdcecfcecccccbc9c8c7c6c6c6c6c6c5c4c4c3b8b5b1aeae
aeaeaeaeaeaeaeaeb0b5b6baa6a09e9d9b99999999978e817c7b76767676
76777b7e7f7f7f7f80865f1c617a76706f6f6f6f6f6f6f6f6f6f6d6d6968
3c3c3c3c372a2c28302c2a2f26273234302d302638b7c6c6c6c6e2eadf83
837e7f7f7f8180818181838787888a8a837f7f7f7f817b7a777884848180
87817c7d7d7e8282827b82817b8487858786858483818181818486818182
828283838384837f7f80808080808080808080808080808082848a8b8080
808082858788888883818283838788898989898989898787878787837e7f
82858989898989959f9d9f9e9d9d9d9d9e9ea2a59e9d9d9d9d9d9d9d9d9f
e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3ffffff
fffffffffffffffffffffffffffffff1e6e6e6e9ecececebe9e7e6e6e6e6
e6e7e7e7e7e7e8e8e8e8e5e2e2e2e2e2e1dfdfdee1e2e2e2e2e2e2e2d6ca
c8c7c6c6c6c7c6c7c7c7c6c6c6c6c6c5c3c3c2c2c2c1c1c1bdafaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeada09c9a99999999988f807d7c7d7c76767679
7d7e7f7f7f7f7f7d80875e1c5f6f6f6f6f6f6f6f6f6f6f6f6e6d6f6e6968
3c3c3c3c36302a2d2e2e262a282a2e2c2f2e2e333bb7c6c6c6c6e2eadf83
837f818282828081818184868887888a8481818383828282817f88848180
87807c7c7d7f797b7d797d7c7e8487858787878889868683838185848483
8484828181868a82818182807f80808080808080808080808482838a8080
83848788888888868281848787878787898989898989898787867f7f7e7e
7e8383878989898c969d9f9f9e9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
e3e4e4e4e4e5e4e4e3e3e3e3e4e4e4e5e5e5e5e5e5e5e5e5e5e5e6ffffff
fffffffffffffffffffffffffefdfcf4ebecebe8e6e6e6e6e6e6e6e6e6e6
e7e7e7e7e8e8e8e8e8e8e4e2e1e1e0dedcdcdbdbdee1e2e2e2e2e2e2d1c6
c5c6c6c6c6c6c6c6c5c3c3c3c1c0c0c0c0c0c0c0c1c1c1c1b9aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaead9d99999999968f807c7c7c7c86797676797f
7f7f7f7f7f7f7d7c85845d1c5e6f6f6f6f6f6f6f6f6e6e6d6d6d6f6e6968
3c3c3c3c38332d2b3231272c2c2d262e342e2e2b3bb7c6c6c6c6e2eadf83
8383838486838081818183888887878a8483818082828282828487848480
87817e7e7e7f787777797d787e8487848687878787878889898886878787
87878686868682818484838383838787858587878787877a6476858a8484
8587878582828282838687898989888989898988878788898786817e7e7d
7d7e7f80838989898989929d9f9e9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e6e7e7e7e7e7e7e8e8e8e7ecffffff
fffffffffffdfcfbf9f6f2edebe7e3e5e6e6e6e6e6e6e6e6e6e6e6e6e6e7
e7e7e7e8e8e8e8e8e8e6e0dedddcdbd8d4d1d0d1dbdee1e2e2e2e2e2cfc5
c4c2c2c2c1c1c1c0c0c0c0c0c0c0c0c0c0c0c0c0c0bdbbb9b6aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeac9a96948f8d867d7c7c7c7c80827976767f7f
7f7f7f7f7f7f7c7d88845d1c5e6f6f6f6f6e6e6f6e6f6f6f6e6d6d6d6768
3c3c3c3c382e2a2c2e292f2f2c2e2d3129312b3337b7c6c6c6c6e2eadd83
848989898989828181818389898787898483838383828282828788848180
87827f7f7e7f787777797d757e8487807e80868787878787878887878787
878787878786848483828282818182818282828282827f66616a80828282
828382828282838383868989898989898989898888888989878787807e7e
7e7e7f828485898989898989929b9c9f9f9f9e9e9e9e9e9d9d9d9d9d9d9d
e5e5e6e9eae8e8ebebebeaeaeaeaeaeae9e9e9e9e9e9e9e9e9eaecefefef
efefefeae9e8e5e5e2e2e2e2e2e3e5e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7
e7e7e8e8e8e8e4e0dddbdbd9d6d3d0d0d0d0d0d0d4dcdfe2e2e2e2e2c8c0
c0c0c0c0c0c0c0c0c0c0c0c0c0bebebebbbbbbbbbab9b9b9b7aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeac97918a8a837c7c7c7c7c7c83857676767e7f
7f7f7f7f7f7f7c7c86845d1c5e6f6f6f6f6e6e6e6f6f6f6f6f6e6d6e6468
3c3c3c3c39342f2826242f2c34312f2d2a2b2d2a31b7c6c6c6c6e2e9d383
8589898989898281818184888987878a8483868583828282828788848880
878487878584787777797d757e84847e7e7f858787858585858487878787
878787878787898988888888888685858585858583826f61646e72828383
838384858585858588888989898989898989898989888583828181807e7e
7e7e8082858788888989898989898b8f94999d9f9f9f9f9d9d9d9d9d9d9d
eeeaeae8e9e7e7e6e5e5e5e5e5e5e5e6e6e6e6e6e7e7e7e7e7e7e6e3e2e2
e2e2e2e2e2e2e2e2e2e2e3e4e5e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7
e7e7e7e2dedcd9d6d4d2d1d0d0d0d0d0d0d0d0d0d0d8dde1e2e2e2e2c7c0
c0c0c0c0c0c0c0c0bfbdbdbbbbb9b9b9b8b6b6b5b5b3b3b6b4aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeac97918c8a877e7c7c7c7c7c7e877b7676797e
7f7f7f7f7f7f7f7c8186531c5f6e6f6f6e6d6d6e6e6e6f6f6f6f6d6e6468
3c3c3c3c3824353329342d2c2f2e2f2c29332b2933b7c6c6c6c6d6cda483
8589898989898281818189898988878a8788898988848282828788848380
87858787867f777779797f757e84837d7e7e7e7f7f7e7e7e7e8387878787
878787878787868686888986868686898985838380766e6c6e6f6f838788
8885868686868684838383838689898989898989868282838180807f7d7d
7d7d7e7d7e7f8281838586868586888989898c8d8d939696999d9d9d9d9d
e6e6e6e6e6e6e6e5e5e5e5e5e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e6e5
e5e4e4e3e4e4e4e5e5e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e6e3
dfdad4d5d2d1d1d0cecccfd0d0d0d0d0cdbfb5bbd0d2dcdee2e2e2e2c7bd
bebdbdbdbbbabababab9b9b9b9b9b7b4b5b2b2b2b2b2b2b2b1aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeac9a94938f8c8b867d7c7c7c7c7e7a76767677
7b7f7f7f7f7f7f7f7d863e1c5f6e6e6f6d6d6d6d6d6e6f6f6f6f6d6d6468
3c3c3c3c37232c2d2931312d28272a2d30332f3339b7c6c6c6c5a6969883
8589898989898281818188898988878a8989898989848282828788848480
878689878382827c7a797f748087837b7d7e7e7e7e7e7e7e7e8587878787
87878787878180808081818081838282828181827d6f6e6e6f6f6f808383
828282818181828282828282828283858585858582817f80827f7d7d7d7d
7d7d7d7b7b7e7e7e7e7f8283838386888989898989898989898a8c8d8e93
e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e8e7e7e7e7e7e7e6e6e6e6e7e7
e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e5e0dcd5
d2d1d1d1d0cfcccac9c7ced0d0d0ccbeafaeaebad0d0d9dde1e2e2e2c1b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b6b2b1aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeac9b9995949494928e847e7d7c7c7a76767676
76777b7f7f7f7f7f80843e1c5e6e6e6e6d6d6d6d6d6d6e6f6f6e6d6e6468
3c3c3c3c34332f2d30292a262d29322e2e2f252533b7c6bfaa8d898c9383
8484878989898281818183888987878a8684868686838282828788848884
87868989868382827f7982788087857c7b7b7c7d7e7e7e7e7e8687878787
87878787867d7d7d7d7d7d7d7d7d8080817f7f7d686161646f6f6f7f807f
7d7d7d7d7d7d7f7f808282828282817e7e7e818280807e7f807f807e7e7e
7e7c7d7e7e7e7e7e7e7e8083858588888888888989898989898989898989
e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e5e0d8d6d4d1
d1d0d0cfcccac9c8c6c5cdd0d0c7b1aeaeaeaeb2cdd0d6dce1e2e2dfbfb9
b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b7b5aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeac9d9997969495979695918a817e7b77767676
767676777a7f7f7f858b3d1c5e6e6e6e6d6d6d6d6d6d6d6e6e6d6d6d6468
3c3c3c3c372f2e31322e2e2b2e2e312a2d2f242b35b0a8868689898a8a83
8382838689898281818183868987878a8985838383828282828788848386
8786888888838282817c84798087857d7c7b7b7b7d7e7e7e808385858787
87878787847c7b7b7c7d7d7c7d7d7d7e7e7e7d6f616161626b6f6f7d7d7d
7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7e7d7e7e828584817f
7e7e7e7e7e7e7e7e7e7e7f82838587878787878887888789898989898989
e6e6e6e5e5e6e6e6e6e6e6e6e6e6e6e6e6e6e6e5e5e5e5e5e5e6e6e6e6e6
e6e6e6e6e6e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e5dfd7d5d3d1d1d0
d0d0cdcac9c9c7c5c5c6cad0cdb1aeaeaeaeaeaecdd0d6dce1ded2c1bab9
b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b7aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaca09d9b9a98989999999998928d807c7b7878
76767676767b7c83817b3a1c5e6e6d6d6d6d6d6d6d6d6d6d6d6d6d6a6268
3c3c3c3c33292d302c2b2f222e2e322f2d2d263157898383838789898883
8383848789898281818183878887878a8989868383828282828788848382
87848383848382827f7c84798087857e7d7d7d7e7e7e7e7e818281838787
878787877f79787878797b7c7b7b7c7d7e7e746261616161656f6f7d7e7e
7e7e7e7e7d7c7c7c7c7c7b7b7b7b7b7c7c7c7c7c7c7c7b7c7e7e7f80807f
7e7e7e7e7e7e7e7e7e7e7e7e808181838686868787878787888989898989
e6e5e5e5e5e6e6e6e6e6e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e6e6e6e6e5d8d3d2d2d1d0d0d0
d0ccc9c9c9c9c6c5c6c6c6c7c3b8b5aeaeaeaebbcdcccdcac4bdbab9bcbd
bdbfc0bdbdbdbcbdbfbfbfbfbfbfbdbcbcbcbcbcb9b9b9b9b8b2aeaeaeae
aeaeaeaeaeaeaeaeaeaeafa69f9f9f9e9d9b9b99999995948d8a867d7c7c
7c7c7c7c7c7c81828781381c5e6e6d6d6d6d6d6d6d6d6d6d6d6d6d6d6268
3c3c3c3c382d302b23272e292d29272d29284c7685838383838386898583
8285838585858181818182888788878a8987838383828282828788848380
87837e7e7e8282827c7c7e798087807e7e7e7e7e8086817e828181848787
878787877c787878787878797b7b7e7e7e7f666161616161626c6f7e7e7e
7e7e7e7e7e7e7e7e7e7e7d7d7b7b7d7d7d7d7d7d7d7d7d7d7e7e7d7d7b7b
7b7b7c7d7e7e7e7e7e7e7e7e7e7e7e7c7d7e7e8081818284858585858483
e6e6e6e6e6e6e6e7e7e7e7e7e7e7e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7e8e8e8e7e7e7e7e7e7e7e6e6e6e6e5d8d7d7d1d1d1d1d0d0
d0cbcccccbccc9c8c7c6c6c6c6c6c4c1c1c1c1c1c0bfbfbfbfbfbfc1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1c0c0c0c0c0c0c0c0c0c0c0bec0bbb8b2b0
b0afafafafafb8b4b7bab6b5b0a9a5a1a0a09d9f9c9b999795918f8d8a83
827e7d7c7c7c7c7c7c81381c5e6360666a6c6d6e6d6d6d6d6d6d6f666268
3c3c3c3c3b2a292f23263333303a2d334f74868787848383868487878482
817e7e7e7e7f80818181848887878a8a8483838383828282828788848380
87827d7d7d7d7c7a7c7c7e788387807c7c7d7d7e7e7e7e7e838181858787
87878787787878787878797a7b7e7e7e7e81806761616161646e6f7e7e7e
7e7e7e7e7e7e7e7e7d7d7d7d7c7c7d7e807f84868787878683817f7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7d7c7b7b7c7d7d7d7c7c7c7c7c7f7e7d7e7e7e
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6d9d5d5d2d1d1d0d0d0d0
d0cfcfcfcfcecdc9c8c6c5c6c6c6c6c6c6c4c4c4c3c2c2c2c2c2c2c2c2c2
c2c2c2c1c1c1c1c1c1c1c1c1c1c1c1c1c0c0c0c0c0c0c0c0c0c0c0c0c0c0
c1bfbfbdbdbab9b9b9b9b9b9b7b5b3b2afb0aba6a29f9e9d9b9997969590
8d8c88847e7c7c7c7055261c5957525258595a6365666c6c6e6e62626268
3c3c3c3c382927302935323331344f758787878787898887888989888583
817d7c7c7b7c7c7f7e80828486898a8a837f7f7f7f818282828087848380
8784827e7f7977777b7c797883877b7b7b7a7b7c7d7e7e7d828182868787
87878785797979797a7b7b7c7e7e7e7e7e858781726461616b6f6f7e7e7e
7e7e7e7f807f7e7d7d7d7d7d7d7e7e838384888887878787878788868381
80818181817f7e7e7e7e7e7d7c7d7d7d7d7d7d7d7d7d7d7d7c7c7c7d7e7e
e6e6e6e6e6e7e7e7e7e8e8e8e8e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e6d6d2d1d0d0d0d0d0d0d0
d0d0cfcfcfcecbcac9c9c8c7c6c6c5c6c6c6c6c6c6c6c6c6c6c6c6c6c6c6
c6c6c5c5c5c5c5c5c5c5c5c5c5c5c5c4c3c1c1c1c4c5c3c0c0c0c0c0c0c0
c0c1c1c1c1c1bcbbb9b9b9b9b9b9b9b8b8b8b7b4b2adaaa09f9f9d9d9a98
9695918f8b82694e3633231c5352525252525252525357575e6160626268
3c3c3c3c382c28322b343539426882838686878787878989898989898f82
817e7b7a79797574767c808182828a8b827e7e7e7d818282827f86848380
8785857e7f797777787c767a8387807979797b7b7b7e7e7f828183878787
878787827c7b7b7b7b7b7b7b7c7e7e7e7c8587878781716a6e6f6f7d7e7d
7d7d7e80817e7e7e7e7e7e81828585858889888787878787878789898986
848383838383838382817f7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7c7c7e
e5e5e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e6e0d3d2d1d0d1d1d1d1d1
d1d1d1d0d0cfcfcfcecdcccececccacacacacac9cbcbcbcbcac8c7c7c7c7
c7c7c5c5c5c5c5c5c5c5c5c5c5c6c6c6c6c6c6c6c6c6c6c5c5c5c3c3c3c1
c1c1c1c1c1c1c1c1c0c0bcbcb9b9b9b9b9b9b9b9b9b8b3afaaa6a2a19f9e
9d9b9891744835333333231c4e52525252525252525252525252545e6268
3c3c3c3c3928302a2a323a637e8181818283848787878989898989899384
817e7b7a7978747171777f8181848a8a827e7e7e7e7e7979797984848180
87827e7e7f797777787a767e8387817c7b7b7b7b7b7c7d80818184878787
878787817e7e7e7d7c7b7b7b7b7c7e7e7f878787878787848383827e7e7d
7d7d7e7e7e7e7e7e80828384888989898888878787878889898989898989
8988878686838383838383817e7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7e
e5e6e6e6e6e6e6e6e7e7e7e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e7
e7e6e6e6e6e6e7e7e7e7e7e8e8e8e8e7e7e7e7e7e7dfd6d3d4d6d6d2d2d1
d1d1d1d1d1d1d0d0cfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcecbc9c9c9
c9c9c9c9c9c9cacccccccdcecccacacac9c7c6c5c6c6c6c6c6c6c6c6c6c6
c6c4c4c3c2c2c1c1c1c1c1c1c1c0bdbbbab9b9b9b9b9b9b7b5b2afaca9a3
a0956f3f353333333333231c4e5252525252525252525252525252576268
3c3c3c3c35312e3339667e818282828181818181848889898989898b9784
817e7d7c7c7c757271777f8081858a8a807e7e7e7d7e777777787e857c80
87817a7a7b777777797c767e8387817e7d7d7d7d7d7b7b84878786878787
8787877f7e7e7e7e7e7d7b7b7b7b7e7e85878787878787878787827e7e7e
7e8082828280808282828384898989898988888787878889898989898989
8989898989898987868383838282807e7d7d7d7d7d7b7c7c7c7c7c7b7d7e
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e6e6e6
e6e6e6e6e6e6e7e7e7e7e8e8e8e8e8e8e7e7e7e7e7e7e5e2d9d5d6d7d9d5
d4d1d1d1d1d1d0d0d0d0d0d0d1d1d1d1d1d1d0d0d0d0d0d0cfd0d0d0d0d0
d0d0d0cdcdcdcfcfcfcfcfcfcfcfcfcfcfcdcccccac9c7c7c7c6c6c5c5c5
c5c6c6c6c6c6c5c4c4c1c1c0c1c1c1c1c1bfbcbab9b9b9b9b9b9b6b3af96
683f333333333333333325224e5252525252525252525252525252546068
3c3c3c3c3a333b5d7d8281818181828383828181818583868889898c9a85
848483827f7f7977757a808181818a897f7e7e7e7e7e777777787d847c80
8780787876757777797c767e83857e7e7e7e7e7e7e7e7d85878787878787
8787867e7e7e7e7e7e7e7c7b7b7b7d80878787878787878787877d7b7d7e
7e7f828383838383837e8083838686888989898989898989898989898989
898884848587888989898886848383838382807e7e7e7e7e7e7e7e7e7e7e
e5e5e5e5e5e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e6e6e6e4e3dcdbd7
d5d4d4d2d2d1d1d0d0d0d1d1d1d1d1d2d3d1d1d1d1d1d1d1d1d0d0d0d0d0
d0d0d0d0d0d0d0d1d1d0d0d1d1d1d0cfcfcfcfcfcfcecdcbcac9c9c7c7c6
c5c6c5c6c6c6c6c6c6c6c6c4c2c0c0c1c1c1c0c0bebebcb9b9b9b6986437
333333333333333333333531433e434a4d4f525252525252525252525f68
3c3c3c3c465c7a82838580818181818182838282818a87858487898c9a87
8787878686817a79797b808181818a89807e80808081787777787d848180
87807b7b79777777797f767e83857e82848483807e7e7e85878787878787
8787837e8080807e7e7e7e7d7c7c7d83878787878787878787857e7c7d7e
7e7e7e828383838384828283838383848989898989898989898989898989
8989898988888786888989898987858383838382807e7e7e7e7e7e7e7e7e
e5e5e5e5e5e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e4
e3e3e3ddddddddddd8d5d5d5d5d5d5d6d7d5d5d5d5d4d2d1d1d1d1d1d1d1
d0d0d0d0d0d1d1d1d1d1d1d1d1d1d1d1d1d1d0d0d0d0cfcfcecdcdcccbc9
cac9c8c8c7c6c6c6c6c6c6c4c2c1c1c1c1c1c2c1c0c0bfbdb48f643d3333
33333333333333333333373341373736383a3b4145494d51525252525768
3c3c4561787c7e7f828382858181818181818283828d88888786878a9485
8787848281817b78787b818181818a8a8785878787867c777a7882848380
87827e7e7e777778797d747e86857e7e80807f7e7e7e7f87878787878787
87878484878787858582807e7e7e7e85878787878787878787817e7e7e7e
7e7e7e7e8486868789888888888888888989898989898989898989898989
8989898989898989898989898989898885838383837f7e7e7e7e7e7e7e7e
e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e6e6e6e6e7e7e7e7e6e6e6e6e6e6e5e5e5e5e5e6e6e6e6e6e6e6e6e6e6e6
e5e5e5e5e5e6e6e6e6e5e5e5e5e5e5e5e5e5e5e5e4e1dfdfdfdfdfdfdcd6
d6d6d3d2d2d2d3d6d6d5d6d9d9d7d3d1d1d1d1d1d0d0d0d0cfcfcfcfcfce
cfcecececec9c6c6c6c6c6c4c2c1bfbfbec0c1c1c1c0b5865844423c3333
3333333333333333333337334137373737373737363536373e42464b4b49
4261787c7c7c7c7d80818382828181818181818284878888888888889281
8282808181827d7d7a7c818181838a8a8687878787868281827c84848380
878586837e777778797d777e87857e7e7e7e7e7e7e7e8487878787878787
878786878787878787878786807e80868787878787878787877f7e7e7e7e
7e7e7e7e7f83858688898989898989898989898989898989898989898989
8989898989898989898989898989898989898886838280807f7e7e7e7e7e
e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e6e6e6e6e5e5e5e5e5e5e6e6e6e6e7e7e6e6e6e6e6e6
e6e6e6e6e6e6e7e7e7e7e7e8e8e7e7e7e7e7e7e6e6e6e6e6e5e5e5e5e5e5
e5e6e2e1ddd7d7dadadadadad8d1d1d1d1d1d1d0d0d0d0d0d0cfcfcfcfcf
cfcfcfcfcfcdc8c6c6c6c6c3c2c2c0bfc0c0c1c1c0bfa0836e564a383433
33333333333333333333373341373737373737373533333637373a3c4d5b
7c7c7c7c7c7c7c7c7c7e8183837d80818181818182868286888888878b81
8082817f81837d7e7e7f818181868a8a817f858787868282827c84848380
87827e7e7e777778797d777f87867f7e7e7e7e7e7e7e8587878787878787
878683828282828586878787878283878787878787878787857e7e7e7e7d
7c7c7c7e7e7f808383858686878989898989898989898989898989898989
898989898989898989898989898989898989888889888887858683818281
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8e8e8e8e8e7e7
e7e7e7e7e7e7e6e6e6e6e6e5e5e5e5e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e7e7e7e7e7e7e8e8e8e8e8e8e8e8e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e7e7e4dddadadadad9d4d1d1d1d1d1d0d0d0d0d0d0d0cfcecece
cdcecdcecfcec8c6c6c6c6c5c2c1c1c1c1c1c1c0bdb9b9b9b9b9af978270
54443a363333333333333733413737373737373734393f4b5d6472767675
7c7c7c7c7c7c7c7c7c7c7e8383827d8181818181818c8082878888888781
81818081807f7d7e7e7f81818386888a817e808383838282827d86848380
87827d7d7f7979797a7e778187867f7e7e7e7e7e7e7e8487878787878787
87857e7e7e7e7e7e7e808181818186878787878787878787817e7d7c7b7b
7b7b7b7b7d7e7e8182838383838485888989898989898989898989898989
898989898989898989898989898989898989898989898988888787878787
e8e8e7e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7
e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7
e7e7e7e7e8e8e8e8e8e8e8e8e7e7e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6
e6e6e7e7e7e7e7e6dbdadadadad8d4d3d1d1d1d1d0d0d0d0d0cfcecac9ca
c9c9c9c8c8c7c6c6c6c6c6c4c0c1c1c1c0bdbbbab9b9b9b7b7b5b2b2b2ab
a6a08f816a5d493d373337334137373738494a5e6672797c7c7c76767674
7c7c7c7c7c7c7c7c7c7c7d8183837e7f81818181818c8080838888888883
8181828080817b7a7e7f82828687878a8380817e7e7f8282827c84848380
87827d7d8182827e7b7f77838783807e7f7f7e7e7e828787878787878787
87847e7e7e7e7e7e7e7e7e7e7e80878787878787878787867f7c7b7b7b7b
7b7b7c7d7e7e7e7e7f828383838383838588898989898989898989898989
898989898989898989898989898989898988898989898989898888878787
e8e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e7e7e7e7e6dadadadadadadad9d8d7d3d1d1d1d0d0cecac9c9c9c9
c7c6c6c5c6c6c6c6c5c4c3c1c2c1c0bdbbb9b9b9b7b5b3b2b2b2b2b2afaa
a7a49f9f9f9f988e87715e4f4e505b6e717b7c7c7c7c7c7c7c7876767678
7c7c7c7c7c7c7c7c7c7c7c8083837e7d81818181818c8080818688888983
81818181807f7e7b797d83828687878a8581828282828282827d85848380
87827d7d8182827e7b7f79838782827f7e7e7e807f838787878787878787
8783818181817f7e7e7e7e7e7e83878787878787878787857b7b7b7b7b7b
7b7c7e7e7e7e7e7f86878684848383838383858889898989898989898989
898989898989898989898988898989898983868989898989898989888684
e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e7e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e6e7e7e0dadadadadadadadadadad8d1d1d0d0cfcac9c9c9c9c7
c5c5c5c6c6c6c6c4c2c1c1c1c0bebdbbb9b9b9b9b9b7b6b4b2b2b2b2aea7
a49f9f9f9f9e9a999999949189837c7c7c7c7c7c7c7c7c7c7c7676767676
7c7c7c7c7c7c7c7c7c7c7c7d8283817d81818181818c8080808388888981
81818181818180807b7c82828687878a8781807e7e808282828486848380
8784807f8282827e7d7f7d838781807f7f7e7e7e81858787878787878787
878787878787837f7e7e7e7e7e86878787878787878787807b7b7b7b7b7c
7c7d7e7e7e7e7e7e7f8082847f8080828383838385878989898989898989
898989898989898989898989898989898686888989898989888788898885
e7e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e5e5e5e5e5e5e5e6e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e5e5e5e5e6e6e6e6e6e6
e6e6e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e6e5ddd6d9dadadadadadadadad9d3d1d1d0cfcac9c9c9c9c7c5
c5c5c6c5c2c2c2c1c1c1c0bebebebdb9b9b9b9b9b9b9b8b6b2b2b2b1a8a3
9f9f9f9f9f9b9999999995938a7e7c7c7c7c7c7c7c7c7c7c79767676767f
7c7c7c7c7c7c7c7c7c7c7d7f8383817d81818181818c808080838889887e
7f80818181817e7f7f7f81838587878a877f7e7e7e7f8282828486848380
878581818282827e807f7d83878481818181818181868787878787878787
8683838381818181817f7e7e80868787878787878787867e7e7e7e7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7d7d7d7d7d7f7f8185878888888889
898989898888888888888888898989898989898989898989888887878788
e8e8e8e8e7e7e7e7e6e6e6e6e6e6e5e5e5e5e5e5e6e6e6e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e5e5e5e5e5e5e5e5e6e6e6e6e7e7
e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e5e0d8d2d2d4d8d9dadadadadad7d3d1d0d0cfcbc9c9c9c9c6c5c5
c5c6c6c6c6c1c1c1c1c1c0c0c1c2c0b9b9b9b9b9b9b9b9b4b2b2b1a9a5a0
9f9f9f9f9b99999999999593847c7c7c7c7c7c7c7c7c7c7c77767676767d
7c7c7c7c7c7c7c7c7c7c7d7f83837e7d818181818185808080838889867c
7e7f7f8081817d7d7f8082848587878a8782807e7e7f8282828486848380
878581818282827e807f7d83878381818181818183878787878787878787
86828281818180808180818084878787878787878787867f838484848484
8480807f7e7e7e7e7e7e7e7e7e7e7b7b7c7b7b7b7d7d7d7d808283858888
878788878787878787878787878788898889898988888988878788888887
e8e8e8e8e7e7e7e6e6e6e6e6e6e5e5e5e6e6e6e6e6e6e6e7e7e7e7e6e6e6
e6e5e5e5e5e5e6e6e6e6e6e6e6e6e6e6e5e5e5e5e5e6e6e6e6e7e7e7e7e7
e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
e6e5e0d8d3d2d3d2d1d1d3d7d9dad7d3d2d0d0cfcfcbc9c9c9c7c6c5c5c5
c6c6c6c6c2c1c1c1c1c1c1c1c0c0bbb9b9b9b9b9b9b9b9b5b2b1a9a7a09f
9f9f9f9b9999999999999593847c7c7c7c7c7c7c7c7c7c7a76767676767d
7c7c7c7c7c7c7c7c7c7c7c8183837d7f818181818186808080868892827c
7d7f7f7f81817e7c7f7f81838489888a878182807e7f8282828486848380
878583828282827c807f7d86878482828282818182878787878787878787
837f7e7e7e7e7e7e7f7e8281858787878787878787878181868787878787
878787827e7e7e7e7e7e7e7e7e7e7c7c7c7a79797a7c7c7c7c7e7f808285
878787878787878787878787878787878789888683838483838487878686
ede8e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e7e7e6e6e6e6e6e6e6e6e6e6e7e7e7e7e8e8e8e8
e8e8e7e7e7e7e7e6e6e6e6e6e6e6e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6
e1d7d3d2d2d2d2d1d1d1d1d1d3d2d2d0d0d0cfcfcdc9c9c9c6c5c5c5c6c6
c6c6c6c2c1c1c2c1c0c0c0c0bebcb9b9b9b9b9b9b9b9b9b2b2aba1a19f9f
9f9f9b999999999999999593847c7c7c7c7c7c7c7c7c7c7776767676767b
7c7c7c7c7c7c7c7c7c7d7f8383817b7f818181818187808085888d987f7c
7e7f7f7f8181807e7e7f818484898a89828182837e7f8282828486848380
878583838282827a84817d86878383838383838385878787878787878787
817e7e7e7e7e7e7e7e7e8083868787878787878787878181828587878787
8787827e7e7e7e7e7e7e7d7c7c7c7e7e7e7d7d7d7d7d7d7d7d7e7e7e7e7e
818487878787878787878787878787878787858383838383818283838383
e6eae8e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e6e6e6e6
e6e6e6e6e6e7e7e7e7e7e7e7e7e7e6e6e6e6e6e6e7e7e7e7e7e7e8e8e8e8
e8e8e8e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e5e1d7
d3d3d4d9d9d6d5d1d1d1d1d1d1d1cfcfcfcfcfcecbc9c9c5c5c6c6c6c6c6
c6c3c1c1c1c0c0c0c0c0bfbcb9b9b9b9b9b9b9b9b9b8b2b2ada39f9f9f9f
9f9b99999999999999999593847c7c7c7c7c7c7c7c7c7876767676767680
7c7c7c7c7c7c7c7c7c808383827b7c8181818181818c8084898d95807c7c
7f7f7f8081818181818181808080817f8181818282818282828486848380
878581808282827a847b7e86858182828282828286878787878787878786
7e7e7e7e7e7e808181818384878787878787878787848181818181828381
81817e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7e7e7e7e7f8282828283868686868584838080807f7e7e7e8080807e807f
e6e6eae8e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7
e7e7e8e8e8e8e8e8e8e8e8e7e7e7e7e7e6e6e6e6e6e6e6e6e6e4dcd5d3d4
dadadadadadadad7d5d1d1d1cfcfcfcfcfcfcfcdc9c7c6c6c6c6c6c6c5c4
c2c1c1c1c0c0c0c0c0c0bbb9b9b9b9b9b9b9b6b4b4b2aeaba39f9f9f9f9f
9f9a99999999999999989493847c7c7c7c7c7c7c7c7b7676767676767677
7c7c7c7c7c7c7c7c7c7e8383807b7f8181818181818d868b8d95837c7e7e
7f7f808181818181817e7e7e7e7e7e7e7e81818181828282828486848380
878581828282827a847b7e86858587878785858587878787878787878786
818182828282828283838487878787878787878787848281818181818181
81817f7e7e7e7e7e7f7e7e807e7e7e7e7e7e7e7e7e7e7e7f7e7e7e7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
e6e6e7eae8e7e7e7e7e6e6e6e6e6e5e5e5e6e6e6e6e6e6e6e7e7e7e7e7e7
e8e8e8e8e8e8e8e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7
e7e7e7e8e8e8e8e8e8e8e8e8e7e7e7e7e6e6e6e6e5e5e5e0dbd5d2d2d5d6
d8d9d9dadadadadad8d2cfcfcfcfcfcfcfcfceccc9c6c5c6c6c6c6c3c2c1
c2c1c0c0c0c0c0c0bebab9b9b9b9b9b9b9b4b2b2b2afa7a39f9f9f9f9f9f
9b9999999999999999969493847c7c7c7c7c7c7c7c767676767676767678
7c7c7c7c7c7c7c7c7f8183827d7d81818181818181939092908580817f7f
7f7f818181818181817f7e7e7e7e7e7e7e80818181828282828486848380
878586848282827a847b7e86868587878787878686878787878787878785
828182828385878788888787878787878787878786838283838282828382
808082828382818181818080807f807f7f7e7e7d7d7d7e7e7e7e7e7e7e7f
8385858584808080807f7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
e7e7e7e7efe7e7e6e6e6e6e5e5e5e5e5e5e5e5e6e6e6e6e7e7e7e7e8e8e8
e8e8e8e8e8e8e8e8e7e7e7e7e7e6e6e6e6e6e6e5e5e5e5e6e6e6e6e6e7e7
e7e7e7e7e7e8e8e8e8e8e8e8e7e7e7e7e6e6e6e6e3ddd9d3d1d0d2d2d2d1
d1d2d5dad8dadad6d1cfcfcfcfcfcfcfcfcfcdccc9c6c6c6c6c6c3c1c1c0
c0c0c0c0c0c0c0bebab9b9b9b9b9b9b9b9b8b7b5b5b1a49f9f9f9f9f9f9d
9a9999999999999999959493847c7c7c7c7c7c7c78767676767676767675
7c7c7c7c7c7c7c7c8183837d7b808181818181818298908b8180807e7f7f
8081818181818181818382827e7e7e7e7e82828181828282828288848380
878586848282827a847b8187868382848687878587878787878787878784
818383848787878787878587878787878787878786838383828282828281
807e7e7f8283828181868888878585818181807f7f7e7d7d7e7e7e7e7e7e
7e8185878787878787878686827e7e7e7e7e7e7e7e7e7e7e818181807e7e
e7e7e7e7e9ebe6e6e6e6e5e5e5e5e5e5e5e5e6e6e6e6e7e7e7e8e8e8e8e8
e8e8e8e8e8e8e8e8e8e8e7e7e7e7e6e6e6e6e6e6e5e5e5e6e6e6e6e6e7e7
e7e7e7e7e7e7e8e8e8e8e8e8e8e7e7e7e7e6e4ded6d3d2d1d0d1d1d1d1d1
d1d1d1d4d7d4d1cfcfcfcfcfcfcfcfcfcdc9c7c7c7c7c7c7c7c7c2c0c0c0
c0c0c0c0c0c0bfbab9b9b9b9b9b9b9b9b9b9b9b9b8ad9f9f9f9f9f9f9f9b
97999999999999989594948e847c7c7c7c7c7c7a76767676767676767674
7c7c7c7c7e7c7c7e83837f7b7d8181818181818182968480808080807f7f
7f818181818181817f7e8080807e7e808283838382828282828088848380
8785868482807b7a81778287868081828080828587878787878787878782
8282828286878787878786878787878787878787817f8082828383838383
8381818283828181818288898989898989898685848282827f8080828280
7f7f80828284848787878787827e7e7e7e7e7e7e7e7e7e80878787878580
e7e7e7e7e7ece7e6e6e6e6e5e5e5e5e5e6e6e6e6e7e7e7e7e8e8e8e8e8e8
e8e8e8e8e8e8e8e8e8e8e8e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7
e7e7e7e7e7e8e8e8e8e8e8e8e8e7e7e7e3dad5d3d3d3d2d1d1d1d1d1d1d1
d1d1d1cfcfcfcfcfcfcfcfcfcfcfccc9c7c7c7c7c7c7c7c7c5c2c0c0c0c0
c0c0c0bfbebab9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a59f9f9f9f9f9e9e95
9495949795999794948e8d7e847c7c7c7c7c7b7676767676767676767679
7c7c7c7d827c7c8083837d7c8181818181818182838a80807e7d7c7d7e7f
7f7f80818081818181807e7e828383838485838383808282828089848380
878583827b77777a81768287868181818181828584838484878787878682
818181818182858787878686868787878787878681818181828383838383
838384838382828283868383888888898989888888888888888685858585
8382818182828282818181817f7e808080807e7e7e7e807e848787878787
e7e7e6e6e6e7eae6e6e6e6e6e6e6e6e6e6e6e7e7e7e8e8e8e8e8e8e8e8e8
e8e8e8e8e8e8e8e8e8e8e8e8e7e7e7e7e7e6e6e6e6e6e6e6e6e6e6e6e7e7
e7e7e7e8e8e8e8e8e8e8e8e8e8e8e6dfdadad7d8dad9d7d4d1d1d2d2d1d1
d1d1d0cfcfcfcfcfcfcfcecdcbc9c7c6c6c6c6c6c7c7c5c3c0c0c0c0c0c0
c0bfbcbab9b9b9b9b9b9b9b8b9b9b4b4b6b5b1aba69f9f9f9b9d9c999895
9494949597989597938a897d847c7c7c7c7b757676767676767676767677
7c7c7c81837d7f8383817b7f81818181818181828684807f7c7c7c7c7d7f
7f7f7f80808081818082817e82838687878787868382828282808a858380
878580817777777a81778287828081818181808181818181828383838580
818181818181818181838181828787878787878480808080818081828283
848484858483838486878583838383858586878787878787878787878788
88888582828281808080807e7e7e7e7e7e7f808080828281818386878887
e6e6e6e6e6e6ede6e6e6e6e6e6e6e6e6e7e7e7e8e8e8e8e8e8e8e8e8e8e8
e8e8e8e8e8e8e8e8e8e8e8e8e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6e7e7e7
e7e7e7e8e8e8e8e8e8e8e8e8e7e1dcdadadadadadad9d6d3d4d8d5d2d1d1
d1d0cfcfcfcfcfcfcfcdcac7c6c6c6c6c6c6c6c5c3c1c0c0c0c0c0c0c0c1
bdbab9b9b9b9b9b9b9b9b5b2b3b3b2aeada8a09f9f9f9f9e9a9a9a999997
9595959999999999958c897d847c7c7c7c79767676767676767676767678
7c7c7f83837f8383837b7d8181818181818183858380807f7d7c7c7c7e7f
7f7f7f81817f8081807f808082848787878787878683828282838a858380
8785817d77777a7a817b828782818181818182818181818181818181837f
80808080818081818284818181838687878787827f7f7f7f7f8081818181
8181818181817e7e87878481818182828282838484868787878787878787
87878887868482807e7e7e7e7e7e7e7e7e7e7e7e7e828382828182888989
e6e6e6e6e6e6eae9e6e6e6e6e6e7e7e7e7e7e7e8e8e8e8e8e8e8e8e8e8e8
e8e8e8e8e8e8e8e8e8e8e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e8e8e8e8e8e8e8e8e7dedad9d9dad8d6d9d6d2d5d9d8d2d2d2cfcf
cfcfcfcfcfcfcfcfcbc9c7c5c6c6c6c6c5c3c2c1c1c1c0c0c0c0c0c0c0bb
b9b9b9b9b9b9b9b9b6b2b2b2b2afafa7a09f9f9f9f9c9c9a999999999898
97979999999999999186887d847c7c7c7b76767676767676767676767675
7c7d8283837f83837d7f8482818181818186828180808080807f7f7e7f7f
7f7f80817e7e7e7e7e808080807f8487878787878783828282848a858380
8785837c7777777a817b838784818181818183818181818181818181807f
7f7f7f82818081818381818181818283858589817f7f7f7f7f7f80808081
81818181817f68677e878280818181818181818181828383858787878787
878787878787838382807d7d7d7d7d7e7e7e7e8182818385858587898989
e5e5e6e6e6e6e8eae6e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8e8e8e8e8
e8e8e8e8e8e8e8e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e4d7d2d2d5d6d5d1d1d1d1d2dad8d4d8d1cfcfcf
cfcfcfcfcfcfcfcec9c6c6c6c6c6c6c4c2c1c1c1c1c1c0c0c0c0c0bdb9b9
b9b9b9b9b9b9b9b3b2b2b2b2adaaa89f9e9d9c9f9e9a9999999999999999
9999999999999994847c867d847c7c7b767676767676767676767676767e
7c80838383838385868c8781818181828581808080808080818181818080
7f7f80817f7e7e7e7d7c7e7f7f7f7e7f818484848282828282838a858380
8785837c7777777a817b8587888181818182838181818181818181898785
878281818181818185818181818181818181888181818484848482808282
818181817e68616167817f7f7f807f7f8080808080808081818183848486
8787878787868682828281807e7d7d7e7e80838383848887888787878888
e5e5e6e6e6e6e6ece7e7e7e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e8e8e8e8
e8e8e8e8e8e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e6e6e6d9d2d2d2d1d1d1d1d1d1d1d5dadadad5cfcfcfcf
cfcfcfcfcfcfcfc9c6c6c6c6c6c5c4c1c1c1c1c1c0c0c0c0c0c0bfb9b9b9
b9b9b9b9b9b8b3b2b2b2adaaa69f9f9f9c9b9d9c9a999999999999999999
99999999999993817c7c867c7f7c7c767676767676767676767676767c7a
7e838383838384898c8b8281818185808080808080808081818181818181
81818180807e7e7e7c79797b7d7e7d7d7e7e7e7e7e7f8282827d86858380
8788827c7777777a797b8587878181818183848181818181818181838181
7f7f808080808083828181818181818181828a8080808080808080818181
8181817e6a616161657d8183838181807f7f7f7f7f7f7f7f808081818181
828484848381838181818181808181818181818283838686878787878787
e5e5e5e6e6e6e6eae7e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e8e8e8e8
e8e8e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e7e7e7e7e7
e7e7e7e7e7e6e6e6e6e1d4d2d2d1d1d1d1d1d1d1d3d8d8dad5cfcfcfcfcf
cfcfcfcfcfcdc9c6c6c6c6c6c5c2c1c1c1c2c0c0c0c0c0c0c0c0beb9b9b9
b9b9b9b9b9b9b7b2afaaa6a29f9f9f9f9d9b9b9999999999999999999999
999999999994857c7c7c7f7c797c78767676767676767676767676797f7a
8183838383838a8c8c8a81818384817f8080808080808081818181818181
81818181807f7e7e7e7a7979797c7e7d7e7e7f807e7f817e7a7a86858381
9095827c7777787b797b8483868181818182818181818181818181887d7e
808080808080808281818181818181818189808080808080808080808080
80807d6861616161616d81818283837f7d7d7c7d7c7d7e7e7f8283868281
8181838583828181818182827f7f80808080808081818282848585858787
e5e5e5e6e6e6e6eae8e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e6e6e6e7e7e7e7e7
e7e7e7e6e6e6e6e6e6dcd2d2d2d1d1d1d1d1d1d4d9dadad8d0cfcfcfcfcf
cfcfcfcfcdc7c6c6c6c6c6c5c2c1c1c1c0c0c0c0c0c0c0c0bfbbbab9b9b9
b9b9b9b9b8b5b1aaa6a29f9f9f9f9f9e9c99999999999999999999999999
9999999696897f7c7c7c7c7c7778767676767676767676767676767d7f7a
838383838383888c8a848185827f7f7f8080808080808081818181818181
8181818181818180807f7f7f7f7f7f8080807f7e7e7f7a77777786858996
9c96827c7777787f7a7d81828181818181848181818181818181817f7c7c
7c8080808080808483838484838281818187808080808080808080808080
807f6f686866616161798080808080808080808080807e7e7e7e7e7f7f81
818183858584848583818485807e7e7f7f7e7f7f80808381818281838282
e5e6e6e6e6e6e6e6eee6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7
e7e6e6e6e6e6e6e6e6e6e6e7e7e7e7e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7
e7e6e6e6e6e6e6e6e6dcd2d2d2d2d2d1d1d1d1d5d9d2d3d1cfcfcfcfcfcf
cfcfcecac7c6c6c6c6c6c5c2c1c1c2c0c0c0c0c0c0c0bebdbab9b9b9b9b9
b9b9b9b8b2afa9a4a09f9f9f9f9e99999999999999999999999999999999
999996928b7e7c7c7c7c7c7c7c79757575767676767676767676797f7f7b
8383838383838a8c838485807f7f7f7f8080808080808080808181818181
81818181818181818181817f7f7f7f7f7f7e7e7e7e7e7e7a77778686909a
9c9482777777787c7b7f8181818181818183818181818181818185837c7d
7f8080808080828484848484848383818586808080808080808080808080
7e6b6969696965706e7d8080808080808080808080808080808080808080
80808080808080818180807f7e7e7c7c7c7c7c7c7c7c8081868782818489
e5e6e6e6e6e6e7e7eee7e7e6e6e6e6e6e6e6e6e6e6e6e6e7e7e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7
e6e6e6e6e6e6e6e6e6e4d5d2d2d3d5d1d1d1d1d1d1d1d1d0cfcfcfcfcfcf
cfcec9c8c6c6c6c6c6c6c4c1c1c1c2c1c0c0c0c0c0bcb9b9b9b9b9b9b9b9
b9b8b6b2aca6a29f9f9f9f9e9c9a99999999999999999999999999999999
9999988b837c7c7c7c7c7c7c7c7c7b77727472747575767676787f7f7f81
8383838383838b8c8883807f7f7f7f7f8080808080808080808182818181
818181818181818181818182807f7f81807e7e7e7e7e7e80818087878b8d
8a817a777777787d757f8181828181818285818181818181818183828080
808080808080828483838484848484848f827f808080818181818181817f
6e6969696969707c7c818181818181818080808080808080808080808080
808080808080808080808080808080807f7f7f7f7f7f8080808183828787
e6e6e6e6e6e6e7e7e9ede7e7e7e6e6e6e6e6e6e6e6e7e7e7e7e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e7e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e6
e6e6e6e6e6e6e6e6e6e6e1d4d2d3d5d2d1d1d1d1d1d1d1d0d0cfcfcfcfcf
cfcdc8c5c6c6c6c6c6c5c1c1c1c1c1c1c1c1c1bfbbb9b9b9b9b9b9b9b9b9
b9b3b1aba6a19f9f9f9f9d9b999999999999999999999999999999999999
9996877e7c7c7c7c7c7c7f7c7c7c7c7c7c77787372717273757c7f7f7f7d
8383838383858c87808080807f7f7f7f8080808080808080808081818181
818181818181818181818181818281818181808080818181818181818180
808179777777787d76828182848181818281818181818182828389808080
808080808081838281828484848484858b807f7f80807f7f7f7f7f7f7f80
786969696969727c7c828282838382828080808080808080808080808080
808080808080808080808080808080808080808080808080808080808080
e6e6e6e6e6e6e6e7e7ebe8e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e6
e6e6e6e6e6e6e6e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6
e6e6e6e6e6e6e6e6e6e6e6dbd2d2d2d2d1d1d1d1d1d1d0d0d0cfcfcfcfce
cdc9c5c5c6c6c6c6c6c3c1c1c1c1c1c1c1c0bebab9b9b9b9b9b9b9b9b9b9
b5afa9a6a09f9f9f9e9d9b9a999999999999999999999999999999999998
91817d7c7c7c7c7c7c7c7e81797e7e7c7c7c7c7c7c7b7a75737379747578
838383838486828080808080807f7f7f8080808080808080808080828181
81808080808181818181818181818181818181818181818180808080807f
7f7f79777777787d76828182818181808381818282818283848489808080
808080807f8083818183848484848488847f7f7f7f7f7f7f7f7f7f7f7e82
826e696969696e7c7d808181818181818181818080808080808080808080
808080808080808080808080808080808080808080808080808080808081
e6e6e6e6e6e6e6e6e7e7ebe8e7e7e7e7e7e7e7e7e7e7e8e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6d9d2d2d2d2d1d1d1d1d1d0d1d0cfcfcfcfcc
c9c8c5c5c6c6c6c6c6c1c1c1c1c1c1c1c1bbb9b9b9b9b9b9b9b9b9b9b6b2
afa7a4a09f9f9f9f9e9b9999999999999999999999999999999999908c8a
7f7c7c7c7c7c7c7c7c7c7b777677777a787a7d7c7c7c7c7c7c7d7c7b777c
8383838488887f8080808080807f7f7f7f8080808080808080808080807f
7f7f7f7f7f7f7f8081818182818281818181808080808080807f7f7f7f7f
7f7f7e777777787d79828182818080818381818384838484848588808080
807f7f7f7f818281818384848484848c827f7f7f7f7f7f7f7f7f7f7f7f82
8280706969696d7c7d8080808081818181817f7f7f7f7f7f7f8080808080
808080808080808080808080808080808080808080808081818181838382
e6e6e6e6e6e6e6e6e6e7e7ebeae7e7e7e7e7e8e8e8e8e8e8e8e8e8e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8e7e7e7e7e7e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6e6dfd5d4d6d3d2d2d1d1d1d1d1cfcfcfcfcf
ccccc7c7c6c6c6c6c6c3c2c2c2c2c2c2c0bcb9b9b9b9b9b9b9b6b2aea8a6
a3a19f9f9f9f9d9c9a99999999999999999999999999999998938b8a857f
7c7c7c7c7c7c7c7c7c7c787576767574737171767b7e7f7d7e7c7c7c7c7c
8383858a8a858380808080807f7f7f7f7f7f80808080808080808080807f
7f7f7f7f7f7f7f7f7f7f8080818181818181818181818181818181818180
807f83777777787982828182828181818581828384848484848585818080
807f7f7f7f818181818283848484858d7f80808080807f80807f7f7e8081
8182837b6e696d7c7d7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f808081818182
e6e6e6e6e6e6e6e6e6e6e7e7e9eee8e7e7e7e8e8e8e8e8e8e8e8e8e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8e8e7e7e7e7e6e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6e7e7ddd2d8d9d8d8d2d1d1d1d1d1cfcfcfcf
cfcecdccc7c6c6c6c7c6c1c0c0c0c0c0c1bdb9b9b9b9b6b2b1afada7a7a1
9f9f9f9f9f9f9a99999999999999989896989897969494928d8a87807c7c
7c7c7c7c7c7c7b7a7b7975727373717171717171717c8b888c8183807f7e
85868b8b8b8b8480808080807f7f7f7f7f7f808080808080808080807f7d
7d7f7f7f7f7f7f7f7f7f7f7f7f7f7f808181818181818181818181818181
81817e777777787b82828182818180818383838384848484848c80818181
808180807f818181818182848484888680808080808080808080807f8181
818384908f858481807f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f807f7f7f7f8080
e6e6e6e6e6e6e6e6e6e6e6e7e7e9ece9e7e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8e8e8e8e7e7e7e7e7e6e6e6e6e6e6
e6e6e6e6e6e6e6e6e6e6e7e7e7e7e4d7dadadadad5d1d1d1d1cfcfcfcfcf
cfcfccc9c7c7c7c7c7c7c2c0c0c0c0c0bfbab9b9b9b9b2b2aba7a7a6a4a1
9f9f9f9f9f9c9a99999999999795918c8a8d8c8c8c8a8a8a8a857d7c7c7c
7c7c7c7c7c7c7471777b71717b71717171717171717f8b88898b8b8a8a83
868b8a8782817f7f818080807f7f7f7f7f7f80808080808080808080807f
7c7c7e7f7f7f7f7f7f7f7f7f7f7f7f7f8181818181818181818181818181
818180777777787c82828182818080858382828484848484848a81818181
8181818182818181818183848a8a8e82808080808080808080807f828181
83848a9393939594827f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
e6e6e6e6e6e6e6e6e6e6e6e6e6e7e8ece9e7e7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e7e7e8e8e8e8e8e8e8e7e7e7e7e7e6e6e6e6e6e6
e6e6e6e6e7e7e6e6e6e6e6e6e6e6e7d9d5d8dadad6d1d1d1d1cfcfcfcfcf
cfcfcfc8c7c7c7c7c7c6c0c0c0c0c0c0bbb9b9b9b9b4b2b0a7a7a7a7a19f
9f9f9f9e9c99999999989795918c8a8a8a8a8a8a8a8a8a857e7c7c7c7c7c
7c7c7c7c7c78727173747171717171717171717171828681848688848586
8384827f7f7f7f7f7f81807f7f7f7f7f7f7f7f8080808080808080808080
807e7c7c7d7f7f7f7f7e7f7f7f7f7f7f7f80818181818181818181818181
81817d777777787f82828182808080848281828484848484838880818181
81818181818181818182848b8c8c8b808080808080808080808083818181
878793939393948b7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e7e7eaebe7e7e7e7e7e7e7e7e7e7e7e7
e7e7e7e7e7e7e7e7e7e7e8e8e8e8e8e8e8e8e8e8e7e7e7e7e7e6e6e6e6e6
e7e7e7e7e7e7e6e6e6e6e6e6e6e6e6d9d2d7dadad6d1d1d1d1cfcfcfcfcf
cfcfccc7c7c7c7c7c7c2c0c0c0c0c0bdb9b9b9b9b7b2b2ada7a59f9f9f9f
9f9f9e9a999999979594938c8a8a8a8a8581807d8485817c7c7c7c7c7c7c
7c7c7c7c78717181767171717171717171717171717f7f7f7f7f7f7f7f7f
7f7f7f7f7f7f7f7f7f81807f7f7f7f7f7f7f7f7f80808080808080808080
80807e7c7c7c7c7c7c7c7c7d7e7e7f7f7f7f7f8081818181818181818181
81817d77777778808482827e80808085818183848484848482857f7f7f7f
8080817e828181818182868c8c8c84808080808080808080808184818181
858f939393939284807f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000
grestore
showpage
%%EndDocument

 endTexFig
 639 2538 a Fj(Figure)h(9:)j(Scene)d(analysis)g(example.)944
2728 y Fk(244)p eop
%%Page: 245 15
245 14 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)523
103 y
 14274642 7170212 10656645 28023029 24931287 35193241 startTexFig
 523 103 a
%%BeginDocument: figures/nlabels.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 187 423.5 ] concat
64 449 34 419 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
61 470 71 451 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
71 451 91 451 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 187 423.5 ] concat
224 487 224 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 187 423.5 ] concat
224 487 184 449 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ -.5 0 0 .5 411 423.5 ] concat
224 487 184 449 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 187 423.5 ] concat
344 449 394 487 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 187 423.5 ] concat
394 487 414 459 Line
End

Begin %I Pict
[ 1 0 0 1 0 5 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .357143 0 0 .357143 338 507.5 ] concat
294 377 364 435 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 291 449.5 ] concat
334 407 334 367 Line
End

End %I eop

Begin %I Pict

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .357143 0 0 -.357143 104 707.5 ] concat
294 377 364 435 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 436.5 ] concat
152 293 142 253 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 436.5 ] concat
142 253 172 263 Line
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 436.5 ] concat
272 293 322 233 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 436.5 ] concat
322 293 272 233 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 436.5 ] concat
264 303 224 243 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 436.5 ] concat
264 303 312 283 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 436.5 ] concat
264 303 264 253 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 436.5 ] concat
264 303 284 263 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 436.5 ] concat
402 323 412 283 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 436.5 ] concat
412 283 442 303 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 436.5 ] concat
412 283 382 293 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 436.5 ] concat
412 283 392 243 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 436.5 ] concat
412 283 432 243 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 214 628 ] concat
[
(f)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 294 628 ] concat
[
(a)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 374 628 ] concat
[
(l)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 214 543 ] concat
[
(k)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 294 543 ] concat
[
(x)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 379 543 ] concat
[
(p)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 453 628 ] concat
[
(t)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 458 543 ] concat
[
(m)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 588 656 a Fj(Figure)f(10:)20 b(P)o(ossible)c(v)o(ertices)f(and)h(lab)q(els.)
225 839 y
 23681433 9472573 2631270 16840130 39008583 33088225 startTexFig
 225 839 a
%%BeginDocument: figures/pencilsgraph.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .31483 -.209886 .209886 .31483 544.176 420.185 ] concat
77 98 77 134 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .298674 .232302 -.232302 .298674 616.479 389.223 ] concat
77 98 77 134 Line
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .9 0 0 .9 529.1 223.1 ] concat
81 251 10 10 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.575 0 0 1 398.079 357 ] concat
96 261 131 261 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 200 236 ] concat
388 237 408 237 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 388 20 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 134 348 ] concat
327 154 434 130 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -170 -29 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -110 -29 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -22 163 ] concat
96 261 131 261 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.37838 -22 190.969 ] concat
86 246 86 177 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.37838 38 190.969 ] concat
86 246 86 177 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -31 -29 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 29 -29 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 117 163 ] concat
96 261 131 261 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.37838 117 190.969 ] concat
86 246 86 177 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.37838 177 190.969 ] concat
86 246 86 177 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -170 90 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -110 90 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 -22 282 ] concat
96 261 131 261 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -31 90 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 29 90 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 117 282 ] concat
96 261 131 261 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 159 90 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 219 90 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 159 -29 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 219 -29 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 307 282 ] concat
96 261 131 261 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 307 163 ] concat
96 261 131 261 Line
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 310 262 ] concat
81 251 10 10 Elli
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 94 75 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 64 35 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 469 183 ] concat
81 251 10 10 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 370 252 ] concat
81 251 10 10 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 134 348 ] concat
203 181 247 170 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 134 348 ] concat
259 185 259 175 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.4 134 285.004 ] concat
259 155 259 140 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 134 348 ] concat
319 185 319 165 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.65 134 252.131 ] concat
319 145 319 130 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.36 0 0 1 2.41663 374 ] concat
368 199 388 199 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 134 374 ] concat
354 189 354 129 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.03087 144 365.859 ] concat
403 189 403 124 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
1 SetP
[ 1 0 0 1 -170 60 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 580 262 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 658 518 ] concat
[
(l)
] Text
End

End %I eop

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 410 242 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 388 518 ] concat
[
(t)
] Text
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 0 -10 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 310 227 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 388 482 ] concat
[
(t)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 448 507 ] concat
[
(t)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 488 498 ] concat
[
(t)
] Text
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 10 0 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 454 232 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 532 487 ] concat
[
(t)
] Text
End

End %I eop

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 464 367 ] concat
81 251 10 10 Elli
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 388 165 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 158 197 ] concat
390 411 390 386 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 10 0 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 454 322 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 533 577 ] concat
[
(t)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 .853333 210 290.925 ] concat
408 372 408 227 Line
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 499 223 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 542 623 ] concat
[
(l)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 200 236 ] concat
104 252 179 237 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 200 236 ] concat
263 217 338 202 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 200 236 ] concat
194 222 194 197 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 200 236 ] concat
253 227 253 197 Line
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 370 202 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 448 457 ] concat
[
(t)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 200 236 ] concat
119 282 104 262 Line
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 469 183 ] concat
81 251 10 10 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .9 0 0 .9 512.1 203.1 ] concat
81 251 10 10 Elli
End

Begin %I Pict
1 0 0 [] 0 SetB
[ .9 0 0 .9 407.2 19.3 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 200 236 ] concat
360 195 374 194 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 200 236 ] concat
388 234 398 222 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 0 -.378378 -.378378 0 644.197 455.432 ] concat
77 98 77 134 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 200 236 ] concat
376 229 356 208 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 582 434 ] concat
[
(t)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 600 455 ] concat
[
(t)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 577 479 ] concat
[
(m)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 546 440 ] concat
[
(a)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 519 136 ] concat
81 251 10 10 Elli
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 368 -121 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 579 81 ] concat
81 251 10 10 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 579 136 ] concat
81 251 10 10 Elli
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 498 -86 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 649 171 ] concat
81 251 10 10 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 389 252 ] concat
224 135 259 135 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 389 197 ] concat
224 135 259 135 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 389 252 ] concat
209 125 209 90 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 450 253 ] concat
209 125 209 90 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 389 252 ] concat
279 143 329 171 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 391 195 ] concat
279 143 329 171 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 326 253 ] concat
279 143 329 171 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 433 -31 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 454 287 ] concat
224 135 259 135 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 520 287 ] concat
209 125 209 90 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 596 392 ] concat
[
(a)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 656 337 ] concat
[
(a)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 656 393 ] concat
[
(f)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 726 428 ] concat
[
(a)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 70 424 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 70 424 ] concat
148 238 158 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 90 424 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 100 424 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 110 424 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 120 424 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .476779 -.150606 .150606 .476779 176.994 448.807 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .476779 -.150606 .150606 .476779 188.494 445.807 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .476779 -.150606 .150606 .476779 198.994 443.057 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .476779 -.150606 .150606 .476779 208.994 440.307 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .363636 0 0 .5 579.955 307.5 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .363636 0 0 .5 588.455 307.5 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .363636 0 0 .5 596.955 307.5 ] concat
128 238 138 238 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .363636 0 0 .5 604.955 307.5 ] concat
128 238 138 238 Line
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 388 1537 a Fj(Figure)g(11:)j(P)o(ortion)c(of)f(graph)h(represen)o(ting)h
(scene)g(in)g(Figure)f(4.)75 1744 y(from)h(just)h(one)h(2D)e(picture,)j
Fh(Subdue)e Fj(will)i(matc)o(h)e(instances)h(of)f(similar)h(ob)s(jects,)f
(and)g(the)g(di\013er-)75 1801 y(ences)f(b)q(et)o(w)o(een)g(these)f
(instances)h(can)f(pro)o(vide)h(additional)h(information)e(for)g(iden)o
(ti\014cation.)22 b(Third,)75 1857 y(substructure)16 b(disco)o(v)o(ery)h(can)
f(b)q(e)h(used)f(to)g(compress)g(the)g(image.)22 b(Replacing)d(common)c(in)o
(teresting)75 1914 y(substructures)f(b)o(y)g(a)f(single)j(v)o(ertex)d
(simpli\014es)j(the)e(image)g(description)i(and)e(reduces)g(the)g(amoun)o(t)f
(of)75 1970 y(storage)h(necessary)h(to)g(represen)o(t)g(the)g(image.)146
2039 y(T)l(o)22 b(apply)h Fh(Subdue)f Fj(to)g(image)g(data,)h(w)o(e)f
(extract)g(edge)g(information)h(from)e(the)h(image)h(and)75
2096 y(construct)15 b(a)h(graph)f(represen)o(ting)h(the)g(scene.)21
b(The)16 b(graph)g(represen)o(tation)f(consists)h(of)f(eigh)o(t)h(t)o(yp)q
(es)75 2152 y(of)e(v)o(ertices)h(and)f(t)o(w)o(o)f(t)o(yp)q(es)i(of)f(arcs)g
(\()p Fg(e)n(dge)f Fj(and)i Fg(sp)n(ac)n(e)p Fj(\).)k(The)14
b(v)o(ertex)g(lab)q(els)i(\()p Fe(f)5 b Fj(,)14 b Fe(a)p Fj(,)g
Fe(l)q Fj(,)g Fe(t)p Fj(,)g Fe(k)q Fj(,)h Fe(x)p Fj(,)f Fe(p)p
Fj(,)g(and)75 2208 y Fe(m)p Fj(\))e(follo)o(w)h(the)f(W)l(altz)h(lab)q
(elings)h(\(W)l(altz,)f(1975\))e(of)h(junctions)h(of)f(edges)h(in)g(the)g
(image)f(and)h(represen)o(t)75 2265 y(the)g(t)o(yp)q(es)g(of)f(v)o(ertices)h
(sho)o(wn)g(in)g(Figure)g(10.)19 b(An)13 b Fg(e)n(dge)f Fj(arc)h(represen)o
(ts)g(the)g(edge)g(of)f(an)h(ob)s(ject)f(in)i(the)75 2321 y(image,)j(and)h(a)
f Fg(sp)n(ac)n(e)f Fj(arc)h(links)i(non-connecting)f(ob)s(jects)f(together.)
25 b(The)17 b Fg(e)n(dge)g Fj(arcs)g(represen)o(t)g(an)75 2378
y(edge)d(in)h(the)g(scene)f(that)g(connects)g(t)o(w)o(o)f(v)o(ertices,)h(and)
g(the)h Fg(sp)n(ac)n(e)e Fj(arcs)h(connect)g(the)g(closest)h(v)o(ertices)75
2434 y(from)e(t)o(w)o(o)f(disjoin)o(t)j(neigh)o(b)q(oring)g(ob)s(jects.)j
(Distance,)c(curv)o(e,)g(and)g(angle)g(information)g(has)g(not)f(b)q(een)75
2491 y(included)i(in)e(the)f(graph)g(represen)o(tation,)g(but)g(can)h(b)q(e)g
(added)f(to)g(giv)o(e)g(additional)i(information)e(ab)q(out)75
2547 y(the)17 b(scene.)25 b(Figure)17 b(11)g(sho)o(ws)f(the)h(graph)f
(represen)o(tation)h(of)f(a)h(p)q(ortion)g(of)f(the)h(scene)h(depicted)g(in)
75 2604 y(Figure)d(9.)20 b(In)c(this)f(\014gure,)g(the)h Fg(e)n(dge)f
Fj(arcs)f(are)h(solid)i(and)e(the)g Fg(sp)n(ac)n(e)g Fj(arcs)f(are)h(dashed.)
944 2728 y Fk(245)p eop
%%Page: 246 16
246 15 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)154 103 y
 25918013 14998242 7564902 23615651 33482915 38613893 startTexFig
 154
103 a
%%BeginDocument: figures/amplifier.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
[ .832 0 0 .832 -49.6041 99.4559 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.10036 0 0 1.00023 155.74 177.904 ] concat
131 520 231 520 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.00023 158.953 182.905 ] concat
251 391 320 391 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.2472 158.953 44.602 ] concat
251 560 251 520 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.00023 0 0 1.00023 418.507 701.525 ] concat
[
(drain)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.34988 158.953 4.58271 ] concat
251 510 251 480 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.34988 108.942 -34.4263 ] concat
251 510 251 480 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.00023 158.953 53.8758 ] concat
251 560 251 520 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.00023 0 0 1.00023 420.013 543.988 ] concat
[
(drain)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.67912 158.953 -282.482 ] concat
251 510 251 480 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.34988 108.942 -163.456 ] concat
251 510 251 480 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.00023 158.953 -76.1542 ] concat
251 560 251 520 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.00023 0 0 1.00023 400.009 433.963 ] concat
[
(GND)
] Text
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.00023 234.971 361.947 ] concat
175 212 3 3 Elli
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.00023 303.987 361.947 ] concat
175 212 3 3 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.00023 158.953 182.905 ] concat
161 451 201 451 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.00023 0 0 1.00023 289.983 639.01 ] concat
[
(gate)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.00023 158.953 52.8755 ] concat
161 451 201 451 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.00023 0 0 1.00023 289.983 508.98 ] concat
[
(gate)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.00023 78.9348 52.8755 ] concat
161 451 201 451 Line
End

Begin %I Elli
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 1.00023 64.9316 291.931 ] concat
175 212 3 3 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1.00023 0 0 .916878 168.956 221.331 ] concat
131 461 131 520 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.00023 0 0 1.00023 419.013 604.002 ] concat
[
(source)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.00023 0 0 1.00023 400.009 758.038 ] concat
[
(VCC)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 410.5 ] concat
316 484 216 456 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 410.5 ] concat
217 438 316 407 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252.5 282 ] concat
316 484 216 456 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 252 281.5 ] concat
217 438 316 407 Line
End

End %I eop

Begin %I Pict
[ .832 0 0 .832 262.8 135.46 ] concat

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 99 59 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
151 416 27 9 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 279 618 ] concat
[
(ext_pin)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 79 60 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 171 127 ] concat
151 416 27 9 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 548 ] concat
[
(n_mosfet)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 140 50 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 110 67 ] concat
151 416 27 9 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 239 488 ] concat
[
(connect)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
251 421 251 461 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.22857 148 107.059 ] concat
251 391 251 361 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 99 -220 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 148 197 ] concat
151 416 27 9 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 279 618 ] concat
[
(ext_pin)
] Text
End

End %I eop

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 79 -80 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 171 127 ] concat
151 416 27 9 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 548 ] concat
[
(n_mosfet)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 57 ] concat
251 421 251 461 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1.22857 148 -32.9407 ] concat
251 391 251 361 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 408 643 ] concat
[
(drain)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 324 618 ] concat
[
(gate)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 409 578 ] concat
[
(source)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 408 503 ] concat
[
(drain)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 324 478 ] concat
[
(gate)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 409 433 ] concat
[
(source)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 135 313 ] concat
239 290 174 290 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 135 313 ] concat
174 290 174 359 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 135 313 ] concat
174 359 234 359 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 135 173 ] concat
239 290 174 290 Line
End

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 21 -20 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 110 67 ] concat
151 416 27 9 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 239 488 ] concat
[
(connect)
] Text
End

End %I eop

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 437 1151 a Fj(Figure)f(12:)20 b(Ampli\014er)d(circuit)f(and)f(graph)g
(represen)o(tation.)75 1366 y Fh(7.1.3)25 b(CAD)16 b(Cir)o(cuit)g(Anal)m
(ysis)75 1462 y Fj(In)d(this)g(domain,)f(w)o(e)g(emplo)o(y)h
Fh(Subdue)g Fj(to)e(\014nd)i(circuit)h(comp)q(onen)o(ts)e(in)h(CAD)f(circuit)
i(data.)k(Disco)o(v-)75 1519 y(ery)11 b(of)f(substructures)h(in)g(circuit)h
(data)e(can)h(b)q(e)g(a)g(v)m(aluable)h(to)q(ol)f(to)f(an)h(engineer)h(who)e
(is)h(attempting)g(to)75 1575 y(iden)o(tify)k(common)e(reusable)h(parts)f(in)
i(a)e(circuit)i(la)o(y)o(out.)k(Replacing)c(individual)i(comp)q(onen)o(ts)c
(in)i(the)75 1632 y(circuit)j(description)f(b)o(y)f(larger)h(substructure)f
(descriptions)i(will)f(also)g(simplify)h(the)e(represen)o(tation)75
1688 y(of)f(the)g(circuit.)146 1760 y(The)i(data)f(for)g(the)h(circuit)i
(domain)e(w)o(as)f(obtained)i(from)e(National)h(Semiconductor,)i(and)e(con-)
75 1817 y(sists)e(of)g(a)g(set)g(of)g(comp)q(onen)o(ts)g(making)g(up)h(a)f
(circuit)i(as)d(output)h(b)o(y)h(the)f(Cadence)h(Design)f(System.)75
1873 y(The)21 b(particular)h(circuit)g(used)f(for)g(this)g(exp)q(erimen)o(t)h
(is)f(a)g(p)q(ortion)g(of)f(an)h(analog-to-digital)h(con-)75
1930 y(v)o(erter.)36 b(Figure)21 b(12)g(presen)o(ts)f(a)h(circuit)h(for)e(an)
h(ampli\014er)h(and)f(giv)o(es)g(the)g(corresp)q(onding)h(graph)75
1986 y(represen)o(tation.)75 2112 y Fh(7.1.4)j(Ar)m(tificial)17
b(Domain)75 2208 y Fj(In)d(the)g(\014nal)g(domain,)g(w)o(e)g(arti\014cially)h
(generate)f(graphs)f(to)g(ev)m(aluate)h Fh(Subdue)p Fj('s)g(abilit)o(y)h(to)e
(disco)o(v)o(er)75 2265 y(substructures)i(capable)i(of)d(compressing)i(the)f
(graph.)20 b(F)l(our)15 b(substructures)g(are)g(created)h(of)e(v)m(arying)75
2321 y(sizes)f(with)f(randomly-selected)i(v)o(ertices)f(and)f(edges)g(\(see)g
(Figure)h(13\).)18 b(The)12 b(name)g(of)g(a)g(substructure)75
2378 y(re\015ects)j(the)g(n)o(um)o(b)q(er)f(of)h(v)o(ertices)g(and)f(edges)h
(in)h(its)e(graph)h(represen)o(tation.)k(Next,)c(these)g(substruc-)75
2434 y(tures)k(are)g(em)o(b)q(edded)i(in)f(larger)g(graphs)f(whose)g(size)h
(is)g(15)f(times)h(the)f(size)i(of)e(the)g(substructure.)75
2491 y(The)g(graphs)f(v)m(ary)g(across)g(four)g(parameters:)25
b(n)o(um)o(b)q(er)19 b(of)f(p)q(ossible)i(v)o(ertex)e(and)g(edge)h(lab)q(els)
h(\(one)75 2547 y(times)g(and)f(t)o(w)o(o)f(times)i(the)f(n)o(um)o(b)q(er)h
(of)f(lab)q(els)i(used)f(in)g(the)g(substructure\),)f(connectivit)o(y)i(of)e
(the)75 2604 y(substructure)e(\(1)f(or)g(2)h(external)g(connections\),)h(co)o
(v)o(erage)d(of)i(the)g(instances)g(\(60\045)f(and)h(80\045\),)f(and)944
2728 y Fk(246)p eop
%%Page: 247 17
247 16 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)315
103 y
 20839632 15156103 3749560 24733941 31377899 42231889 startTexFig
 315 103 a
%%BeginDocument: figures/foursubs.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .86747 0 0 .86747 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
[ 1 0 0 1 -168.564 58.1222 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 145 296 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 209 296 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 274 296 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 338 296 ] concat
103 338 9 9 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
139 476 185 476 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
314 476 268 476 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
250 476 204 476 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 242 638 ] concat
[
(n1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 307 639 ] concat
[
(n4)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 371 638 ] concat
[
(n3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 437 638 ] concat
[
(n2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 409 646 ] concat
[
(e1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 344 647 ] concat
[
(e2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 272 646 ] concat
[
(e3)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 96.5358 148.744 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 146 204 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 209 204 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 274 204 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 338 204 ] concat
103 338 9 9 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
139 384 185 384 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
204 384 250 384 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
314 384 268 384 Line
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
259 393
194 430
130 393
3 BSpl
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
194 375
231 347
259 375
3 BSpl
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
259 375
295 347
323 375
3 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 244 546 ] concat
[
(n4)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 307 546 ] concat
[
(n3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 372 546 ] concat
[
(n2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 436 546 ] concat
[
(n1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 306 572 ] concat
[
(e1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 270 538 ] concat
[
(e3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 341 510 ] concat
[
(e3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 407 510 ] concat
[
(e3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 338 538 ] concat
[
(e2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 405 554 ] concat
[
(e2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 -53.1753 165.155 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 81 112 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 136 112 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 191 112 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 246 112 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 301 112 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 357 112 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 411 112 ] concat
103 338 9 9 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
112 292 75 292 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
167 292 130 292 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
222 292 185 292 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
240 292 277 292 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
295 292 332 292 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
387 292 351 292 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 179 454 ] concat
[
(n7)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 234 454 ] concat
[
(n5)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 289 454 ] concat
[
(n2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 344 454 ] concat
[
(n5)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 399 454 ] concat
[
(n3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 454 454 ] concat
[
(n1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 510 455 ] concat
[
(n6)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 210 462 ] concat
[
(e6)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 265 462 ] concat
[
(e3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 320 462 ] concat
[
(e1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 367 462 ] concat
[
(e4)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 422 462 ] concat
[
(e2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 487 462 ] concat
[
(e6)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 -53.1753 161.744 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 136 10 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 191 10 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 246 10 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 301 11 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 357 11 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 412 11 ] concat
103 338 9 9 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 80 11 ] concat
103 338 9 9 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
112 191 75 191 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
185 191 222 191 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
240 191 277 191 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
332 191 295 191 Line
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
121 200
93 228
66 200
3 BSpl
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
176 182
204 154
231 182
3 BSpl
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
176 200
259 255
341 200
3 BSpl
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
66 182
176 136
286 182
3 BSpl
End

Begin %I BSpl
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 118 158 ] concat
397 182
231 118
66 136
66 182
4 BSpl
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 178 353 ] concat
[
(n3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 234 352 ] concat
[
(n1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 289 352 ] concat
[
(n7)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 344 352 ] concat
[
(n4)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 399 353 ] concat
[
(n2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 454 353 ] concat
[
(n3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 510 353 ] concat
[
(n1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 288 306 ] concat
[
(e7)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 369 291 ] concat
[
(e8)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 389 ] concat
[
(e3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 207 362 ] concat
[
(e5)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 313 361 ] concat
[
(e3)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 368 361 ] concat
[
(e8)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 429 345 ] concat
[
(e6)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 370 390 ] concat
[
(e9)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 316 334 ] concat
[
(e1)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 324 1161 a Fj(Figure)f(13:)k(F)l(our)c(arti\014cial)i(substructures)e(used)h
(to)e(ev)m(aluate)i Fh(Subdue)p Fj(.)75 1408 y(the)h(amoun)o(t)f(of)h
(distortion)g(in)h(the)f(instances)h(\(0,)e(1)h(or)g(2)f(distortions\).)26
b(This)17 b(yields)i(a)e(total)f(of)h(96)75 1465 y(graphs)e(\(24)f(for)h(eac)
o(h)g(di\013eren)o(t)g(substructure\).)75 1613 y Fo(7.2)26
b(Exp)q(erimen)o(tal)18 b(Results)75 1726 y Fh(7.2.1)25 b(Experiment)17
b(1:)22 b(D)o(a)m(t)m(a)16 b(compression)75 1838 y Fj(In)g(the)f(\014rst)f
(exp)q(erimen)o(t,)i(w)o(e)f(test)f Fh(Subdue)p Fj('s)h(abilit)o(y)h(to)f
(compress)g(a)f(structural)h(database.)k(Using)75 1894 y(a)12
b(b)q(eam)g(width)h(of)f(4)g(and)g Fh(Subdue)p Fj('s)g(pruning)i(mec)o
(hanism,)f(w)o(e)f(applied)i(the)e(disco)o(v)o(ery)g(algorithm)h(to)75
1951 y(eac)o(h)j(of)g(the)h(databases)e(men)o(tioned)i(ab)q(o)o(v)o(e.)23
b(W)l(e)17 b(rep)q(eat)f(the)h(exp)q(erimen)o(t)g(with)g(matc)o(h)e
(thresholds)75 2007 y(ranging)c(from)f(0.0)g(to)g(1.0)g(in)i(incremen)o(ts)g
(of)e(0.1.)18 b(T)l(able)11 b(1)g(sho)o(ws)f(the)h(description)h(length)g
(\(DL\))e(of)h(the)75 2064 y(original)17 b(graph,)e(the)h(description)h
(length)g(of)e(the)h(b)q(est)g(substructure)g(disco)o(v)o(ered)g(b)o(y)g
Fh(Subdue)p Fj(,)g(and)75 2120 y(the)i(v)m(alue)h(of)e(compression.)28
b(Compression)18 b(here)g(is)g(de\014ned)h(as)1253 2100 y Fq(DL)10
b(of)i(compressed)6 b(graph)p 1253 2110 373 2 v 1283 2136 a(DL)k(of)h
(original)d(graph)1631 2120 y Fj(.)27 b(Figure)18 b(14,)75
2177 y(sho)o(ws)d(the)g(actual)g(disco)o(v)o(ered)h(substructures)f(for)g
(the)g(\014rst)g(four)g(datasets.)146 2265 y(As)22 b(can)g(b)q(e)h(seen)f
(from)g(T)l(able)h(1,)g Fh(Subdue)g Fj(w)o(as)e(able)i(to)e(reduce)i(the)g
(database)e(to)h(sligh)o(tly)75 2321 y(larger)f(than)327 2304
y Fq(1)p 327 2311 18 2 v 327 2337 a(4)371 2321 y Fj(of)g(its)g(original)h
(size)g(in)h(the)e(b)q(est)g(case.)38 b(The)22 b(a)o(v)o(erage)e(compression)
h(v)m(alue)i(o)o(v)o(er)75 2378 y(all)e(of)f(these)h(domains)f(\(treating)g
(the)g(arti\014cial)i(graphs)e(as)g(one)g(v)m(alue\))h(is)g(0.62.)34
b(The)21 b(results)f(of)75 2434 y(this)15 b(exp)q(erimen)o(t)g(demonstrate)f
(that)g(the)h(substructure)f(disco)o(v)o(ered)h(b)o(y)g Fh(Subdue)g
Fj(can)f(signi\014can)o(tly)75 2491 y(reduce)f(the)g(amoun)o(t)e(of)h(data)g
(needed)h(to)f(represen)o(t)g(an)g(input)i(graph.)k(W)l(e)13
b(exp)q(ect)g(that)e(compressing)75 2547 y(the)16 b(graph)f(using)h(com)o
(binations)g(of)f(substructures)h(and)g(hierarc)o(hies)h(of)e(substructures)g
(will)j(realize)75 2604 y(ev)o(en)e(greater)e(compression)i(in)g(some)e
(databases.)944 2728 y Fk(247)p eop
%%Page: 248 18
248 17 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)p 75 360 1860
2 v 74 416 2 57 v 316 399 a Fj(Database)p 741 416 V 741 416
V 266 w(DL)830 406 y Fq(original)p 971 416 V 971 416 V 997
399 a Fj(Threshold)1196 406 y Fq(optimal)p 1341 416 V 1341
416 V 1367 399 a Fj(DL)1430 406 y Fq(compressed)p 1631 416
V 1631 416 V 1657 399 a Fj(Compression)p 1934 416 V 75 418
1860 2 v 74 474 2 57 v 334 458 a(Rubb)q(er)p 741 474 V 340
w(371.78)p 971 474 V 310 w(0.1)p 1341 474 V 185 w(95.20)p 1631
474 V 221 w(0.26)p 1934 474 V 74 531 V 313 514 a(Cortisone)p
741 531 V 318 w(355.03)p 971 531 V 310 w(0.3)p 1341 531 V 162
w(173.25)p 1631 531 V 221 w(0.49)p 1934 531 V 74 587 V 357
570 a(DNA)p 741 587 V 338 w(2427.93)p 971 587 V 310 w(1.0)p
1341 587 V 140 w(2211.87)p 1631 587 V 220 w(0.91)p 1934 587
V 74 644 V 339 627 a(P)o(encils)p 741 644 V 322 w(1592.33)p
971 644 V 310 w(1.0)p 1341 644 V 162 w(769.18)p 1631 644 V
221 w(0.48)p 1934 644 V 74 700 V 299 683 a(CAD)f({)f(M1)p 741
700 V 280 w(4095.73)p 971 700 V 310 w(0.7)p 1341 700 V 162
w(2148.8)p 1631 700 V 221 w(0.52)p 1934 700 V 74 757 V 235
740 a(CAD)h({)g(S1SegDec)p 741 757 V 217 w(1860.14)p 971 757
V 310 w(0.7)p 1341 757 V 140 w(1149.29)p 1631 757 V 220 w(0.62)p
1934 757 V 74 813 V 234 796 a(CAD)g({)g(S1DrvBlk)p 741 813
V 194 w(12715.12)p 971 813 V 309 w(0.7)p 1341 813 V 140 w(9070.21)p
1631 813 V 220 w(0.71)p 1934 813 V 74 870 V 235 853 a(CAD)f({)h(BlankSub)p
741 870 V 218 w(8606.69)p 971 870 V 310 w(0.7)p 1341 870 V
140 w(6204.74)p 1631 870 V 220 w(0.72)p 1934 870 V 74 926 V
277 909 a(CAD)g({)g(And2)p 741 926 V 282 w(427.73)p 971 926
V 310 w(0.1)p 1341 926 V 162 w(324.52)p 1631 926 V 221 w(0.76)p
1934 926 V 74 983 V 100 966 a(Arti\014cial)i(\(a)o(vg.)h(o)o(v)o(er)d(96)f
(graphs\))p 741 983 V 81 w(1636.25)p 971 983 V 199 w(0.0)p
Fe(:)8 b(:)g(:)m Fj(1.0)p 1341 983 V 140 w(1164.02)p 1631 983
V 220 w(0.71)p 1934 983 V 75 984 1860 2 v 615 1061 a(T)l(able)16
b(1:)j(Graph)c(compression)h(results.)100 1704 y
 27628339 5920358 4275814 35324805 31904153 41245163 startTexFig
 100 1704 a
%%BeginDocument: figures/compresults.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
1 0 0 [] 0 SetB
[ 1 0 0 1 -65 386 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 519 136 ] concat
81 251 10 10 Elli
End

Begin %I Pict
[ 1 0 0 1 368 -121 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 229 458 ] concat
[
(l)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 151 202 ] concat
81 251 10 10 Elli
End

End %I eop

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 579 81 ] concat
81 251 10 10 Elli
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 389 197 ] concat
224 135 259 135 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 389 252 ] concat
209 125 209 90 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 596 392 ] concat
[
(a)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 656 337 ] concat
[
(a)
] Text
End

End %I eop

Begin %I Pict
[ .446043 0 0 .446043 275.135 432.601 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 2.33333 0 0 2.33333 302 685.333 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 2.33333 0 0 2.33333 278 725.333 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
141 511 155 485 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 2.05882 0 0 2.05882 323.639 760.147 ] concat
[
(O)
] Text
End

Begin %I Pict
[ 2.05882 0 0 2.05882 -433.214 -631.618 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 680.5 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 342.5 675.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 2.05882 0 0 2.05882 257.728 650.059 ] concat
[
(O)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 2.33333 0 0 2.33333 352 685.333 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
118 555 133 527 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
166 480 203 480 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
143 523 176 550 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 126 122 ] concat
143 523 176 550 Line
End

End %I eop

Begin %I Pict
[ .548726 0 0 .548726 85.525 442.603 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 2 0 0 2 356 553.5 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 2 0 0 2 94 -156.5 ] concat
111 351 131 351 Line
End

Begin %I Pict
[ 0 -2 2 0 -756 1054.5 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
86 336 101 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 199 ] concat
86 336 101 336 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 2 0 0 2 307 603.5 ] concat
[
(O)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 2 0 0 2 306 553.5 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 2 0 0 2 389 516.5 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
218 343 241 319 Line
End

End %I eop

Begin %I Pict
[ .8 0 0 1 -80.1501 179.75 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 239 568 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 568 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 394.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 10.5 12.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 6.5 -2.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 597 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 106 14 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
264 325 301 296 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 125 682 ] concat
[
(\(a\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 682 ] concat
[
(\(b\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 408 682 ] concat
[
(\(c\))
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 553 682 ] concat
[
(\(d\))
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 75 2186 a Fj(Figure)f(14:)22 b(Best)g(substructure)h(for)e(\(a\))g(rubb)q
(er)i(database,)g(\(b\))e(cortisone)i(database,)g(\(c\))e(DNA)299
2242 y(database,)15 b(and)g(\(d\))g(image)g(database.)944 2728
y Fk(248)p eop
%%Page: 249 19
249 18 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)904
103 y
 2236580 1710326 16182312 27167866 18418892 28878192 startTexFig
 904 103 a
%%BeginDocument: figures/benzenering.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
[ 1 0 0 1 60 0 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 131 351 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 321 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
131 351 141 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
141 336 131 321 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 351 101 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
101 336 111 321 Line
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 499 310 a Fj(Figure)f(15:)20 b(Benzene)c(ring)g(disco)o(v)o(ered)g(b)o(y)f
Fh(Subdue)p Fj(.)75 495 y Fh(7.2.2)25 b(Experiment)17 b(2:)22
b(Re-disco)o(ver)m(y)c(of)g(kno)o(wn)f(substr)o(uctures)g(using)f(ba)o(ck)o
(gr)o(ound)205 551 y(kno)o(wledge)75 633 y Fj(Another)j(w)o(a)o(y)f(of)g(ev)m
(aluating)i(the)f(disco)o(v)o(ery)g(pro)q(cess)g(is)g(to)f(ev)m(aluate)i(the)
f Fg(inter)n(estingness)d Fj(of)i(the)75 689 y(disco)o(v)o(ered)23
b(substructures.)41 b(The)23 b(determination)g(of)f(this)g(v)m(alue)i(will)g
(c)o(hange)e(from)g(domain)h(to)75 745 y(domain.)d(As)15 b(a)f(result,)h(in)g
(this)g(second)g(set)f(of)h(exp)q(erimen)o(ts)g(w)o(e)f(test)g
Fh(Subdue)p Fj('s)h(abilit)o(y)h(to)e(disco)o(v)o(er)75 802
y(substructures)f(that)g(ha)o(v)o(e)g(already)g(b)q(een)i(lab)q(eled)g(as)e
(imp)q(ortan)o(t)g(b)o(y)g(exp)q(erts)g(in)h(the)g(domains)f(under)75
858 y(consideration.)146 916 y(In)h(the)g(c)o(hemical)h(comp)q(ound)f
(domain,)g(c)o(hemists)h(frequen)o(tly)f(describ)q(e)h(comp)q(ounds)g(in)f
(terms)f(of)75 972 y(the)f(building-bl)q(o)q(c)o(k)j(comp)q(onen)o(ts)d(that)
g(are)f(hea)o(vily)j(used.)19 b(F)l(or)12 b(example,)h(in)g(the)f(rubb)q(er)h
(comp)q(ound)75 1029 y(database)18 b(sho)o(wn)h(in)h(Figure)f(7,)g(the)g
(comp)q(ound)h(is)f(made)g(up)g(of)g(a)f(c)o(hain)i(of)e(structures)h(that)f
(are)75 1085 y(lab)q(eled)23 b(b)o(y)f(c)o(hemists)f(as)g Fg(isopr)n(ene)g
Fj(units.)38 b Fh(Subdue)p Fj('s)22 b(abilit)o(y)g(to)f(re-disco)o(v)o(er)h
(this)f(structure)g(is)75 1142 y(exempli\014ed)14 b(in)e(Figure)g(14a.)18
b(This)12 b(substructure,)g(whic)o(h)g(w)o(as)f(disco)o(v)o(ered)h(using)g
(the)g(MDL)f(principle)75 1198 y(with)16 b(no)f(extra)f(bac)o(kground)h(kno)o
(wledge,)h(represen)o(ts)f(an)g(isoprene)h(unit.)146 1255 y(Although)23
b Fh(Subdue)g Fj(w)o(as)g(able)g(to)f(re-disco)o(v)o(er)i(isoprene)f(units)h
(without)f(extra)f(bac)o(kground)75 1312 y(kno)o(wledge,)14
b(the)f(substructure)g(a\013ording)g(the)g(most)f(compression)i(will)h(not)d
(alw)o(a)o(ys)h(b)q(e)h(the)f(most)f(in-)75 1368 y(teresting)h(or)f(imp)q
(ortan)o(t)g(substructure)g(in)i(the)e(database.)19 b(F)l(or)11
b(example,)j(in)f(the)g(cortisone)g(database)75 1425 y(the)j
Fg(b)n(enzene)f(ring)g Fj(whic)o(h)i(consists)f(of)g(a)g(ring)g(of)f(carb)q
(ons)h(is)h(not)e(disco)o(v)o(ered)i(using)g(only)f(the)g(MDL)75
1481 y(principle.)25 b(Ho)o(w)o(ev)o(er,)15 b(the)h(additional)i(bac)o
(kground)e(rules)h(can)f(b)q(e)h(used)f(to)g(increase)h(the)f(c)o(hance)g(of)
75 1538 y(\014nding)h(in)o(teresting)f(substructures)g(in)g(these)g(domains.)
21 b(In)16 b(the)g(case)f(of)g(the)h(cortisone)g(comp)q(ound,)75
1594 y(w)o(e)i(kno)o(w)f(that)g(the)h(in)o(teresting)h(structures)e(exhibit)j
(a)e(c)o(haracteristic)g(of)f(closure.)29 b(Therefore,)18 b(w)o(e)75
1651 y(giv)o(e)13 b(a)g(strong)g(w)o(eigh)o(t)g(\(8.0\))e(to)i(the)g
Fg(c)n(omp)n(actness)f Fj(bac)o(kground)h(rule)h(and)f(use)h(a)f(matc)o(h)g
(threshold)g(of)75 1707 y(0.2)i(to)g(allo)o(w)h(for)f(deviations)i(in)g(the)f
(b)q(enzene)h(ring)f(instances.)23 b(In)16 b(the)g(resulting)h(output,)e
Fh(Subdue)75 1763 y Fj(\014nds)h(the)f(b)q(enzene)i(ring)f(sho)o(wn)f(in)h
(Figure)f(15.)146 1821 y(In)k(the)h(same)e(w)o(a)o(y)l(,)h(w)o(e)g(can)g(use)
h(the)f(bac)o(kground)g(rules)h(to)e(\014nd)i(the)f(p)q(encil)j(substructure)
d(in)75 1877 y(the)d(image)h(data.)22 b(When)17 b(the)f(image)h(in)g(Figure)f
(9)g(is)h(view)o(ed,)g(the)f(substructure)h(of)f(in)o(terest)g(is)h(the)75
1934 y(p)q(encil)h(in)f(its)f(v)m(arious)h(forms.)k(Ho)o(w)o(ev)o(er,)15
b(the)h(substructure)g(that)f(a\013orded)g(the)h(most)f(compression)75
1990 y(do)q(es)g(not)g(mak)o(e)f(up)h(an)g(en)o(tire)g(p)q(encil.)22
b(W)l(e)15 b(kno)o(w)f(that)g(the)h(p)q(encils)i(ha)o(v)o(e)e(a)f(high)i
(degree)f(of)f(closure)75 2047 y(and)i(of)f(co)o(v)o(erage,)f(so)i(the)f(w)o
(eigh)o(ts)h(for)f(these)g(rules)i(are)e(set)g(to)g(1.0.)21
b(With)16 b(these)f(w)o(eigh)o(ts,)g Fh(Subdue)75 2103 y Fj(is)j(able)g(to)f
(\014nd)i(the)e(p)q(encil)j(substructure)e(sho)o(wn)f(in)i(Figure)e(16)g(for)
g(all)i(tested)e(matc)o(h)g(thresholds)75 2160 y(b)q(et)o(w)o(een)f(0.0)e
(and)h(1.0.)75 2291 y Fl(8.)24 b(Hierarc)n(hical)17 b(Concept)i(Disco)n(v)n
(ery)75 2378 y Fj(After)13 b(a)h(substructure)g(is)g(disco)o(v)o(ered,)g(eac)
o(h)g(instance)h(of)e(the)h(substructure)g(in)h(the)f(input)g(graph)g(can)75
2434 y(b)q(e)f(replaced)g(b)o(y)f(a)f(single)i(v)o(ertex)f(represen)o(ting)g
(the)g(en)o(tire)h(substructure.)19 b(The)12 b(disco)o(v)o(ery)g(pro)q
(cedure)75 2491 y(can)g(then)h(b)q(e)f(rep)q(eated)h(on)f(the)g(compressed)h
(data)e(set,)h(resulting)h(in)g(new)f(in)o(teresting)h(substructures.)75
2547 y(If)g(the)f(newly-disco)o(v)o(ered)i(substructures)e(are)h(de\014ned)g
(in)g(terms)f(of)g(existing)h(substructure)g(concepts,)75 2604
y(the)i(substructure)h(de\014nitions)h(form)d(a)h(hierarc)o(h)o(y)g(of)g
(substructure)h(concepts.)944 2728 y Fk(249)p eop
%%Page: 250 20
250 19 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)871 103 y
 3289088 6907085 16379658 30193827 19668746 37100912 startTexFig
 871
103 a
%%BeginDocument: figures/r-pencils1.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
[ 1 0 0 1 -166 198 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .666667 0 0 .666667 433 243.5 ] concat
96 261 131 261 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .666667 0 0 .91892 433 262.146 ] concat
86 246 86 177 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .666667 0 0 .91892 473 262.146 ] concat
86 246 86 177 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .666667 0 0 .666667 433 322.833 ] concat
96 261 131 261 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .666667 0 0 .666667 318.334 209.5 ] concat
257 301 277 271 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .666667 0 0 .666667 318.334 209.5 ] concat
319 301 297 271 Line
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 408 165 ] concat
81 251 10 10 Elli
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 448 165 ] concat
81 251 10 10 Elli
End

Begin %I Pict
[ 1 0 0 1 20 -29 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 408 165 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 486 421 ] concat
[
(l)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 0 80 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 408 165 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 486 421 ] concat
[
(l)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 40 80 ] concat

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ 1 0 0 1 408 165 ] concat
81 251 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 486 421 ] concat
[
(l)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.33333 0 0 1.33333 485.5 421.833 ] concat
[
(a)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.33333 0 0 1.33333 526 421.833 ] concat
[
(a)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 435 639 a Fj(Figure)g(16:)j(P)o(encil)e(substructure)e(disco)o(v)o(ered)h(b)
o(y)f Fh(Subdue)p Fj(.)146 925 y(Hierarc)o(hical)22 b(concept)f(disco)o(v)o
(ery)g(also)g(adds)f(the)h(capabilit)o(y)h(to)e(impro)o(v)o(e)h
Fh(Subdue)p Fj('s)g(p)q(erfor-)75 982 y(mance.)k(When)17 b
Fh(Subdue)g Fj(is)h(applied)g(to)f(a)f(large)h(input)h(graph,)e(the)h
(complexit)o(y)h(of)e(the)h(algorithm)75 1038 y(prev)o(en)o(ts)f
(consideration)i(of)e(larger)h(substructures.)25 b(Using)17
b(hierarc)o(hical)h(concept)g(disco)o(v)o(ery)l(,)f Fh(Sub-)75
1094 y(due)e Fj(can)g(\014rst)f(disco)o(v)o(er)g(those)h(smaller)g
(substructures)f(whic)o(h)i(b)q(est)e(compress)h(the)f(data.)19
b(Applying)75 1151 y(the)e(compression)g(reduces)h(the)f(graph)f(to)g(a)h
(more)f(manageable)h(size,)h(increasing)g(the)f(c)o(hance)h(that)75
1207 y Fh(Subdue)e Fj(will)h(\014nd)f(the)f(larger)g(substructures)g(on)g
(the)h(subsequen)o(t)f(passes)h(through)e(the)i(database.)146
1315 y(Once)i Fh(Subdue)h Fj(selects)g(a)e(substructure,)h(all)h(v)o(ertices)
f(that)g(comprise)g(the)g(exact)g(instances)g(of)75 1372 y(the)g
(substructure)h(are)e(replaced)j(in)f(the)f(graph)g(b)o(y)g(a)g(single)i(v)o
(ertex)d(represen)o(ting)i(the)f(disco)o(v)o(ered)75 1428 y(substructure.)i
(Edges)14 b(connecting)i(v)o(ertices)f(outside)g(the)g(instance)g(to)f(v)o
(ertices)h(inside)h(the)f(instance)75 1485 y(no)o(w)f(connect)i(to)e(the)h
(new)g(v)o(ertex.)k(Edges)c(in)o(ternal)g(to)g(the)f(instance)i(are)f(remo)o
(v)o(ed.)k(The)c(disco)o(v)o(ery)75 1541 y(pro)q(cess)h(is)h(then)f(applied)h
(to)f(the)g(compressed)g(data.)21 b(If)16 b(a)g(hierarc)o(hical)h
(description)h(of)d(concepts)h(is)75 1598 y(particularly)i(desired,)g(hea)o
(vier)f(w)o(eigh)o(t)f(can)h(b)q(e)g(giv)o(en)h(to)e(substructures)g(whic)o
(h)i(utilize)h(previously)75 1654 y(disco)o(v)o(ered)13 b(substructures.)19
b(The)13 b(increased)g(w)o(eigh)o(t)f(re\015ects)h(increased)g(atten)o(tion)f
(to)g(this)h(substruc-)75 1710 y(ture.)22 b(Figure)16 b(17)g(illustrates)h
(the)f(compressed)g(rubb)q(er)h(comp)q(ound)f(graph)g(using)h(the)f
(substructure)75 1767 y(sho)o(wn)f(in)h(Figure)f(14a.)146 1875
y(T)l(o)10 b(demonstrate)h(the)g(abilit)o(y)h(of)e Fh(Subdue)i
Fj(to)e(\014nd)i(a)e(hierarc)o(h)o(y)i(of)e(substructures,)i(w)o(e)f(let)g
(the)g(sys-)75 1931 y(tem)i(mak)o(e)g(m)o(ultiple)i(passes)e(through)g(a)g
(database)g(that)f(represen)o(ts)h(a)g(p)q(ortion)h(of)f(a)g(DNA)g(molecule.)
75 1988 y(Figure)k(8)f(sho)o(ws)g(a)g(p)q(ortion)h(of)f(t)o(w)o(o)f(c)o
(hains)i(of)g(a)f(double)i(helix,)g(using)f(three)g(pairs)f(of)h(bases)f
(whic)o(h)75 2044 y(are)e(held)h(together)f(b)o(y)g(h)o(ydrogen)g(b)q(onds.)
20 b(Figure)14 b(18)g(sho)o(ws)f(the)i(substructures)f(found)g(b)o(y)g
Fh(Subdue)75 2101 y Fj(after)i(eac)o(h)h(of)f(three)h(passes)g(through)g(the)
f(data.)25 b(Note)16 b(that,)g(on)h(the)g(third)g(pass,)g Fh(Subdue)g
Fj(link)o(ed)75 2157 y(together)11 b(the)i(instances)g(of)f(the)g
(substructure)g(in)i(the)e(second)h(pass)f(to)f(\014nd)i(the)g(c)o(hains)g
(of)e(the)i(double)75 2214 y(helix.)146 2321 y(Although)i(replacing)h(p)q
(ortions)g(of)e(the)h(input)h(graph)f(with)g(the)g(disco)o(v)o(ered)h
(substructures)f(com-)75 2378 y(presses)h(the)f(data)g(and)h(pro)o(vides)g(a)
f(basis)h(for)f(disco)o(v)o(ering)i(hierarc)o(hical)g(concepts)f(in)h(the)e
(data,)g(the)75 2434 y(substructure)e(replacemen)o(t)g(pro)q(cedure)g(b)q
(ecomes)g(more)f(complicated)i(when)f(concepts)g(with)f(inexact)75
2491 y(instances)18 b(are)f(disco)o(v)o(ered.)27 b(When)17
b(inexact)h(instances)g(of)f(a)g(disco)o(v)o(ered)h(concept)g(are)f(replaced)
h(b)o(y)75 2547 y(a)g(single)i(v)o(ertex)e(in)i(the)e(data,)h(all)g
(distortions)g(of)f(the)h(graph)f(\(di\013erences)i(b)q(et)o(w)o(een)e(the)h
(instance)75 2604 y(graph)13 b(and)h(the)g(substructure)f(de\014nition\))j(m)
o(ust)c(b)q(e)j(attac)o(hed)e(as)g(annotations)g(to)g(the)h(v)o(ertex)f(lab)q
(el.)944 2728 y Fk(250)p eop
%%Page: 251 21
251 20 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)212
554 y
 24076124 22760489 11511808 21247508 35587932 44007997 startTexFig
 212 554 a
%%BeginDocument: figures/h2.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
[ 1 0 0 1 -173 53 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 539 713 ] concat
[
(S  =)
] Text
End

Begin %I Pict
[ 1 0 0 1 136 59 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 487.735 649.422 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 522.735 649.422 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 396.735 478.922 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 396.735 475.922 ] concat
197 336 248 336 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 453.235 626.922 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 465.235 621.422 ] concat
[
(2)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 453.735 680.922 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 466.235 675.922 ] concat
[
(3)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 396.735 478.922 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 396.735 478.922 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 547.735 678.422 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 396.735 478.922 ] concat
264 339 302 380 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 548.735 628.422 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 560.735 622.922 ] concat
[
(2)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 396.735 478.922 ] concat
264 325 301 296 Line
End

End %I eop

Begin %I Rect
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ .59375 0 0 1 440.5 277 ] concat
148 389 462 474 Rect
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 543 707 ] concat
[
(1)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 367.594 833 ] concat
[
(Highest-valued substructure)
] Text
End

Begin %I Pict
[ 1 0 0 1 -41.7701 -17 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331.594 600 ] concat
[
(S)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 96.5938 197 ] concat
240 396 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 381.594 590 ] concat
[
(S)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 146.594 187 ] concat
240 396 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 431.594 600 ] concat
[
(S)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 196.594 197 ] concat
240 396 10 10 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .8 0 0 1 227.844 147.5 ] concat
155 441 182 441 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .8 0 0 1 277.844 147.5 ] concat
155 441 182 441 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 481.594 590 ] concat
[
(S)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 246.594 187 ] concat
240 396 10 10 Elli
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 531.594 600 ] concat
[
(S)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 296.594 197 ] concat
240 396 10 10 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .8 0 0 1 327.844 147.5 ] concat
155 441 182 441 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .8 0 0 1 377.844 147.5 ] concat
155 441 182 441 Line
End

Begin %I Pict
[ .582857 0 0 .728572 267.886 -22.7282 ] concat

Begin %I Pict
[ 1 0 0 1 -158 160 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 239 568 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 568 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 394.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 10.5 12.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 6.5 -2.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 597 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 106 14 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
264 325 301 296 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 223 676 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 258 676 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 132 505.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 132 502.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 -4.5 173.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 -13.5 49.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 132 505.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 132 505.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 288 651 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 132 505.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 93 175 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 132 505.5 ] concat
264 325 301 296 Line
End

Begin %I Pict
[ 1 0 0 1 135 162 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 239 568 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 568 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 394.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 10.5 12.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 6.5 -2.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 597 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 106 14 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
264 325 301 296 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 520 678 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 555 678 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 429 507.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 429 504.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 288.5 175.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 282.5 51.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 429 507.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 429 507.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 585 657 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 429 507.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 389 175 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 429 507.5 ] concat
264 325 301 296 Line
End

Begin %I Pict
[ 1 0 0 1 428 164 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 239 568 ] concat
[
(C)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 568 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
197 336 248 336 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 394.5 ] concat
197 336 248 336 Line
End

Begin %I Pict
[ 1 0 0 1 10.5 12.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 6.5 -2.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 198.5 602 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 211 597 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
144 378 177 343 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
142 290 182 325 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 299 597 ] concat
[
(H)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
264 339 302 380 Line
End

Begin %I Pict
[ 1 0 0 1 106 14 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 194 533 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 206 527.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ .5 0 0 .5 148 397.5 ] concat
264 325 301 296 Line
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 5 261.5 ] concat
155 441 182 441 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 153 263.5 ] concat
155 441 182 441 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 298 262.5 ] concat
155 441 182 441 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 448 263.5 ] concat
155 441 182 441 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 289.594 510 ] concat
[
(=)
] Text
End

Begin %I Rect
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.22995 0 0 1.22785 154.588 287.848 ] concat
89 111 457 262 Rect
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 272.594 598 ] concat
[
(G  =)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 336.594 595 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 386.594 584.5 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 437.094 595 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 486.594 585 ] concat
[
(1)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 537.094 595 ] concat
[
(1)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 310.594 625 ] concat
[
(Compressed graph using discovered substructure)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 403 2094 a Fj(Figure)g(17:)j(Compressed)c(graph)g(for)g(rubb)q(er)h(comp)q
(ound)g(data.)944 2728 y Fk(251)p eop
%%Page: 252 22
252 21 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)56 250 y
 29009756 32364626 6512394 6643957 35522150 39008583 startTexFig
 56 250
a
%%BeginDocument: figures/h1.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def




Begin
[ .8 0 0 .8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
[ 1 0 0 1 287.542 40.9097 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 680.5 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 342.5 675.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 584.171 541.01 ] concat
161 429 198 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 584.171 541.01 ] concat
144 466 160 429 Line
End

Begin %I Pict
[ -1 0 0 -1 1272.58 1389.19 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .228571 0 0 .342857 600.628 541.01 ] concat
178 495 144 466 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 642.042 716.91 ] concat
[
(O)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 578.171 587.696 ] concat
144 466 160 429 Line
End

Begin %I Pict
[ 1 0 0 1 410.434 -53.1807 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 151.807 765.542 ] concat
[
(S  =)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 159.398 760.12 ] concat
[
(1)
] Text
End

End %I eop

Begin %I Rect
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 501 288 ] concat
49 372 169 450 Rect
End

Begin %I Pict
[ 1 0 0 1 44 -170 ] concat

Begin %I Pict
[ 1 0 0 1 309.193 18.8073 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 231.629 563.6 ] concat
161 429 198 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 231.629 563.6 ] concat
198 429 214 465 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 249.155 563.6 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .228571 0 0 .342857 248.086 563.6 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 231.629 563.6 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 289.5 739.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 225.629 610.286 ] concat
144 466 160 429 Line
End

Begin %I Pict
[ 1 0 0 1 -65 63.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 680.5 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 342.5 675.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 213.629 631.286 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 257.5 765 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 126.5 523.5 ] concat
320 375 307 357 Line
End

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 704 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 114.5 507.5 ] concat
320 375 307 357 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 264.5 684.5 ] concat
[
(P)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 276.295 560.741 ] concat
320 375 307 357 Line
End

Begin %I Pict
[ 1 0 0 1 149.795 37.2409 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 704 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 114.5 507.5 ] concat
320 375 307 357 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 414.295 721.741 ] concat
[
(P)
] Text
End

Begin %I Pict
[ 1 0 0 1 75.9036 134.458 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 356.747 633.253 ] concat
[
(S)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 364.337 627.831 ] concat
[
(1)
] Text
End

End %I eop

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 203.855 305.783 ] concat
217 419 12 11 Elli
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 203.855 305.783 ] concat
237 417 226 410 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 460.843 763.374 ] concat
[
(C)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 203.855 305.783 ] concat
238 421 227 429 Line
End

Begin %I Pict
[ 1 0 0 1 19.518 -14.0964 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 348.072 753.614 ] concat
[
(S  =)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 354.578 748.193 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Pict
[ 1 0 0 1 19.518 -14.0964 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 348.072 753.614 ] concat
[
(S  =)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 354.578 748.193 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 504 737 ] concat
[
(=)
] Text
End

Begin %I Rect
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1 0 0 1 304 365 ] concat
44 324 321 429 Rect
End

End %I eop

Begin %I Pict
[ 1 0 0 1 130 -132 ] concat

Begin %I Pict

Begin %I Pict
[ 1 0 0 1 172.663 -170.662 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 249.629 462.6 ] concat
161 429 198 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 249.629 462.6 ] concat
198 429 214 465 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 267.155 462.6 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .228571 0 0 .342857 266.086 462.6 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 249.629 462.6 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 307.5 638.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 243.629 509.286 ] concat
144 466 160 429 Line
End

Begin %I Pict
[ 1 0 0 1 -47 -37.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 680.5 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 342.5 675.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 275.5 664 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 144.5 422.5 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 231.629 563.6 ] concat
161 429 198 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 231.629 563.6 ] concat
198 429 214 465 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 249.155 563.6 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .228571 0 0 .342857 248.086 563.6 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 231.629 563.6 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 289.5 739.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 225.629 610.286 ] concat
144 466 160 429 Line
End

Begin %I Pict
[ 1 0 0 1 -65 63.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 680.5 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 342.5 675.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 213.629 631.286 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 257.5 765 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 126.5 523.5 ] concat
320 375 307 357 Line
End

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 704 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 114.5 507.5 ] concat
320 375 307 357 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 264.5 684.5 ] concat
[
(P)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 242 684 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 227.5 499.5 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 227.5 497.5 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 227.5 501 ] concat
88 360 110 360 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 284 684 ] concat
[
(OH)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 -.5 116.5 852.5 ] concat
320 375 307 357 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 295 562 ] concat
[
(O)
] Text
End

Begin %I Pict
[ 1 0 0 1 19 -102.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 704 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 114.5 507.5 ] concat
320 375 307 357 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 283.5 582 ] concat
[
(P)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 261 581.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 246.5 397 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 246.5 394.5 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 246.5 398.5 ] concat
88 360 110 360 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 303 581.5 ] concat
[
(OH)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 -.5 135.5 750 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .495614 -0.0660819 -0.0660819 -.495614 154.061 852.611 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 268.629 360.6 ] concat
161 429 198 429 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .260571 0 0 .342857 286.155 360.6 ] concat
213 465 178 495 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .228571 0 0 .342857 285.086 360.6 ] concat
178 495 144 466 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 268.629 360.6 ] concat
144 466 160 429 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 326.5 536.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .266667 262.629 407.286 ] concat
144 466 160 429 Line
End

Begin %I Pict
[ 1 0 0 1 -28 -139.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 331 680.5 ] concat
[
(CH)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 342.5 675.5 ] concat
[
(2)
] Text
End

End %I eop

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 163.5 320.5 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .495614 -0.0660819 -0.0660819 -.495614 173.061 750.611 ] concat
320 375 307 357 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 314 459 ] concat
[
(O)
] Text
End

Begin %I Pict
[ 1 0 0 1 38 -205.5 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 274 704 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 114.5 507.5 ] concat
320 375 307 357 Line
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 302.5 479 ] concat
[
(P)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 280 478.5 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 265.5 294 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 265.5 292 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 265.5 295.5 ] concat
88 360 110 360 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 322 478.5 ] concat
[
(OH)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 -.5 154.5 647 ] concat
320 375 307 357 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .342857 0 0 .342857 269.129 360.6 ] concat
198 429 214 465 Line
End

End %I eop

Begin %I Pict
[ 1 0 0 1 -16.265 -165.903 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 294.301 659.723 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 279.801 475.223 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 279.801 473.223 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 296.066 476.723 ] concat
88 360 110 360 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 352.566 659.723 ] concat
[
(OH)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 -.5 169.886 821.717 ] concat
320 375 307 357 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 330.518 562.675 ] concat
[
(O)
] Text
End

Begin %I Pict

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 322.048 662.53 ] concat
[
(S)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 329.639 657.108 ] concat
[
(2)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 92.1684 201.686 ] concat
217 419 12 11 Elli
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 293.217 623.94 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 278.717 439.44 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 278.717 437.44 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 294.982 440.94 ] concat
88 360 110 360 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 351.482 623.94 ] concat
[
(OH)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 -.5 168.802 785.934 ] concat
320 375 307 357 Line
End

Begin %I Pict
[ 1 0 0 1 -1.08432 -35.7831 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 322.048 662.53 ] concat
[
(S)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 329.639 657.108 ] concat
[
(2)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 92.1684 201.686 ] concat
217 419 12 11 Elli
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 293.217 588.157 ] concat
[
(O)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 278.717 403.657 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 278.717 401.657 ] concat
45 364 69 364 Line
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 .5 294.982 405.157 ] concat
88 360 110 360 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 351.482 588.157 ] concat
[
(OH)
] Text
End

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .5 0 0 -.5 168.802 750.151 ] concat
320 375 307 357 Line
End

Begin %I Pict
[ 1 0 0 1 -1.08432 -71.5663 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 322.048 662.53 ] concat
[
(S)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 329.639 657.108 ] concat
[
(2)
] Text
End

Begin %I Elli
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 1.08434 0 0 1.08434 92.1684 201.686 ] concat
217 419 12 11 Elli
End

End %I eop

End %I eop

Begin %I Pict
[ 1 0 0 1 32.5301 1.08432 ] concat

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 193.012 480.361 ] concat
[
(S  =)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1.08434 0 0 1.08434 200.602 476.024 ] concat
[
(3)
] Text
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 383 482 ] concat
[
(=)
] Text
End

End %I eop

Begin %I Rect
2 0 0 [2 2 2 2 2 2 2 2] 15 SetB
0 0 0 SetCFg
1 1 1 SetCBg
none SetP %I p n
[ 2 0 0 2 -86 -101 ] concat
148 182 314 355 Rect
End

End %I eop

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1 0 0 1 128 726 ] concat
[
(Highest-valued substructure)
(after First Pass)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1 0 0 1 132 603 ] concat
[
(Highest-valued substructure)
(after Second Pass)
] Text
End

Begin %I Text
0 0 0 SetCFg
/Courier-Bold 12 SetF
[ 1 0 0 1 137 417 ] concat
[
(Highest-valued substructure)
(after Third Pass)
] Text
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 194 ] concat
104 398 241 398 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
99 518 397 518 Line
End

Begin %I Line
1 0 1 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
0 SetP
[ 1 0 0 1 148 197 ] concat
111 209 188 209 Line
End

Begin %I Pict
[ 1 0 0 1 -.504272 -0.00146484 ] concat

Begin %I Line
1 0 0 [] 0 SetB
0 0 0 SetCFg
1 1 1 SetCBg
1 SetP
[ .228571 0 0 .342857 600.628 541.01 ] concat
178 495 144 466 Line
End

Begin %I Text
0 0 0 SetCFg
/Courier 10 SetF
[ 1 0 0 1 642.042 716.91 ] concat
[
(O)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 503 2398 a Fj(Figure)f(18:)20 b(Hierarc)o(hical)d(disco)o(v)o(ery)e(in)h
(DNA)f(data.)944 2728 y Fk(252)p eop
%%Page: 253 23
253 22 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)75
95 y Fl(9.)24 b(Conclusions)75 182 y Fj(Extracting)11 b(kno)o(wledge)i(from)e
(structural)h(databases)f(requires)h(the)g(iden)o(ti\014cation)i(of)d(rep)q
(etitiv)o(e)i(sub-)75 239 y(structures)g(in)h(the)f(data.)18
b(Substructure)c(disco)o(v)o(ery)f(iden)o(ti\014es)i(in)o(teresting)f(and)f
(rep)q(etitiv)o(e)h(structure)75 295 y(in)i(structural)e(data.)20
b(The)15 b(substructures)g(represen)o(t)g(concepts)g(found)g(in)h(the)f(data)
f(and)h(a)g(means)f(of)75 352 y(reducing)g(the)f(complexit)o(y)h(of)f(the)g
(represen)o(tation)g(b)o(y)g(abstracting)f(o)o(v)o(er)g(instances)i(of)e(the)
i(substruc-)75 408 y(ture.)19 b(W)l(e)c(ha)o(v)o(e)e(sho)o(wn)h(ho)o(w)g(the)
g(minim)o(um)h(description)h(length)f(\(MDL\))e(principle)k(can)d(b)q(e)h
(used)g(to)75 464 y(p)q(erform)e(substructure)g(disco)o(v)o(ery)h(in)g(a)f(v)
m(ariet)o(y)g(of)g(domains.)19 b(The)14 b(substructure)f(disco)o(v)o(ery)h
(pro)q(cess)75 521 y(can)k(also)g(b)q(e)g(guided)h(b)o(y)f(bac)o(kground)f
(kno)o(wledge.)28 b(The)18 b(use)g(of)f(an)h(inexact)g(graph)g(matc)o(h)f
(allo)o(ws)75 577 y(deviation)h(in)h(the)e(instances)h(of)f(a)g
(substructure.)26 b(Once)19 b(a)e(substructure)g(is)h(disco)o(v)o(ered,)g
(instances)75 634 y(of)d(the)g(substructure)g(can)g(b)q(e)h(replaced)g(b)o(y)
f(the)g(concept)h(de\014nition,)g(a\013ording)f(compression)g(of)g(the)75
690 y(data)g(description)h(and)g(pro)o(viding)g(a)f(basis)g(for)g(disco)o(v)o
(ering)h(hierarc)o(hically-de\014ne)q(d)i(structures.)146 747
y(F)l(uture)13 b(w)o(ork)g(will)i(com)o(bine)f(structural)f(disco)o(v)o(ery)h
(with)g(disco)o(v)o(ery)f(of)g(concepts)h(using)g(a)g(linear-)75
804 y(based)g(represen)o(tation)f(suc)o(h)g(as)g(AutoClass)g(\(Cheeseman,)g
(Kelly)l(,)j(Self,)e(Stutz,)f(T)l(a)o(ylor,)g(&)g(F)l(reeman,)75
860 y(1988\).)37 b(In)22 b(particular,)h(w)o(e)e(will)i(use)f
Fh(Subdue)g Fj(to)f(compress)g(the)g(data)g(fed)h(to)e(AutoClass,)j(and)75
917 y(let)18 b Fh(Subdue)h Fj(ev)m(aluate)g(the)f(in)o(teresting)g
(structures)g(in)g(the)g(classes)h(generated)f(b)o(y)g(AutoClass.)27
b(In)75 973 y(addition,)20 b(w)o(e)f(will)h(b)q(e)g(dev)o(eloping)g(a)e
(parallel)j(implemen)o(tation)f(of)e(the)h Fh(A)o(utoClass)g(/)i(Subdue)75
1029 y Fj(system)13 b(that)f(will)j(enable)f(application)h(of)d(substructure)
h(disco)o(v)o(ery)h(to)e(larger)h(structural)g(databases.)75
1160 y Fl(Ac)n(kno)n(wledgemen)n(ts)75 1247 y Fj(This)18 b(pro)s(ject)f(is)h
(supp)q(orted)g(b)o(y)f(NASA)h(gran)o(t)e(NAS5-32337.)26 b(The)17
b(authors)g(w)o(ould)h(lik)o(e)g(to)f(thank)75 1303 y(Mik)o(e)h(Sha)o(y)g(at)
g(National)g(Semiconductor)i(for)d(pro)o(viding)i(the)f(circuit)i(data.)28
b(W)l(e)18 b(w)o(ould)h(also)f(lik)o(e)75 1360 y(to)d(thank)h(Surnjani)h
(Djok)o(o)d(and)j(T)l(om)e(Lai)i(for)e(their)h(help)h(with)g(this)f(pro)s
(ject.)21 b(Thanks)16 b(also)g(to)f(the)75 1416 y(review)o(ers)g(for)g(their)
h(n)o(umerous)f(insigh)o(tful)i(commen)o(ts.)75 1547 y Fl(References)75
1634 y Fj(Bunk)o(e,)g(H.,)e(&)i(Allermann,)g(G.)e(\(1983\).)21
b(Inexact)c(graph)f(matc)o(hing)g(for)f(structural)h(pattern)g(recog-)189
1690 y(nition.)21 b Fg(Pattern)16 b(R)n(e)n(c)n(o)n(gnition)e(L)n(etters)p
Fj(,)g Fg(1)6 b Fj(\(4\),)14 b(245{253.)75 1786 y(Cheeseman,)h(P)l(.,)f
(Kelly)l(,)i(J.,)f(Self,)g(M.,)e(Stutz,)i(J.,)f(T)l(a)o(ylor,)g(W.,)g(&)h(F)l
(reeman,)f(D.)g(\(1988\).)j(Auto)q(class:)189 1843 y(A)e(ba)o(y)o(esian)h
(classi\014cation)h(system.)k(In)c Fg(Pr)n(o)n(c)n(e)n(e)n(dings)d(of)j(the)g
(Fifth)g(International)e(Workshop)189 1899 y(on)h(Machine)f(L)n(e)n(arning)p
Fj(,)e(pp.)j(54{64.)75 1995 y(Conklin,)f(D.,)d(&)i(Glasgo)o(w,)f(J.)h
(\(1992\).)h(Spatial)g(analogy)e(and)h(subsumption.)k(In)c
Fg(Pr)n(o)n(c)n(e)n(e)n(dings)f(of)i(the)189 2051 y(Ninth)h(International)e
(Machine)i(L)n(e)n(arning)f(Workshop)p Fj(,)g(pp.)h(111{116.)75
2147 y(Derthic)o(k,)f(M.)g(\(1991\).)k(A)c(minimal)i(enco)q(ding)g(approac)o
(h)e(to)g(feature)g(disco)o(v)o(ery)l(.)21 b(In)16 b Fg(Pr)n(o)n(c)n(e)n(e)n
(dings)e(of)189 2203 y(the)i(Ninth)g(National)g(Confer)n(enc)n(e)e(on)i(A)o
(rti\014cial)g(Intel)r(ligenc)n(e)p Fj(,)c(pp.)j(565{571.)75
2299 y(Fisher,)e(D.)e(H.)g(\(1987\).)i(Kno)o(wledge)g(acquisition)g(via)g
(incremen)o(tal)g(conceptual)g(clustering.)i Fg(Machine)189
2356 y(L)n(e)n(arning)p Fj(,)e Fg(2)6 b Fj(\(2\),)14 b(139{172.)75
2451 y(F)l(u,)h(K.)g(S.)g(\(1982\).)j Fg(Syntactic)e(Pattern)g(R)n(e)n(c)n(o)
n(gnition)e(and)j(Applic)n(ations)p Fj(.)h(Pren)o(tice-Hall.)75
2547 y(Holder,)12 b(L.)f(B.,)g(Co)q(ok,)g(D.)f(J.,)i(&)f(Bunk)o(e,)h(H.)f
(\(1992\).)g(F)l(uzzy)g(substructure)h(disco)o(v)o(ery)l(.)h(In)e
Fg(Pr)n(o)n(c)n(e)n(e)n(dings)189 2604 y(of)16 b(the)h(Ninth)e(International)
g(Machine)h(L)n(e)n(arning)f(Confer)n(enc)n(e)p Fj(,)d(pp.)k(218{223.)944
2728 y Fk(253)p eop
%%Page: 254 24
254 23 bop 801 -125 a Fn(Cook)16 b(&)g(Holder)75 95 y Fj(Holder,)i(L.)g(B.,)e
(&)i(Co)q(ok,)f(D.)g(J.)g(\(1993\).)25 b(Disco)o(v)o(ery)17
b(of)g(inexact)h(concepts)g(from)f(structural)g(data.)189 152
y Fg(IEEE)e(T)m(r)n(ansactions)f(on)i(Know)r(le)n(dge)g(and)g(Data)h(Engine)n
(ering)p Fj(,)c Fg(5)6 b Fj(\(6\),)14 b(992{994.)75 244 y(Jeltsc)o(h,)i(E.,)f
(&)h(Kreo)o(wski,)f(H.)h(J.)f(\(1991\).)20 b(Grammatical)15
b(inference)i(based)f(on)f(h)o(yp)q(eredge)i(replace-)189 300
y(men)o(t.)h(In)d Fg(F)m(ourth)g(International)f(Workshop)j(on)e(Gr)n(aph)h
(Gr)n(ammars)g(and)f(Their)h(Applic)n(ation)189 357 y(to)g(Computer)h(Scienc)
n(e)p Fj(,)c(pp.)j(461{474.)75 448 y(Leclerc,)i(Y.)f(G.)f(\(1989\).)22
b(Constructing)17 b(simple)h(stable)f(descriptions)h(for)f(image)f
(partitioning.)26 b Fg(In-)189 505 y(ternational)16 b(journal)g(of)g
(Computer)h(Vision)p Fj(,)d Fg(3)6 b Fj(\(1\),)14 b(73{102.)75
597 y(Levinson,)20 b(R.)f(\(1984\).)27 b(A)19 b(self-organizing)g(retriev)m
(al)h(system)e(for)g(graphs.)29 b(In)19 b Fg(Pr)n(o)n(c)n(e)n(e)n(dings)d(of)
k(the)189 653 y(Se)n(c)n(ond)15 b(National)h(Confer)n(enc)n(e)e(on)i(A)o
(rti\014cial)f(Intel)r(ligenc)n(e)p Fj(,)d(pp.)k(203{206.)75
745 y(Mic)o(halski,)f(R.)f(S.,)f(&)i(Stepp,)f(R.)g(E.)f(\(1983\).)j(Learning)
f(from)e(observ)m(ation:)20 b(Conceptual)14 b(clustering.)189
802 y(In)19 b(Mic)o(halski,)h(R.)e(S.,)h(Carb)q(onell,)h(J.)f(G.,)f(&)g(Mitc)
o(hell,)j(T.)d(M.)f(\(Eds.\),)h Fg(Machine)h(L)n(e)n(arning:)189
858 y(A)o(n)c(A)o(rti\014cial)g(Intel)r(ligenc)n(e)f(Appr)n(o)n(ach,)j(V)m
(ol.)e(I)p Fj(,)f(pp.)i(331{363.)d(Tioga)h(Publishing)k(Compan)o(y)l(.)75
950 y(Miclet,)e(L.)f(\(1986\).)j Fg(Structur)n(al)f(Metho)n(ds)f(in)f
(Pattern)h(R)n(e)n(c)n(o)n(gnition)p Fj(.)i(Chapman)d(and)h(Hall.)75
1042 y(P)o(ednault,)22 b(E.)e(P)l(.)f(D.)h(\(1989\).)33 b(Some)20
b(exp)q(erimen)o(ts)i(in)f(applying)g(inductiv)o(e)h(inference)g(principles)
189 1099 y(to)17 b(surfa)h(ce)h(reconstruction.)30 b(In)19
b Fg(Pr)n(o)n(c)n(e)n(e)n(dings)d(of)k(the)f(International)f(Joint)h(Confer)n
(enc)n(e)e(on)189 1155 y(A)o(rti\014cial)e(Intel)r(ligenc)n(e)p
Fj(,)d(pp.)j(1603{1609.)75 1247 y(P)o(en)o(tland,)21 b(A.)f(\(1989\).)31
b(P)o(art)19 b(segmen)o(tation)h(for)f(ob)s(ject)g(recognition.)35
b Fg(Neur)n(al)20 b(Computation)p Fj(,)h Fg(1)p Fj(,)189 1303
y(82{91.)75 1395 y(Prather,)g(R.)f(\(1976\).)34 b Fg(Discr)n(ete)20
b(Mathemetic)n(al)h(Structur)n(es)g(for)g(Computer)h(Scienc)n(e)p
Fj(.)34 b(Hough)o(ton)189 1452 y(Mi\016n)15 b(Compan)o(y)l(.)75
1544 y(Quinlan,)h(J.)e(R.,)g(&)h(Riv)o(est,)f(R.)g(L.)h(\(1989\).)h
(Inferring)f(decision)h(trees)e(using)h(the)f(minim)o(um)i(descrip-)189
1600 y(tion)f(length)h(principle.)23 b Fg(Information)15 b(and)i(Computation)
p Fj(,)e Fg(80)p Fj(,)h(227{248.)75 1692 y(Rao,)h(R.)g(B.,)g(&)g(Lu,)h(S.)f
(C.)g(\(1992\).)24 b(Learning)18 b(engineering)h(mo)q(dels)f(with)f(the)g
(minim)o(um)i(descrip-)189 1749 y(tion)e(length)i(principle.)29
b(In)18 b Fg(Pr)n(o)n(c)n(e)n(e)n(dings)e(of)j(the)f(T)m(enth)f(National)h
(Confer)n(enc)n(e)f(on)h(A)o(rti\014cial)189 1805 y(Intel)r(ligenc)n(e)p
Fj(,)12 b(pp.)j(717{722.)75 1897 y(Rissanen,)e(J.)d(\(1989\).)h
Fg(Sto)n(chastic)h(Complexity)g(in)g(Statistic)n(al)f(Inquiry)p
Fj(.)i(W)l(orld)e(Scien)o(ti\014c)i(Publishing)189 1954 y(Compan)o(y)l(.)75
2046 y(Sc)o(halk)o(o\013,)g(R.)h(J.)g(\(1992\).)h Fg(Pattern)g(R)n(e)n(c)n(o)
n(gnition:)k(Statistic)n(al,)14 b(Structur)n(al)h(and)g(Neur)n(al)g(Appr)n(o)
n(aches)p Fj(.)189 2102 y(John)g(Wiley)i(&)e(Sons.)75 2194
y(Segen,)f(J.)g(\(1990\).)h(Graph)e(clustering)i(and)e(mo)q(del)i(learning)f
(b)o(y)g(data)f(compression.)k(In)d Fg(Pr)n(o)n(c)n(e)n(e)n(dings)189
2250 y(of)i(the)h(Seventh)e(International)g(Machine)h(L)n(e)n(arning)e
(Workshop)p Fj(,)i(pp.)f(93{101.)75 2342 y(Thompson,)f(K.,)g(&)h(Langley)l(,)
g(P)l(.)g(\(1991\).)h(Concept)f(formation)f(in)h(structured)g(domains.)k(In)c
(Fisher,)189 2399 y(D.)g(H.,)f(&)i(P)o(azzani,)g(M.)f(\(Eds.\),)f
Fg(Conc)n(ept)i(F)m(ormation:)21 b(Know)r(le)n(dge)16 b(and)h(Exp)n(erienc)n
(e)e(in)h(Un-)189 2455 y(sup)n(ervise)n(d)f(L)n(e)n(arning)p
Fj(,)e(c)o(hap.)i(5.)f(Morgan)h(Kaufmann)g(Publishers,)i(Inc.)75
2547 y(W)l(altz,)e(D.)g(\(1975\).)20 b(Understanding)c(line)i(dra)o(wings)d
(of)g(scenes)i(with)f(shado)o(ws.)k(In)c(Winston,)g(P)l(.)f(H.)189
2604 y(\(Ed.\),)f Fg(The)i(Psycholo)n(gy)f(of)i(Computer)g(Vision)p
Fj(.)c(McGra)o(w-Hill.)944 2728 y Fk(254)p eop
%%Page: 255 25
255 24 bop 708 -125 a Fn(Substr)o(ucture)16 b(Disco)o(ver)m(y)75
95 y Fj(W)l(ertheimer,)f(M.)f(\(1939\).)i(La)o(ws)f(of)f(organization)g(in)h
(p)q(erceptual)h(forms.)i(In)d(Ellis,)h(W.)e(D.)g(\(Ed.\),)f
Fg(A)189 152 y(Sour)n(c)n(eb)n(o)n(ok)i(of)h(Gestalt)g(Psycholo)n(gy)p
Fj(,)f(pp.)g(331{363.)e(Harcourt,)h(Brace)h(and)g(Compan)o(y)l(.)75
245 y(Winston,)g(P)l(.)g(H.)g(\(1975\).)j(Learning)f(structural)e
(descriptions)i(from)d(examples.)21 b(In)16 b(Winston,)f(P)l(.)g(H.)189
302 y(\(Ed.\),)f Fg(The)i(Psycholo)n(gy)f(of)i(Computer)g(Vision)p
Fj(,)c(pp.)j(157{210.)d(McGra)o(w-Hill.)75 396 y(Y)l(oshida,)18
b(K.,)g(Moto)q(da,)e(H.,)h(&)h(Indurkh)o(y)o(a,)g(N.)f(\(1993\).)24
b(Unifying)19 b(learning)g(metho)q(ds)e(b)o(y)g(colored)189
452 y(digraphs.)36 b(In)22 b Fg(Pr)n(o)n(c)n(e)n(e)n(dings)d(of)i(the)h(L)n
(e)n(arning)d(and)j(Know)r(le)n(dge)e(A)n(c)n(quisition)g(Workshop)j(at)189
509 y(IJCAI-93)p Fj(.)75 602 y(Zahn,)12 b(C.)f(T.)h(\(1971\).)g
(Graph-theoretical)h(metho)q(ds)f(for)f(detecting)i(and)f(describing)h
(gestalt)f(clusters.)189 659 y Fg(IEEE)j(T)m(r)n(ansactions)f(on)i(Computers)
p Fj(,)f Fg(20)6 b Fj(\(1\),)15 b(68{86.)944 2728 y Fk(255)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF


