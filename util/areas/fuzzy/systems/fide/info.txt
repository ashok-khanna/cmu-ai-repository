Return-Path: <fide!aptronix.com!anderson@netcom.com>
Received: from GLINDA.OZ.CS.CMU.EDU by A.GP.CS.CMU.EDU id aa02309;
          28 Jan 94 17:49:25 EST
Received: from uucp6.netcom.com by GLINDA.OZ.CS.CMU.EDU id aa26419;
          28 Jan 94 17:48:37 EST
Received: from fide.UUCP by netcomsv.netcom.com with UUCP (8.6.4/SMI-4.1)
	id OAA03049; Fri, 28 Jan 1994 14:35:54 -0800
Received: by aptronix.com (4.1/SMI-4.1)
	id AA05460; Fri, 28 Jan 94 13:55:28 PST
Date: Fri, 28 Jan 94 13:55:28 PST
From: Taylor Anderson <anderson@aptronix.com>
Message-Id: <9401282155.AA05460@aptronix.com>
To: mkant@GLINDA.OZ.CS.CMU.EDU
Subject: Re: FTP site for Fide 2.0 Demo


Mark, 

The rest of this file contains all the info you asked for.  
The tar'ed demo will be sent to you shortly.  Thanks for your help...
when the demo is in place, let me know the ftp site name, and the
directory location.  

Taylor



TOOL DESCRIPTION
================

Fide is a PC based fuzzy logic design tool that runs under Windows.  Fide 
provides the tools for the development, debugging and simulation of
your fuzzy application.

The complete version of FIDE 2.0 features: 

  	a graphical membership function editor
	
        a rule matrix editor
	
        a "Tracer" tool to trace inference unit output back to the 
            contributing rules
	
        a tool for the graphical depiction of the inference unit transfer 
           function
	
        a signal generator for driving the inference unit

        generation in ANSI C, Matlab script, and Assembly code for they
             MC6805,MC6808, MC68HC05, MC68HC11, MC68HC16, and MC68HC33x 
             Motorola micro controller chips
	
       a Composer tool where the inference unit may be integrated into a block 
             diagram of the complete system for further debugging and        
             development.

The demo version is operational only with the six examples included: ABS.FIL, 
FANRULE1.FIL, FANRULE2.FIL, PNDRULE2.FIL, PNDRULE1.FIL, TRUCK.FIL. FIDE Demo 
capabilities are limited:

	You cannot save files

        The FIDE Compiler is disabled

        The Real Time Code (RTC) generator is disabled
	
        The Make functions of the Composer application are disabled -- examples 
             are already made

All other features are fully functional for the included examples. Also, sample 
RTC output files for the supported Motorola micro-controller chips have 
been included.

HARDWARE/ SOFTWARE REQUIREMENTS
===============================

To run the demo, the following is required:

     An IBM type PC with a 386 or higher microprocessor
     MS Windos 3.0 or higher (OS/2 works as well)
     DOS 3.3 or higher
     5Mb Hard Drive disk space
     4Mb RAM

CONTACT INFORMATION
===================

Please contact Aptronix at:

		Aptronix, Inc.
		2150 North First Street, Suite 300
		San Jose, CA 95131, USA

		Voice:	(408) 428-1888
		FAX:	(408) 428-1884
		BBS:	(408) 428-1883  (N/8/1, 2400-14400)
		E-Mail: info@aptronix.com

KEYWORDS
========

Aptronix, Fide, FIDE, fuzzy logic


OTHER PERTINENT INFO
====================


***INSTALLATION***

Insert the demo disk into your PC.  To install FIDE from Windows, select the 
"Run" command from the "Program Manager" "File" menu.  When prompted for file 
to run, select or type "a:\setup.exe".  If installing from DOS prompt, 
type "win a:\setup".

***RUNNING AN EXAMPLE***

To open FIDE, double click on the "FIDE 2.0 Demo" icon.

To open an example, select "Open" from the "File" menu and a dialog box will 
appear.  Select the "FIDE20\EXAMPLES" directory.  Then select the "PEND" 
directory and open either PNDRULE1.FIL or PNDRULE2.FIL to examine the inverted 
pendulum fuzzy controller.`


Upon opening, an ASCII text file will be displayed in the window.  This file 
represents the FIDE source code used to define the inputs, outputs, membership 
functions, and rules used in the controller.  The FIDE compiler has been 
disabled, however demo files have already been compiled for you.  To view the 
membership functions, select the "MF-Edit" command from the Graphics menu.  To 
view the rules in a rule matrix format, select "Rule Matrix".  To Trace the 
controller output through the inference process, experiment with the "Tracer" 
command of the "Debug" menu.  For graphical descriptions of the controller's 
transfer function, experiment with the "Analyzer" command from the same menu.  
To drive the inference unit with signals and examine inference unit response, 
select the "Simulator" command from the "Debug" menu.  The "Help" menu can help 
you use these tools.  Other examples may be viewed as well, just be sure that 
they have a .FIL extension.

To examine a complete system simulation, select the "Switch to Composer" 
command from the "Composer" menu.  A separate window will open.  Open a file
with a .GNK filename extension from one of the "EXAMPLES" subdirectories,
and experiment with the commands listed under the "Debug" menu.  Be sure to 
select the "Run" command first... this will establish the data files used in 
other "Debug" menu commands.  Again, the "Help" menu should aid you in your 
experimentation.

