
This is a list of the most important changes made between Versions 3.0
and 3.1.116 of the Xerion Neural Network Simulator. (See below for
changes between 3.1.116 and 3.1.147)

For a complete list of changes between Version 3.0 to 3.1 see the file
ftp.cs.toronto.edu:/pub/xerion/CHANGES.ALL

1) A more general bp simulator, with more activation functions, error
   terms, cost terms, etc.

2) A new cascade correlation simulator (thanks to Brion Dolenko).

3) An improved and generalized method for handling the network
   complexity cost.

4) An improved command line interface. It now has conditional
   evaluations, loops, and command substitution.

5) Many new commands, among them:
	doExample - activate the network on a single example.
	doExamples - activate the network on an entire example set.
	calc - do floating point arithmetic calculations.
	exec - execute a xerion shell script.
	rangeTerminate - stop minimizing when all outputs are within
	   some range of their targets

6) A new graphical interface for manipulating unit activation
   functions, error terms, network cost models, etc. once a network is
   built. 

7) A new graphical interface for examining and setting general data
   structures.

8) An improved "Learning Methods" display.

9) A new display for showing a mixture of gaussian distribution (soft
   weight-sharing) cost model during training.

10) You can now show both incoming and outgoing connections in the
   "Connection Display".

11) The commands saveWeights and loadWeights have been greatly
   improved.

12) You can automatically save weights while training.

13) Examples have been modified to have: "tag" names; extensions;
   creation and destruction hooks; and to be able to store examples at
   arbitrary precision (down to 1 bit per input/target).

14) There are new methods for adding, copying, permuting, and deleting
   examples.

15) You can now constrain weights to be positive.

16) Xerion now uses a faster, table lookup sigmoid and a private
   (better) random number generator.

17) The code has been Standardized to make porting to other platforms
   easier.

18) *Loads* of minor changes and bug fixes.

########################################################################

This is a list of the most important changes made between Versions 
3.1.116 and 3.1.147 of the Xerion Neural Network Simulator (not in
chronological order, for those who care). 

1) Various bug fixes in the installation procedure were fixed up. This
   should make it easier to compile for people running under openwindows.

2) There is a change in the variables the "exec" command creates and
   sets. Now it uses:

	${tokc} - the number of command line tokens
	${tokv[]} - the array of tokens (1, 2, ... tokc - 1)
	$*	- the complete command line

   This syntax is much closer to that used when writing your own
   commands. 

3) Variables can now be nested. E.g.
	bp-> var String foo
	bp-> var String bar
	bp-> set foo = bar
	bp-> set bar = junk
	bp-> echo ${foo}
	bar
	bp-> echo ${${foo}}
	junk

4) There is a new syntax for command substitution (back-quotes still
   work). It's a bit more powerful:

	bp-> echo `hello`
	Hello!
	bp-> echo $(hello)
	Hello!
	bp-> print $(unitLongName Output.0).output
	0.9876

5) Aliases are now disabled by default (set "alias-enabled" to "true"
   to re-enable them). There is a deep bug in them that may mess up
   escaped characters. You can always use script files instead of
   aliases (they're more general, more powerful, and more debuggable).

6) The behaviour of "echo" and "read-echo" has been modified so that
   commands are echoed just before they're executed, and have been
   fully substituted.

7) There are two new commands for moving examples between example sets
   (moveExample and moveExamples).

8) There were various minor changes in the simulator library to
   improve performance.

9) There were various minor changes in the itf library to improve
   performance. This can make some script files (notably those that
   use loops and 'calc' alot) run about 10 times faster. 

10) Minimize has been modified so that interrupts now cause it to
   register as having finished with an error (so that you can
   interrupt it when started from a script file).

11) Help message for addExamples are now up to date.

12) All BSD bcopy functions have been replaced with the equivalent
   memcpy functions.

13) Bug fixed where commands in loops and command substitutions were
   not being echoed.

14) A bug in fiddling weights in the connection display with the mouse
   has been fixed.

15) Fixed various bugs in the command line variable creation routines.

16) Fixed various bugs in the original hp port.

17) Fixed various bugs in caught only by gcc.


 -- Drew van Camp --------------------------- drew@cs.toronto.edu --
 -- Dept. of Computer Science, University of Toronto ---------------
 -- 6 Kings College Road, Toronto, Ontario -- Vox: (416) 978-7403 --
 -- CANADA M5S 1A4 -------------------------- Fax: (416) 978-1455 --

					Tue Feb 23 11:59:39 EST 1993
