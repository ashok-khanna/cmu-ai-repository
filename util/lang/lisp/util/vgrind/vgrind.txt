# [vt]grind entry for CLtL
# COMMON LISP ENTRY
#
# VGrind and TGrind are programs for formatting code for many programming
# languages. This file contains a [vt]grind entry for Common Lisp posted
# by Marco Antoniotti to comp.lang.lisp on December 16, 1993.
# It has some bugs; improvements are welcome. Please send them to both
# marcoxa@cs.nyu.edu and ai.repository@cs.cmu.edu.
#
# The kw property follows the actual index of CLtL2.
# Keywords are the major types, the special forms and the major
# defining macros (like 'defclass'), plus a random choice of functions
# (e.g. the magnificent 7).
#
# Note: the stupid tgrind does not accept very long entries, so I have
#       to cut down the number of keywords.

clisp|CLISP:\
	:pb=^\d?\((defun|defmacro|defstruct|defclass|defgeneric|defmethod|\
	labels|flet|macrolet|defvar|defconstant|defparameter|deftype)\
	\d\p(\d|\d\a\d):\
	:bb=\(:\
	:be=\):\
	:cb=\#\|:\
	:ce=\|\#:\
	:ab=;:ae=$:\
	:id=\-\+\:_\.\#\|\':\
	:sb=":\
	:se=\e":\
	:pl:px=\(\a?\d?\p\d?\a?:\
	:tc=cltypes:

cltypes:\
	:kw=\
	t\
	number integer ratio rational real float\
	complex \#C\
	character \#\\\
	atom\
	symbol function\
	sequence\
	cons null \(\) list\
	array\
	vector\
	string\
	bit\
	\#\* bit-vector\
	hash-table\
	readtable\
	package\
	pathname\
	stream\
	random-state\
	\#\S\
	keyword\
	nil\
	deftype satisfies typep subtypep type-of:\
	:tc=clforms:

clforms:\
	kw=block catch declare eval-when flet go if labels let let\*\
	quote return-from\
	return setq tagbody the throw\
	locally\
	lambda \&optional \&rest \&key \&aux\
	defun defvar defconstant defparameter:\
	:tc=clconstr:

clconstr:\
	kw=eq eq equal equalp\
	setf psetf\
	apply eval funcall\
	when unless cond case\
	loop do do\* dolist dotimes\
	values\
	defmacro \&body \&whole \&environment\
	:tc=clrest:

clrest:\
	kw=\
	declare\
	defpackage provide require\
	car cdr first rest\
	defstruct\
	read format\
	defclass defgeneric defmethod\
	error cerror:
