Package:      lang/lisp/code/io/xp/

Name:         XP

Summary:      XP Common Lisp pretty printer

Version:      

Description:

   XP provides efficient and flexible support for pretty printing
   in Common Lisp.  Its single greatest advantage is that it allows the
   full benefits of pretty printing to be obtained when printing
   data structures, as well as when printing program code.

   XP is efficient, because it is based on a linear time algorithm that
   uses only a small fixed amount of storage.  XP is flexible, because
   users can control the exact form of the output via a set of special
   FORMAT directives.  XP can operate on arbitrary data structures,
   because facilities are provided for specifying pretty printing methods
   for any type of object.

   Note: This will be part of the new Common Lisp standard, so
     distributing it separately will be unnecessary in a few years
     once all implementations support the new standard.

Requires:     

Ports:        Portable.

Origin:       MERL.COM: /pub/xp/xp* and /pub/lptrs/xpx*

Copying:      

Updated:      

CD-ROM:       Prime Time Freeware for AI, Issue 1-1

Bug Reports:  

Mailing List: None.

Author(s):    Dr. Richard C. Waters, <dick@merl.com>
              Mitsubishi Electric Research Laboratories
              201 Broadway
              Cambridge MA 02139
              617-621-7508

Contact:      

Keywords:     

   Lisp!IO, Input, Output, IO, Pretty Printing, Printing Data
   Structures, Authors!Waters, XP

Contains:    

   xp-code.lisp     ; Code for XP
   xp-test.lisp     ; Test cases to check the code on a new Lisp
   xp-doc.txt       ; Brief documentation
   xpx-code.lisp    ; example of using XP (see Lisp Pointers 5(2), 1992)
   xpx-test.lisp    ; Test cases for complex example

See Also:    

References:   

   Waters R.C., ``Pretty Printing'' in Common Lisp: the
   Language, Second Edition, 748--769, Steele G.L.Jr., Digital Press,
   Burlington MA, 1990.

   Waters R.C., ``Using the New Common Lisp Pretty Printer'', ACM Lisp
   Pointers, 5(2):27--34, April 1992.
