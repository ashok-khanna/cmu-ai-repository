Package:      lang/lisp/code/iter/iterate/

Name:         Iterate

Summary:      An iteration macro for Lisp.

Version:      1.2, 7/26/91

Description:  

   Iterate is Jonathan Amsterdam's alternative to SERIES and the LOOP
   macro. It provides a superset of LOOP's features in a much more
   pleasant, Lisp-like syntax. Iterate is also extensible, has better
   support for nested loops, and generates inline code.

Requires:     

Ports:        Any valid Common Lisp, including Symbolics, Lucid, Allegro.

Origin:       ftp.ai.mit.edu:pub/Iterate/  [128.52.32.11 or 128.52.54.11]
                 README, aimemo.sty, iter-man.tex, iterate-bare.tex,
                 iterate.lisp

Copying:      Copyright 1989 Jonathan Amsterdam, with free use,
              copying, modification, and distribution.

Updated:      8/27/93

CD-ROM:       Prime Time Freeware for AI, Issue 1-1

Bug Reports:  bug-iterate@ai.mit.edu

Mailing List: info-iterate@ai.mit.edu

Author(s):    Jonathan Amsterdam

Contact:      Jonathan Amsterdam <jba@ai.mit.edu>, <jamsterd@shearson.com>

Keywords:     

   Iteration!Iterate, Lisp!Iteration, Iterate, Authors!Amsterdam

Contains:     

   iterate-1.2.lisp     ; source code for iterate
   doc/iterate-bare.tex ; a brief "advertisement" for iterate (Latex)
   doc/iter-man.tex     ; the iterate manual (Latex)
   doc/aimemo.sty       ; used by iter-man.tex

See Also:     

   lang/lisp/code/iter/for
   lang/lisp/code/iter/loop
   lang/lisp/code/iter/series

References:   

   Jonathan Amsterdam, ``The Iterate Manual,'' MIT AI Lab Memo #1236, 
   MIT, Cambridge, MA, 1991.


