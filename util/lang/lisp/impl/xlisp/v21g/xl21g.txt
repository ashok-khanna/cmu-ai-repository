This disk contains the XLISP files you requested. The files are in a
self extracting arj archive, xlisp21e.exe, or in multiple archive files.

To differentiate this version from the original David Betz version,
this one is called XLISP-PLUS 2.1G. The alphabetic character will be
increased in future versions.

For the self extracting archive, go to the directory you wish to
install xlisp, and run:

xlisp21G

The program will extract into about 2.5 megabytes of files in several
subdirectories.


In the separate archive version (distributed via BBSes and Internet
FTP sites) the following files exist:

Archive XL21GSRC:
Contains all source files. Consult the README.SRC file in that archive
for additional information.

Archive XL21GDOC:
Contains ASCII documentation for XLISP-PLUS.

Archive XL21GPSD:
Contains documentation in Postscript format (using Times Roman font).

Archive XL21GREQ:
Contains this file, update file (README.UPD), information about the
Microsoft Windows version (README.WIN), and all the LISP source files
REQuired for operation (see README.LSP). 

Archive XL21GEXE: 
Executable program which runs on any generic IBM/PC or Clone.
Compiled using Borland C++ 4.0 (as a C compiler), Ralf Brown's spawno
version 3.0 for nice SYSTEM function, and Fabrice Bellard's lzexe to
compact the executable.

Archive XL21G386:
Executable program which requires 80386 or 80486, and at least 1
megabyte of extended memory. Uses DJ Delorie's port of the GNU C
compiler, and his DOS extender, GO32. Compatible with DPMI, VCPI,
and XMS. Sources are available from any SimTel mirror site, such
as oak.oakland.edu.

This archive also contains EMU387, the emulator for above. To use,
set environment variable "set go32=emu c:/bin/emu387" assuming this
file is in c:\bin directory. YOU MUST USE THIS EMULATOR FOR XLISP.EXE
ON SYSTEMS WITHOUT THE FLOATING POINT COPROCESSOR (486SX, 386 without
387, and a number of non-Intel 486 variations).

Archive XL21GWIN:
Executable for Microsoft Windows 3.1, using an 80386 or better. See
file readme.win for details.

**********************

OTHER VERSIONS: 

MS DOS: I am no longer building other versions (such as 80286, or
80x87 support for real mode).

OS/2: Don't have this, yet.

OS/2 Presentation Manager: Not likely.

AMIGA: Now available (but I can't test it).

IBM Mainframe (370): Now available (but I can't test it).

UNIX: Seems to work on BSD style systems and Suns, at least. Those with
ancient compilers may require some code/include file touchups.

Macintosh: A Macintosh version has been generated and is being
supported by Brian Kendig (bskendig@netcom.com). It can be found at 
the archive sites sumex.standford.edu and mac.archive.umich.edu.

Others computers: I've tried to make the code as portable as
possible. You'll need to write a *STUFF.C file for your system. Also
read XLISP.H closely. All the 80x86'isms are conditionally included,
so these won't get in the way.

C++: It won't compile, but you should be able to hack on the code a while
and get it to go. The ANSI C conversion work I've done should help you,
although I've only converted function headers as necessary to keep the
C compilers happy.


Tom Almy

tom.almy@tek.com  (Internet)  OR
Tom Almy, 1:105/290 (Fidonet)
