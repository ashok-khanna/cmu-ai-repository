Short: CLISP, a Common-Lisp implementation.
Type: dev/lang/
Author: haible@ma2s2.mathematik.uni-karlsruhe.de, hoehle@inf-wiss.uni-konstanz.de
Uploader: hoehle@inf-wiss.uni-konstanz.de

This archive contains the Amiga version of CLISP as of 8th November 1993,
slightly modified on 11th of December. Please see the files clisp.man and
README too. Aminet archive names have been shortened to fit the 20 characters
limit.

There are two distinct binary versions of CLISP. These will be referred as
*-high and *-low. Depending on your machine, you'll be able to run one or the
other, or both, or - hopefully not - none.

o The *-low Version:

  + has been compiled with a 68000 in mind. It can only deal with a 16MB
    address space ranging from 0 to 0x00FFFFFF. It clears the upper 8 bits of
    a 32 bit address before putting it on the bus and won't forget to check
    the memory it gets from the system.

  * checks whether AllocMem(MEMF_ANY) returns memory in the above range. If
    not, and if the CPU is not a 68000, it uses MEMF_24BITDMA (MEMF_CHIP on
    pre-2.0 machines) to ensure that it does not get memory outside the 16MB
    address range. DMA-able memory is a bit too hard a requirement, but there
    are no other flags.

  + can be made to run on a A3000 or A4000 by patching the executable to load
    the code and data hunks into CHIP memory (24BITDMA would suffice with
    >=2.0, but one can't say that easily in the load hunk structure). The
    supplied ratom.rexx ARexx script can do this for you, but you really
    don't want to run CLISP out of CHIP memory now that there is the *-high
    version.

o The *-high version:

  + has been compiled for 68020 and higher, won't run on 68000 CPUs.

  + is able to deal with addresses from 0 to 0x07FFFFFF, thus working on A3000
    and A4000 machines. I have been told that GigaMem uses addresses between
    0x20000000 and 0x60000000. CLISP cannot run with that.

  * checks the memory it gets, reverting to MEMF_24BITDMA (>2.0, otherwise
    MEMF_CHIP), like above.

o The Lisp-part of CLISP is in the CLisp-*-Part2 archive, e.g. the compiler
  source can be found there. The archive also contains the compiled Lisp
  files (with the .fas extension), enabling you to easily build your own
  lispinit.mem file. You can generate own lispinit.mem file by executing
  lisp.run -x (LOAD"init.fas")(SAVEINITMEM) in a shell, or call (SAVEINITMEM)
  directly when in your Lisp world.

o The complete CLISP source can be found in the clispsrc-1993-11-08.tar.gz
  archive (see file ANNOUNCE). You need to have GNU-zip (gzip) and tar (or
  gtar) to be able to unpack it. I rearchived it for Aminet distribution into
  CLispsrc-931108.lha.

      Joerg Hoehle.
hoehle@inf-wiss.uni-konstanz.de
