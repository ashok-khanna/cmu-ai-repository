Package:      lang/scheme/impl/scm/hobbit/

Name:         Hobbit

Summary:      Compiler for SCM code.

Version:      3

Description: 

   HOBBIT is a small compiler for Scheme. It compiles Scheme programs
   to C, and is intended to be used with Aubrey Jaffer's SCM scheme
   interpreter. It treats SCM as a C library and integrates compiled
   functions into SCM as new primitives. The main aim
   of Hobbit is to produce maximally fast C programs which retain
   most of the original Scheme program structure, making the output C
   program readable and modifiable. Hobbit is written in Scheme and is
   able to compile itself. 

   Hobbit imposes strong restrictions on the higher-order features of
   Scheme. For example, it does not support continuations, it does not
   allow the return of closures by functions or function redefinition, 
   and doesn't support CALL/CC, APPLY, FORCE, and DELAY.

   The compiler uses lambda-lifting instead of closures.

   If you find Hobbit useful, please support the development and
   maintenance of Hobbit by sending money to Tanel.

Requires:     SCM

Ports:        

Origin:       swiss-ftp.ai.mit.edu:/archive/scm/
              prep.ai.mit.edu:/pub/gnu/jacal/
              cs.indiana.edu:/pub/scheme-repository/new/, 
              ftp.maths.tcd.ie:/pub/bosullvn/jacal/
              
Copying:      Copyright (C) 1992-93 Tanel Tammet
              Use, copying, modification, and distribution permitted.
              (See file hobbit.tms for details.)

Updated:      Thu Nov 10 23:21:53 1994

CD-ROM:       Prime Time Freeware for AI, Issue 1-1

Bug Reports:  

Mailing List: 

Author(s):    Tanel Tammet <tammet@cs.chalmers.se>
              Department of Computer Sciences
              Chalmers University of Technology
              University of Go"teborg
              S-41296 Go"teborg
              Sweden

Contact:      

Keywords:     

   Scheme!Implementations, Programming Languages!Scheme, SCM, HOBBIT,
   Authors!Tammet, Chalmers Univ. of Technology, Compilers!Scheme

Contains:    ???

See Also:    

   lang/scheme/impl/scm/

References:   
