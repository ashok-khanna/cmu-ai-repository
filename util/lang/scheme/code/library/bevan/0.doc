Package:      lang/scheme/code/library/bevan/

Name:         

Summary:      Miscellaneous collection of Scheme code from Stephen Bevan.

Version:      26-JAN-92

Description: 

   This directory contains a collection of miscellaneous Scheme code from
   Stephen Bevan. It includes, among other things, the augmented term
   rewriting system from Wm Leler's book, the code from Sigplan on
   building abstract iterators using continuations, an interpreter for
   the language LOOP, a SKI compiler, an AVL tree implementation (without
   delete), and implementation of gensym, quicksort, read-line, and various
   useful string functions. 

Requires:     

Ports:        

Origin:       
              
Copying:      Copyright (c) 1991 University of Manchester, 
              Department of Computer Science

Updated:      

CD-ROM:       Prime Time Freeware for AI, Issue 1-1

Bug Reports:  

Mailing List: 
 
Author(s):    Stephen Bevan <bevan@cs.man.ac.uk>

Contact:      

Keywords:     

   Programming Languages!Scheme, Scheme!Code Libraries,
   AVL Trees, Term Rewriting, Iteration!Scheme, LOOP Macro, SKI, Gensym,
   Quicksort, READ-LINE, Strings, Authors!Bevan, Univ. of
   Manchester 

Contains:    ???

See Also:    

References:   

   Ivan Bratko, "Prolog programming for Artificial Intelligence", 
   ISBN 0-201-14224-4.

   Christopher Coyle and Peter Grogono, "Building Abstract Iterators
   Using Continuations", SIGPLAN Noticies 26(2):17-24, February 1991.

   M.J.C Gordon, "On the Power of List Iteration", The Computer Journal
   22(4):376-379, 1979.

   Wm Leler, "Constraint Programming Languages - Their Specification and
   Generation", Addison Wesley. ISBN 0-201-06243-7.

   Simon L. Peyton Jones, "The Implementation of Functional Programming
   Languages", Prentice Hall. ISBN 0-13-453325-9.

