From cial@cs.cuhk.hk Thu Jul  7 14:04:08 EDT 1994
Article: 10865 of comp.lang.prolog
Xref: glinda.oz.cs.cmu.edu comp.constraints:201 comp.lang.prolog:10865
Newsgroups: comp.constraints,comp.lang.prolog
Path: honeydew.srv.cs.cmu.edu!fs7.ece.cmu.edu!europa.eng.gtefsd.com!sundog.tiac.net!usenet.elf.com!rpi!psinntp!hk.super.net!uxmail!hpg30a.csc.cuhk.hk!eng_ser1!cial
From: cial@cs.cuhk.hk (Implementation of ICLP(R))
Subject: Announcing CIAL Version 1.0 (Beta) ...
Message-ID: <CsI9yx.3J0@eng_ser1.ie.cuhk.hk>
Keywords: Interval analysis, Constraint Logic Programming
Lines:  89
Sender: news@eng_ser1.ie.cuhk.hk
Organization: Engineering Faculty, The Chinese U. of Hong Kong
Date: Wed, 6 Jul 1994 06:28:08 GMT


		Release of CIAL Version 1.0 (Beta)

CIAL is an interval constraint logic programming language.  The main 
difference between CIAL and other CLP(Interval) languages is that a linear 
constraint solver, which is based on preconditioned interval Gauss-Seidel 
method, is embedded in CIAL in addition to the interval narrowing solver.

The main motivations for a linear solver are:
* Pure interval narrowing fails to narrow the intervals to any useful 
  width even for such simple systems as {X+Y=5, X-Y=6}.  Interval
  splitting may help but is costly.
* Pure interval narrowing cannot always detect inconsistency or halt
  (in a reasonable time).  A simple example is {A+1=D, A+B=D, A>0, B<0}.
* Efficient linear constraint solver is also important to the study of
  efficient non-linear constraint-solving.  Recent results show that 
  interval Newton method works better than pure interval narrowing for 
  solving non-linear constraints, but may require to solve many linear
  constraints in order to give the best results.

This version of CIAL prototype is implemented as an extension to CLP(R) v1.2
and tested on Sun Sparc machines.  You should have obtained CLP(R) from
IBM prior to installing CIAL.  Please contact joxan@watson.ibm.com for
further enquiries regarding CLP(R).  Our distribution is in the form of
patches to the CLP(R) sources.

If you are interested in obtaining CIAL, please send a request to

	cial@cs.cuhk.hk

Jimmy Lee
Department of Computer Science
The Chinese University of Hong Kong
Hong Kong
--------------------------------
Related papers to CLP(Interval) languages are:

\bibitem{van}
F.~Benhamou, D.~McAllester, and P.~Van~Hentenryck.
\newblock {CLP(Intervals)} revisited.
\newblock Technical report, Brown University, USA, 1994.

\bibitem{fre94}
F.~Benhamou and W.J. Older.
\newblock Applying interval arithmetic to real, integer and boolean
  constraints.
\newblock {\em (to appear) Journal of Logic Programming}, 1994.

\bibitem{ckchiu}
C.K. Chiu and J.H.M. Lee.
\newblock Towards practical interval constraint solving in logic programming.
\newblock Technical report, The Chinese University of Hong Kong, Hong Kong,
  1994.

\bibitem{cleary87}
J.G. Cleary.
\newblock Logical arithmetic.
\newblock {\em Future Computing Systems}, 2(2):125--149, 1987.

\bibitem{twlee}
J.H.M. Lee and T.W. Lee.
\newblock A {WAM}-based abstract machine for interval constraint logic
  programming and the multiple-trailing problem.
\newblock In {\em Proceedings of the Sixth IEEE International Conference on
  Tools with Artificial Intelligence}, New Orleans, USA, November 1994.

\bibitem{lee92d}
J.H.M. Lee and M.H. van Emden.
\newblock Adapting {CLP(${\cal R}$)} to floating-point arithmetic.
\newblock In {\em Proceedings of the International Conference on Fifth
  Generation Computer Systems 1992}, pages 996--1003, Tokyo, Japan, June 1992.

\bibitem{lee93b}
J.H.M. Lee and M.H. van Emden.
\newblock Interval computation as deduction in {CHIP}.
\newblock {\em Journal of Logic Programming}, 16(3 \& 4):255--276, 1993.

\bibitem{older89c}
William Older and Andr\'{e} Vellino.
\newblock Extending prolog with constraint arithmetic on real intervals.
\newblock Technical report, Computing Research Laboratory, Bell-Northern
  Research, Ottawa, Ont., Canada, April 1989.

\bibitem{sid92}
G.~Sidebottom and W.S. Havens.
\newblock Hierarchical arc consistency for disjoint real intervals in
  constraint logic programming.
\newblock {\em Computational Intelligence}, 8(4), 1992.


