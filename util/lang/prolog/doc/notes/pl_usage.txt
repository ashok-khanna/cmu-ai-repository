From crabapple.srv.cs.cmu.edu!fs7.ece.cmu.edu!europa.eng.gtefsd.com!uunet!decwrl!pa.dec.com!decprl!decprl!vanroy Wed Aug 18 13:06:19 EDT 1993
Article: 8343 of comp.lang.prolog
Xref: crabapple.srv.cs.cmu.edu comp.lang.prolog:8343
Newsgroups: comp.lang.prolog
Path: crabapple.srv.cs.cmu.edu!fs7.ece.cmu.edu!europa.eng.gtefsd.com!uunet!decwrl!pa.dec.com!decprl!decprl!vanroy
From: vanroy@prl.dec.com (Peter Van Roy)
Subject: Results from the comp.lang.prolog poll of Prolog use
Message-ID: <1993Aug17.094757.1435@prl.dec.com>
Sender: news@prl.dec.com (USENET News System)
Nntp-Posting-Host: prl332.prl.dec.com
Organization: Digital Equipment Corporation - Paris Research Laboratory
Date: Tue, 17 Aug 1993 09:47:57 GMT
Lines: 70

Results from the comp.lang.prolog poll of Prolog use, June 1993
---------------------------------------------------------------

This summarizes the responses I got from two questions: which Prolog
system(s) are you currently using seriously, and which system(s) did you
ever use seriously or are you planning on using.  Some people using
other logic languages (committed-choice, constraints, etc) responded;
their replies are kept.

I received a total of 240 language responses (usually more than one
per person).  Because of the small sample size and the self-selected
sample, the results should be taken with a few grains of salt.  The
results are given in random order.

To avoid any conflict of interest, no-one involved in the implementation
responded for Aquarius Prolog or Wild_Life :-).

Peter

----------------------------------------------------------------
Peter Van Roy                      DEC Paris Research Laboratory
Email: vanroy@prl.dec.com              Phone: (33)-1-47.14.28.65


Currently using seriously
-------------------------

Very popular (>10 responses):
  SICStus Prolog.

Moderately popular (~5 responses):
  Quintus Prolog, IF/Prolog.

Slightly popular (>1 response):
  ECLiPSe, Goedel, Wild_Life, Open Prolog, SWI Prolog.

Mentioned (sometimes by the system's author!):
  IBM Prolog 1.2 (for 370), Muse, Aurora, ALS Prolog, Megalog, Coral,
  KL1 PDSS, Turbo/PDC Prolog, AKL, CLP(R), Delphia Prolog, Prolog III,
  BIM Prolog, SB-Prolog (Acorn), JAM Parallel Parlog, FGHC (Meiko),
  Arity Prolog, MacProlog 4.5, LAURE 3.0, Subset Equational Language Version 2,
  NU Prolog, SEPIA, Lambda Prolog (MALI), CHIP, Bin Prolog.

Ever used seriously or planning on using
----------------------------------------

Very popular:
  SICStus Prolog, Quintus Prolog, C-Prolog.

Moderately popular:
  Turbo/PDC Prolog, MU Prolog, NU Prolog, LPA Prolog, IF/Prolog, SEPIA,
  DEC-10 Prolog, CLP(R), SWI Prolog, Arity Prolog, SB-Prolog, Bin Prolog,
  Prolog II.

Slightly popular:
  AAIS Prolog, Open Prolog, BNR Prolog, Edinburgh Prolog (NIP),
  JAM Parallel Parlog, ALP MacProlog, ECLiPSe, Aquarius Prolog, Parlog,
  Poplog, Micro-Prolog, LPA+Parlog, IBM Prolog.

Mentioned (sometimes by the system's author!):
  Prolog-I PC, Muse Aurora, Prolog-KR (In Lisp), Expert Systems Ltd. Prolog,
  E.S.L. Prolog 2, XPro Prolog, ALS Prolog, ZYX Prolog (Mac), PDSS, LDL,
  Prolog 2, LM-Prolog, DECProlog (DEC 2060), VN-Prolog, LPA+Parlog++, L&O,
  Delphia Prolog, Prolog III, Humbroldt Prolog (Acorn), Prolog X (Acorn),
  BIM Prolog, Planner-like (in Lisp), IC-Prolog, Waterloo Prolog, M-Prolog,
  Prolog Professional (LPA), SPM Prolog, PC-Parlog, PCN, OPAQUE, (homebrew),
  Concurrent Prolog, Flat Concurrent Prolog, KCM-SEPIA, ElipSys, Strand-88,
  ECRC-Prolog, ICM-Prolog (minimal system), Quintec Prolog, Modula-Prolog,
  AIS Prolog, UNIX Prolog, Goedel, CHIP, Salix Prolog (Atari), VIP, PD-Prolog,
  VM - MVS Programming in Logic, UNSW Prolog.


