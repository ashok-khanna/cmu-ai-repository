Package:      lang/prolog/impl/prolog/elp/

Name:         eLP

Summary:      Ergo Lambda Prolog

Version:      0.15 (12-FEB-90)

Description: 

   eLP (Ergo Lambda Prolog) is an interpreter written by Conal Elliott,
   Frank Pfenning and Dale Miller in Common Lisp and implements the core
   of lambda Prolog (higher-order hereditary Harrop formulas). It is
   embedded in a larger development environment called ESS (the Ergo
   Support System).  eLP implements all core language feature and offers
   a module system, I/O, some facilities for tracing, error handling,
   arithmetic, recursive top-levels, on-line documentation and a number
   of extended examples, including many programs from Amy Felty's and
   John Hannan's thesis.  

   (Lambda Prolog extends Prolog with a polymorphic type system,
   higher-order programming, simply typed lambda-terms as data
   structures, higher-order unification, scoping mechanisms for program
   clauses and parameters, and modules and data abstraction.)

   ****************************************************************
   *** Note: Although eLP is still distributed, it is no longer ***
   *** actively maintained.                                     ***
   ****************************************************************

Requires:     

Ports:        It should run in Allegro Common Lisp, Lucid Common Lisp,
              Kyoto Common Lisp, CMU Common Lisp and Ibuki Common Lisp. 

Origin:       ftp.cs.cmu.edu:/afs/cs.cmu.edu/project/ergo/export/ess/

Copying:      

Updated:      

CD-ROM:       Prime Time Freeware for AI, Issue 1-1

Bug Reports:  elp-bugs@cs.cmu.edu

              [Note: The eLP implementation of lambda Prolog is no
               longer being developed or maintained.]

Mailing List: elp@cs.cmu.edu
              To subscribe to the mailing list, send mail to
              elp-request@cs.cmu.edu 

Author(s):    Conal Elliott <conal@kestrel.kestrel.edu>
              Frank Pfenning <fp@cs.cmu.edu>
              Dale Miller <dale@cis.upenn.edu>
              Example suites by Scott Dietzen, Amy Felty, and John Hannan.

Contact:      Frank Pfenning <fp@cs.cmu.edu>
              School of Computer Science
              Carnegie Mellon University
              Pittsburgh, PA 15213-3890
              Tel: 412-268-6343

Keywords:     

   Prolog!Implementations, Programming Languages!Prolog, eLP, 
   Ergo Lambda Prolog, Lambda Prolog, Prolog in Common Lisp,
   Authors!Pfenning, Authors!Elliott, 
   Authors!Miller.Dale, CMU, Interpreters!Lambda Prolog

Contains:    

   ergolisp.tar.gz    The Ergo project's extensions to Common Lisp,
                      including some facilities for attributes and
                      dealing with abstract syntax trees. 

   sb.tar.gz          The Ergo Parser/Unparser/Formatter generator 

   ab.tar.gz          The Ergo Attribute Grammar facility. 

   elp.tar.gz         The Ergo implementation of lambda Prolog.  

   sb.tar.gz          You need this file to customize grammars.

   display.tar.gz     A higher-level Common Lisp/X interface used
                      optionally by eLP. Runs in Lucid and Allegro.

   mellowcard.tar.gz  A window-oriented documentation system for eLP.

See Also:    

   lang/prolog/impl/prolog/lp/
   lang/prolog/impl/prolog/pm/

References:   

